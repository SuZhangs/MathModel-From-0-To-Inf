(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    893911,      16963]
NotebookOptionsPosition[    882759,      16776]
NotebookOutlinePosition[    883154,      16793]
CellTagsIndexPosition[    883111,      16790]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\:57fa\:672c\:8fd0\:7b97", "Chapter",
 CellChangeTimes->{{3.841777994780905*^9, 
  3.8417779973806925`*^9}},ExpressionUUID->"b4374dd0-12af-42f8-bb69-\
8616f9e902da"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"10", "!"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\:6ce8\:610f\:8981\:5728\:82f1\:6587\:72b6\:6001\:4e0b\:8f93\:5165", 
     "*"}], "\:ff09"}]}]}]], "Input",
 CellChangeTimes->{{3.8417772507408056`*^9, 3.8417773049808044`*^9}, 
   3.8417778775835533`*^9},ExpressionUUID->"7c1f851e-6632-4907-9446-\
20a193365eb1"],

Cell[BoxData["3628800"], "Output",
 CellChangeTimes->{3.8417772856812167`*^9},
 CellLabel->"Out[4]=",ExpressionUUID->"f986e425-5607-430e-a5af-96379a49564d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"717", "/", "4"}]], "Input",
 CellChangeTimes->{{3.841777312970722*^9, 3.8417773154006357`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"4bc2394a-337a-40df-a69b-573e8912932e"],

Cell[BoxData[
 FractionBox["717", "4"]], "Output",
 CellChangeTimes->{3.84177731592056*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"375e2616-e9c6-474a-a45e-e4731756f607"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"718", "/", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.8417773201205945`*^9, 3.841777335300643*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"66c84cdc-3507-4711-80c9-32a56d7a4100"],

Cell[BoxData["239.33333333333334`"], "Output",
 CellChangeTimes->{{3.84177732781095*^9, 3.841777335820898*^9}},
 CellLabel->"Out[7]=",ExpressionUUID->"c9a9cefb-b022-4c33-9cc2-5e768a43ef5d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  NamespaceBox["WolframAlphaQueryParseResults",
   DynamicModuleBox[{Typeset`q$$ = " 718/3", Typeset`newq$$ = " 718/3", 
    Typeset`chosen$$ = "718/3", Typeset`open$$ = False}, 
    PaneSelectorBox[{False->
     DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
      WolframAlphaClient`Private`assumptionsQ$$ = False}, 
      TagBox[
       FrameBox[
        TagBox[GridBox[{
           {
            InputFieldBox[Dynamic[Typeset`newq$$], String,
             Appearance->None,
             BaseStyle->{"CalculateInput"},
             ContinuousAction->True,
             Enabled->True,
             FieldSize->{{1, 40}, {1, 
                DirectedInfinity[1]}},
             TrapSelection->False], 
            ItemBox[
             ButtonBox[
              PaneSelectorBox[{True->
               TagBox[
                TooltipBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "WABitmaps", "OrangeSquarePlus"],
                  ImageSizeCache->{11., {2., 9.}}],
                 DynamicBox[
                  ToBoxes[
                   FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                   StandardForm]]],
                Annotation[#, 
                 Dynamic[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                 "Tooltip"]& ], False->
               TagBox[
                TooltipBox[
                 
                 DynamicBox[FEPrivate`FrontEndResource[
                  "WABitmaps", "GraySquarePlus"],
                  ImageSizeCache->{11., {2., 9.}}],
                 DynamicBox[
                  ToBoxes[
                   FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                   StandardForm]]],
                Annotation[#, 
                 Dynamic[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                 "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
               ImageSize->All],
              Appearance->None,
              ButtonFunction:>(Quiet[
                 WolframAlpha[]]; If[
                 Or[
                  CurrentValue["OptionKey"], 
                  CurrentValue["AltKey"]], SelectionMove[
                   ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                 NotebookWrite[
                   ButtonNotebook[], 
                   Cell[
                   Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                 WolframAlphaClient`Private`extrudeFromFastParse[" 718/3", 
                   Defer[718/3], "Fast parse"]; Typeset`open$$ = False]),
              Evaluator->Automatic,
              Method->"Queued"],
             Alignment->{Right, Top},
             StripOnInput->False]},
           {
            PaneBox[
             TagBox[
              TooltipBox[
               ButtonBox[
                PaneSelectorBox[{False->
                 StyleBox[
                  RowBox[{"718", "/", "3"}],
                  StripOnInput->False,
                  NumberMarks->False], True->
                 StyleBox[
                  RowBox[{"718", "/", "3"}],
                  StripOnInput->False,
                  ShowSyntaxStyles->False,
                  NumberMarks->False,
                  FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                  CurrentValue["MouseOver"]],
                 BaseStyle->{ShowStringCharacters -> True},
                 FrameMargins->0,
                 ImageSize->Automatic],
                Alignment->Left,
                Appearance->None,
                BaseStyle->{},
                ButtonFunction:>(SelectionMove[
                   ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                   ButtonNotebook[], 
                   Cell[
                    BoxData[
                    RowBox[{"718", "/", "3"}]], "Input"], All]; SelectionMove[
                   ButtonNotebook[], After, CellContents]),
                Evaluator->Automatic,
                ImageSize->Automatic,
                Method->"Preemptive"],
               DynamicBox[
                ToBoxes[
                 FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                 StandardForm]]],
              Annotation[#, 
               Dynamic[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
               "Tooltip"]& ],
             AppearanceElements->{},
             BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
             ImageSize->{Automatic, {1, 100}},
             Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
          },
          AutoDelete->False,
          BaselinePosition->{1, 1},
          FrameStyle->GrayLevel[0.85],
          GridBoxAlignment->{"Columns" -> {{Left}}},
          
          GridBoxDividers->{
           "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
          
          GridBoxItemSize->{
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
         "Grid"],
        Alignment->Top,
        Background->Dynamic[
          FEPrivate`If[
           FEPrivate`And[
            FEPrivate`SameQ[
             FEPrivate`Head[Typeset`newq$$], String], 
            FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
           RGBColor[1., 0.975, 0.95], 
           GrayLevel[1]]],
        BaselinePosition->Baseline,
        FrameStyle->GrayLevel[0.85],
        ImageSize->Automatic,
        RoundingRadius->5,
        StripOnInput->False],
       EventHandlerTag[{
        "MouseEntered" :> 
         FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
         "MouseExited" :> 
         FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
         "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
      DynamicModuleValues:>{}], True->
     TagBox[GridBox[{
        {
         DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
          WolframAlphaClient`Private`assumptionsQ$$ = False}, 
          TagBox[
           FrameBox[
            TagBox[GridBox[{
               {
                InputFieldBox[Dynamic[Typeset`newq$$], String,
                 Appearance->None,
                 BaseStyle->{"CalculateInput"},
                 ContinuousAction->True,
                 Enabled->True,
                 FieldSize->{{1, 40}, {1, 
                    DirectedInfinity[1]}},
                 TrapSelection->False], 
                ItemBox[
                 ButtonBox[
                  PaneSelectorBox[{True->
                   TagBox[
                    TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                    Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                   TagBox[
                    TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                    Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                   WolframAlphaClient`Private`show$$],
                   ImageSize->All],
                  Appearance->None,
                  ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[" 718/3", 
                    Defer[718/3], "Fast parse"]; Typeset`open$$ = False]),
                  Evaluator->Automatic,
                  Method->"Queued"],
                 Alignment->{Right, Top},
                 StripOnInput->False]},
               {
                PaneBox[
                 TagBox[
                  TooltipBox[
                   ButtonBox[
                    PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"718", "/", "3"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"718", "/", "3"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                    Alignment->Left,
                    Appearance->None,
                    BaseStyle->{},
                    ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"718", "/", "3"}]], "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                    Evaluator->Automatic,
                    ImageSize->Automatic,
                    Method->"Preemptive"],
                   DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                  Annotation[#, 
                   Dynamic[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]],
                    "Tooltip"]& ],
                 AppearanceElements->{},
                 BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                 ImageSize->{Automatic, {1, 100}},
                 Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
              },
              AutoDelete->False,
              BaselinePosition->{1, 1},
              FrameStyle->GrayLevel[0.85],
              GridBoxAlignment->{"Columns" -> {{Left}}},
              
              GridBoxDividers->{
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
              
              GridBoxItemSize->{
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
             "Grid"],
            Alignment->Top,
            Background->Dynamic[
              FEPrivate`If[
               FEPrivate`And[
                FEPrivate`SameQ[
                 FEPrivate`Head[Typeset`newq$$], String], 
                FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
               RGBColor[1., 0.975, 0.95], 
               GrayLevel[1]]],
            BaselinePosition->Baseline,
            FrameStyle->GrayLevel[0.85],
            ImageSize->Automatic,
            RoundingRadius->5,
            StripOnInput->False],
           
           EventHandlerTag[{
            "MouseEntered" :> 
             FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
             "MouseExited" :> 
             FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
             "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> 
             True}]],
          DynamicModuleValues:>{}]},
        {
         InterpretationBox[
          StyleBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "FEExpressions", "NecklaceAnimator"][20]],
           AnimatorBoxOptions->{ImageSize->20}],
          Animator[Appearance -> "Necklace", ImageSize -> 20],
          BaseStyle->{"Deploy"}]}
       },
       BaselinePosition->{1, 1},
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"]}, Dynamic[
      TrueQ[Typeset`open$$]],
     BaseStyle->{Deployed -> True},
     ImageSize->Automatic],
    DynamicModuleValues:>{}],
   BaseStyle->{Deployed -> True},
   DeleteWithContents->True,
   Editable->False,
   SelectWithContents->True], "   ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\:8fd9\:79cd\:8f93\:5165\:8ba1\:7b97\:65b9\:6cd5\:9700\:8981\:94fe\:63a5\
\:7f51\:7edc\:4f7f\:7528", "*"}], "\:ff09"}]}]}]], "WolframAlphaShortInput",
 CellChangeTimes->{{3.8417773749661846`*^9, 
  3.8417773952106285`*^9}},ExpressionUUID->"1a820b64-5bab-40d0-be1d-\
eb96b529ec3a"],

Cell[BoxData[
 RowBox[{
  FractionBox["718", "3"], " "}]], "Input",
 CellChangeTimes->{{3.8417773743358946`*^9, 
  3.841777374385765*^9}},ExpressionUUID->"a1c99397-7c52-472e-92fd-\
c7a9ae45b04e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"718", "/", "3"}], ",", "7"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\:7b2c\:4e8c\:4e2a\:53c2\:6570\:662f\:6709\:6548\:6570\:5b57\:4e2a\:6570\
", "*"}], "\:ff09"}]}]}]], "Input",
 CellChangeTimes->{{3.8417774044658012`*^9, 3.8417774360309887`*^9}, {
  3.8417777308913393`*^9, 
  3.841777736720766*^9}},ExpressionUUID->"b3667dad-376e-45f0-9433-\
16b8acd46301"],

Cell[CellGroupData[{

Cell[BoxData[{"239.3333333333333333333`7.", "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RealDigits", "[", 
   RowBox[{"718", "/", "3"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"repeating", " ", "decimal", "  ", "\:5faa\:73af\:5c0f\:6570"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.841777531511194*^9, 
  3.841777568140641*^9}},ExpressionUUID->"17105f2c-ac94-42ee-ae2f-\
f9c6bd5e0c01"],

Cell[BoxData["239.3333333333333333333`7."], "Output",
 CellChangeTimes->{3.8417775452106266`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"8c03da3e-226e-4274-a002-8c8f91ea1d29"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "3", ",", "9", ",", 
     RowBox[{"{", "3", "}"}]}], "}"}], ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.8417775452106266`*^9},
 CellLabel->"Out[11]=",ExpressionUUID->"38d6785b-0dee-4c1f-afd1-fd9e31692158"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", " ", "=", "5"}]], "Input",
 CellChangeTimes->{{3.8417772776108327`*^9, 3.8417772779494877`*^9}, {
  3.8417775771308517`*^9, 3.841777583610722*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"8aad14a8-a656-47ac-a77f-3ab0b959b8ca"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{{3.8417775786407356`*^9, 3.841777583990684*^9}, 
   3.8417776762507935`*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"2d5fbd46-86b3-48cf-a41e-64cdaa1d10a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"3", "a"}], "+", "1", " "}]], "Input",
 CellChangeTimes->{{3.84177758672735*^9, 3.8417775878909187`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"9c6b0f24-90ff-4947-bfce-c6ce6b08af25"],

Cell[BoxData["16"], "Output",
 CellChangeTimes->{3.8417775882710676`*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"df413463-399c-4017-aa9f-7aed5473c639"]
}, Open  ]],

Cell["(*\:6e05\:9664\:3003\:7684\:53d8\:91cf\:5b9a\:4e49\:ff0c\:5c06\:3003\
\:7f6e\:4e8e\:65e0\:5b9a\:4e49\:72b6\:6001.\:6b64\:523ba\:7684\:989c\:8272\
\:53d8\:6210\:84dd\:8272\:ff0c\:8868\:660e\:6ca1\:6709\:8d4b\:503c*\:ff09", \
"Text",
 CellChangeTimes->{{3.8417777231211653`*^9, 
  3.841777749500881*^9}},ExpressionUUID->"0cfb0856-b545-4a63-90a5-\
7c02b86c85ef"],

Cell[BoxData[
 RowBox[{"Clear", "[", "a", "]"}]], "Input",
 CellChangeTimes->{{3.841777591570656*^9, 3.841777619501438*^9}, {
  3.841777700330635*^9, 3.8417777110105357`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"57bbfe29-819d-4515-91de-270a54d336c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:65b9\:7a0b\:7ec4\:8fd0\:7b97", "Chapter",
 CellChangeTimes->{{3.8417780252413483`*^9, 
  3.841778036101011*^9}},ExpressionUUID->"a143bd34-1e58-4043-ab00-\
aa21a5aa6ef9"],

Cell["(*\:5c55\:5f00\:4ee3\:6570\:8868\:8fbe\:5f0f(\:3003+5)(\:3003+9) \
*\:ff09", "Text",
 CellChangeTimes->{
  3.8417777604851103`*^9},ExpressionUUID->"55215beb-8f88-4340-8ce9-\
1774d7850f4d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"a", "+", "5"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"a", "+", "9"}], ")"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.841777259170886*^9, 3.8417772768007975`*^9}, {
   3.841777627581025*^9, 3.841777666990605*^9}, 3.84177775962059*^9},
 CellLabel->"In[18]:=",ExpressionUUID->"2ce8a6f6-dd78-486b-a141-a35dba600ac4"],

Cell[BoxData[
 RowBox[{"45", "+", 
  RowBox[{"14", " ", "a"}], "+", 
  SuperscriptBox["a", "2"]}]], "Output",
 CellChangeTimes->{3.841777762240954*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"8e8731a8-c7c7-4252-9dce-fe008553576d"]
}, Open  ]],

Cell["\:89e3\:5173\:4e8e%\:7684\:65b9\:7a0b2% \[LongDash]7 = 0.", "Text",
 CellChangeTimes->{
  3.8417778170805683`*^9},ExpressionUUID->"a25d5b78-4787-4f45-bd97-\
8e8efaae1c39"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", "x"}], " ", "-", "7"}], " ", "\[Equal]", " ", "0"}], " ", 
   ",", "x"}], " ", "]"}]], "Input",
 CellLabel->"In[19]:=",ExpressionUUID->"58bf4a70-2ffd-4455-bb7f-82449c0c1137"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    FractionBox["7", "2"]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.841777819146283*^9},
 CellLabel->"Out[19]=",ExpressionUUID->"de7559ca-3bae-48e1-b06d-106c42fb68a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", "x"}], "-", "7"}], "\[Equal]", "0"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.841777842410922*^9, 3.841777842410922*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"30aad25a-c0f9-4144-841f-033c13eb3ed6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "3.5`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8417778434508348`*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"635a618e-9b63-4759-b7a1-2c5bd57635e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = " solve 2x-7=0", Typeset`opts$$ = {
   AppearanceElements -> {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
    Asynchronous -> All, 
    Method -> {
     "ExtrusionChosen" -> {
       "Result", "Result", 1, 1, "Input", "Reduce[-7 + 2 x == 0, x]"}, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {"Extrusion", "Warnings", "Assumptions", "Pods"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Input", "numsubpods" -> "1", 
     "position" -> "100", "scanner" -> "Identity", "title" -> 
     "Input interpretation"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Solve[2 x - 7 == 0, x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             TagBox[
              GridBox[{{
                 PaneBox[
                  StyleBox[
                   TagBox[
                    GridBox[{{
                    StyleBox[
                    "\"solve\"", {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    TagBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"2", " ", "x"}], "-", "7"}], "\[LongEqual]", 
                    "0"}], HoldForm]}}, GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 2, 2}, "Rows" -> {{1}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    Global`TagBoxWrapper["Separator" -> " "]], 
                   LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                  BaselinePosition -> Center]}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               ColumnsEqual -> False, RowsEqual -> False, 
               GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
               AllowScriptLevelChange -> False], 
              Global`TagBoxWrapper["Separator" -> " "]], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"error" -> "false", "id" -> "Result", "numsubpods" -> "1", 
     "position" -> "200", "primary" -> "true", "scanner" -> "Solve", "title" -> 
     "Result"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Reduce[-7 + 2 x == 0, x]"}], 
       XMLElement["moutput", {}, {"x == 7/2"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{"x", "\[LongEqual]", 
              TagBox[
               FractionBox["7", "2"], Identity]}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Decimal form", "input" -> "Result__Decimal form"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Result__Step-by-step solution", "stepbystep" -> "true"}, {}]}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Root plot", "scanner" -> "Solve", "id" -> "RootPlot", 
     "position" -> "300", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Plot[{-7 + 2 x, 0}, {x, -5.25, 5.25}]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwtlGs01HkcxgcN0/wrw/wKp7LlOm4xJ1Et5mu7bEW6a1SMayUVYZVJu44u
S7Sl5FYc7YbOUezsiIj+363JKrPYRjW7zqJcZ7eJGLfQrD2nF8/5nM85z6vn
xbM8NHpnhC6Dwdg6m/+ZkFf4Qasl+NC3ZUL7HR8lN/b+Kp0mqPy9rCvgWz6+
K+BkHpokOOaX2ihN4mPIjykuLcMEXXZ45x5K5KNv2cHowl6CJXuk7i2xfLSo
X6H2aCKYGZSTUBjBx+auRwOJ2QQPxYg0Hj58tOF1do44EuRmDQ4mLuJj2ZMc
b9tNXHz1pqmIe9sFuf6R1udijZFdVmn81RoXrOhrbDe6ZfSZzvjFuSJmZz3n
M1dgr4tFWJnCEGNNMyUvVU64Km7klglrAebXTLZSc5xQLek637t+Ho4Jhx7H
WjhiVIf2mH4RG90GtW562x3wqpWhZ8lrFm6++r25Isoek4XbOXlOBgiOvFR5
th2+TL2Xqk5n4hGZv2zsKQ8VLz72Y4MeHomciQvutsVcttin/wtd9GXWF48Y
2qL+AdX1jD0M1CvXbGmwt8HqXSq2re0M/X537eNnm61x8HnY8F+dk3TdcG7d
2EkrTPzmUWnGjjE6qGDQLizLEq9MJUX0aIfpHi+R2SRtgcOR7m/jmt/TXuqN
Sc1/LseQ5p5LxY/6aXlenaRtfBmqVAFbLHlvaE9Pn8g51svQUWm+YY1BG63f
/hOvP9kcB+wjDnCe1NJ77bpTTF8twdEz/AeXL9YIOPFeKWUrF+NRD8lDcrVN
EKtMO1x/zAyz9nRLE/q7BDfsDXZZNJjg1hKn4/3cAcGx7Hgr/amFGMlkZf1h
Pigo+TST77OaYJX/pTZ35bCgeHfNwp5rxhh+0s1o7uExgZ8s/ORUEwfP153e
4PpwUnB63bnapvULUMlKc745My3gjSe0hulSqOa0W59dxwCbjs2Vk6cMsLSC
du5V6cAvRclFqxzn4APXyp2NUj24kp2zLzp3dld5wgmhiAmaFqu1hSkf6b6D
S/+9oGsAh8Mv7uoZHaGXDSjOuD1jAYMONvKtUtFZp4Xzrp1gA248tbalT0mL
Rt9JYzznQXKFeCzgQbngcWxE1TvGAuBkO0gjDLoEIt27lQtLDGHCOLj4nota
YOeh0yeq5sCmN3NdtLWjAki+Fp2eYQQM3ZtJ+8OnBZYNOTYXAo0hw1SUb5qg
A3yt5RFv4IJs+vIdpg4TDnjnOCi4BGKYgeW+21hQF1TRcdaEwJC4XmwYxIKl
Sb9lui4mED+09OsXR1nQUTU+ft2CwKn2js69F1kgchTKhHwCSZJgo7CnLAg1
MQvs8COQGhgen/jlXIhU5/+gSiNw+37U2hJbNjxnS73zLxHgOcj1I93YYM9r
0mzJJHCnyFHhsIEN/4RO7bubO+vp6ihJKBuOKvfbRpcS+DkkuqCugA0xT5ag
RkYA58cxFFwKWrtc44obCcBZhfy6BQX8T742/nICsomVeUI+BcOrz2RUKwg0
dmv4HX4UxJX/LRS/JSCvSQhTpVHQ1jRKOfQR2O782vluLgWuqvl0u4pA6233
6eOlFGgsvaw9P8z65YksjYyC3d7+SrVmts8MCKlWUHA/6Hh64QSBNnGNk/gt
BYuSLnhtmyYgHDL76PGBgs//BcoIcYNWS8F/2NBWIA==
                   "]]}, Annotation[#, "Charting`Private`Tag$2442956#1"]& ], 
                
                TagBox[{}, 
                 Annotation[#, "Charting`Private`Tag$2442956#2"]& ]}}, {}}, {
             GridLines -> Dynamic[
                Map[{{#, 
                   GrayLevel[0.7]}}& , 
                 MousePosition[{"Graphics", Graphics}, None]]], 
              DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, {{-15., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-10., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-5., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-20., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-19., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-18., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-17., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-16., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-14., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-13., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-12., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-11., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-9., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-8., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-7., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-6., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-4., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-3., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-2., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-1., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {2., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {3., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {4., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {5., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, {{-4., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-2., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {2., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {4., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-6., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-5.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-5., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-4.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-3.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-3., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-2.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-1.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-1., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {-0.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {0.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {1.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {2.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {3., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {3.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {4.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {5., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {5.5, 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}, {6., 
                   FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                   0.}, {
                    AbsoluteThickness[0.1]}}}}}, GridLines -> {None, None}, 
              DisplayFunction -> Identity, PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.05], 
                 Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 
              NCache[GoldenRatio^(-1), 0.6180339887498948], 
              Axes -> {True, True}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, AxesStyle -> Directive[
                AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
              DisplayFunction :> Identity, Epilog -> {
                AbsolutePointSize[5], 
                Hue[0], {
                 TagBox[
                  TooltipBox[
                   PointBox[{3.5, 0}], 
                   
                   TemplateBox[{"\"(\"", "3.5`", "\",\"", "0", "\")\""}, 
                    "RowDefault"]], Annotation[#, 
                   Row[{"(", 3.5, ",", 0, ")"}], "Tooltip"]& ]}}, 
              Frame -> {{False, False}, {False, False}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                AbsoluteThickness[0.2]], 
              FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
              GridLines -> {None, None}, GridLinesStyle -> {
                GrayLevel[0.85], 
                GrayLevel[0.9]}, ImageSize -> 330., 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> PointSize[Medium], "PointSizeFunction" -> 
                "SmallPointSize", "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{-5.25, 5.25}, {-17.49999957142857, 
               3.499999571428571}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.02], 
                 Scaled[0.02]}, {
                 Scaled[0.02], 
                 Scaled[0.02]}}, Prolog -> {
                Opacity[0], 
                TagBox[
                 RectangleBox[
                  Scaled[{0, 0}], 
                  Scaled[{1, 1}]], Annotation[#, "Plot", "Frame"]& ]}, 
              Ticks -> {Automatic, Automatic}}], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Number line", "scanner" -> "Solve", "id" -> 
     "NumberLine", "position" -> "400", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"NumberLinePlot[x == 7/2, x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{3.5, 0.06300000000000003}]}, "3.5`"], 
                 Annotation[#, 3.5, "Tooltip"]& ]}, ImageSize -> 330., 
               Axes -> {True, False}, 
               PlotRange -> {{2.4499999999999997`, 4.550000000000001}, 
                 Automatic}, AxesOrigin -> {0, 0}], "\"\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox[
                  "Bottom", FontFamily -> "Bitstream Vera Sans", 
                   FontSize -> -1 + Inherited]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "1DMathPlot"}, {}], "\n "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "4", "datatypes" -> "Solve", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "0.9440000000000001", "parsetiming" -> 
    "0.532", "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP29123ea1hd580e8h43100002a83deh8409dg7cd", "host" -> 
    "https://www5a.wolframalpha.com", "server" -> "29", "related" -> 
    "https://www5a.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa29223ea1hd580e8h43100003bbb5a59761gf74c8012693879508235703", "version" -> 
    "2.6", "inputstring" -> "solve 2x-7=0"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2021, 9, 28, 8, 32, 0.2920789`7.218075173505795}, "Line" -> 21,
     "SessionID" -> 19642527328004497291}, Typeset`showpods$$ = {1, 2, 3, 4}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "Result", "Result", 1, 1, "Input", "Reduce[-7 + 2 x == 0, x]"}, 
   Typeset`open$$ = False, Typeset`newq$$ = " solve 2x-7=0"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$}, 
        Typeset`chosen$$, Typeset`open$$, Typeset`elements$$, Typeset`q$$, 
        Typeset`opts$$, Typeset`nonpods$$, Typeset`queryinfo$$, 
        Typeset`sessioninfo$$, Typeset`showpods$$, Typeset`failedpods$$, 
        Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{208., {49., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$}],
        Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[21]:=",ExpressionUUID->"c77cab2b-49b2-417b-88f1-a9e234f033fe"],

Cell[BoxData[
 TemplateBox[{
  "WolframAlpha","timeout",
   "\"\:5bf9 \\!\\(\\*RowBox[{\\\"WolframAlpha\\\", \\\"[\\\", RowBox[{\\\"\\\
\\\\\" solve 2x-7=0\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"WolframParse\\\\\\\"\\\"}], \\\"]\\\"}]\\) \:7684\:8c03\:7528\
\:5df2\:7ecf\:8d85\:8fc7\:4e86 \\!\\(\\*RowBox[{\\\"30.`\\\"}]\\) \:79d2. \
\:589e\:52a0 TimeConstraint \:9009\:9879\:7684\:503c\:53ef\:80fd\:4f1a\:6539\
\:5584\:7ed3\:679c.\"",2,21,9,19642527328004497291,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8417778973356934`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[21]:=",ExpressionUUID->"b7b88bef-0eb3-4414-b884-\
d35aa30360fd"],

Cell[BoxData[
 RowBox[{"x", "\[Equal]", 
  FractionBox["7", "2"]}]], "Output",
 CellChangeTimes->{3.8417779203396854`*^9},
 CellLabel->"Out[21]=",ExpressionUUID->"75ff4ebc-f8d4-42c4-8ac6-d5a20b83cdad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"2", " ", "x"}], "-", "7"}], "\[Equal]", "0"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"3", " ", "x"}], "-", 
        RowBox[{"2", "y"}]}], "\[Equal]", "0"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}], "\n"}]], "Input",
 CellChangeTimes->{{3.841778049480747*^9, 3.841778049480747*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"fc950dc1-a662-421a-aa61-626401e0cbd4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     FractionBox["7", "2"]}], ",", 
    RowBox[{"y", "\[Rule]", 
     FractionBox["21", "4"]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.841778051221095*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"84f079d2-0ac6-468d-9ee2-ead3b939db9e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"a", "*", 
      RowBox[{"x", "^", "2"}]}], "+", 
     RowBox[{"b", "*", "x"}], "+", "c"}], "\[Equal]", "0"}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.841778060930802*^9, 3.8417780721610136`*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"fbf002e1-b4b1-4788-8e4e-354cae31bc37"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "-", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     FractionBox[
      RowBox[{
       RowBox[{"-", "b"}], "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["b", "2"], "-", 
         RowBox[{"4", " ", "a", " ", "c"}]}]]}], 
      RowBox[{"2", " ", "a"}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8417780618647623`*^9, 3.8417780749110403`*^9}},
 CellLabel->"Out[24]=",ExpressionUUID->"a10da237-ea02-4a05-b0bb-4717f54e2452"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:7ed8\:5236\:56fe\:5f62", "Chapter",
 CellChangeTimes->{{3.841778125100704*^9, 
  3.8417781290512667`*^9}},ExpressionUUID->"75589047-4ced-4386-9ac1-\
c56c9204e16c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"2", "x"}], "-", "7"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "10"}], ",", "10"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\:7ed8\:5236\:65b9\:7a0by", "=", 
     RowBox[{
      RowBox[{"2", "%"}], "-", "7"}]}], ",", 
    RowBox[{"\:5176\:4e2d\:ff05\:4ece\:4e0010\:523010", "."}]}], "*)"}], 
  "\n"}]], "Input",
 CellChangeTimes->{{3.84177815233092*^9, 
  3.841778198321073*^9}},ExpressionUUID->"ed11f8a0-cba9-47ba-b191-\
c34e5b9e5f05"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwt1H801Xccx3HEcrH8uG7cG+7lI+73tkuhK1+2+05Mp1w1oh3ard1Yjt+r
jhT9MErUKhUW7obupHNTTmdJndZ9L4qoO0uYtFUUYZXrR90su2tn3z9e5/Hv
66+nqyI9MsHEyMhI9n7/uXtYNmEwEPxfGoey50/3vyOMNEbYPHpz+S1hpFEQ
kDGbPkkYabxRdNz88RBhpNHcq9cF7xJGGk9u37R6XwVhpFFtvE1l5E8YaTRL
CPPhfuHGGIDs32+m1BS7Mi7DyObyzVS7gNEfs199nHJskI/X37hI2nQSbNpR
nnRhjQs+DJRd6vWUYMTxaME/p5zQ87bIxhC+FMOUP0es/IuHKq3c0z3TD2tb
d/Zsi+Ni12DQ2JV6X5Tnn+T8WueA3sHtRVvu++CeTXPOW7Lno7TBuHc/yweN
xHzNiv32uK/06KPq4CX44NCpAnW3Hb64eae5O2kxOlkknp0KtmX0xuSlIrN+
J2ts5JV8k3pEjJv9/6xrbrbEiwvS7z95sghFWbQhTWWOnCDlXv9IEVb/EdWy
c7kZdr6kBq5VCXE4lxMU5miCU2jxPbHyxKslwtDnMbOatIWrbK9GL8TFI31T
3srXmvBdktnVZwiGXO1nzcaMa4pfZgZrOG6YcfaC3pY9qPGa5kgVCgHGfEWq
7+Xc1iRI7ER3y5yx9U5fkW9Um9Rvc2TrnV08pMW/XFxbNii9+NOarkU8BzTJ
5DyM545LDSHTxbJJNs61WpurePla+u7teo32oA3mPe5ZsfX0rHQ3n7r27QYL
bKg4sHbPhDFUtU3I5ywwxfSaeJunMWYQkpl6PV01o5EnlTsX5JqDTf1H7NbJ
MU3hZ5kBvpWWgMrkmiWTTRpT+5KhvTPzQFBV52foGpb2duwfz7e2hSa5V75n
jl4ana2QlDfbwboXhX2J8+ZAiuWYmzbWHhrE5w4tS2YBX32r9INRDuSc48Xx
6qwhu2lFlHWFA7zOKKh1kbAhozalUeLNhcfhfSmp8vlgZeKv8HrGA0fTtJYN
7VwITV1XIjrhBEUP6kTRHs7geMU5PdTdhVEAx7ceLF7cy2d0hcgDa8TKRgGo
rH6IpVMJiOLyo1W7XWFdo7l65d/u0DPEqjkR7Qbn7rJDPNUeoFU8W27HJ1B5
sz3P/RMhPDE9oy9xI3CDFaFbFCqEqdrEC1wPAs9lv8l9w4XAHRtzchUT8Onp
DQiOFUL8tok33oEE2oaevtqYKYSZPEO9bD2BqbmGuIrzQvD4kcsrPEogfJWv
nx2fgoCw/k6rEwS2Hmms5npQED5SWXCslMB39wKsXcUUfC0WTJcpCQzEwqh3
IAXXLnl01qoJZCXLqmTrKYi85XugpZWA6vAWq8KjFCQkTget7CDQ3jm681gp
BVkWlyc7tATG7dOGy5QUKCPoL7u6CdDK7Tdq1RQ874GggUECnfW5WS2tFMxk
mUwmDL//qzMd6tBS8OGClrMjowR4koNRXd0U+GwMc9DpCMRfP+I1MEhBqDFL
u32aQJGJXeXIKAWfn27P1+sJNHxawtLpKEgKPRyY847A/SLHHXo9BUy/YEZb
8dRgoOBfg1k+Vw==
       "]]},
     Annotation[#, "Charting`Private`Tag$14747#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-10, 10}, {-26.99999918367347, 12.99999918367347}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.841778168906932*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"fb9151cb-dbcb-4f66-a9bb-06846bc2dc54"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", " ", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", "X", "]"}], "/", "X"}], ",", 
    RowBox[{"{", 
     RowBox[{"X", ",", 
      RowBox[{"-", " ", "Pi"}], ",", "Pi"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\:7ed8\:5236sin", 
     RowBox[{
      RowBox[{"(", "x", ")"}], "/", "x"}]}], ",", 
    RowBox[{"\:5176\:4e2d\:ff05\:4ece", "-", 
     RowBox[{"pi", " ", "\:5230", " ", "pi"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8417782091010103`*^9, 
  3.8417782729712267`*^9}},ExpressionUUID->"1566698c-6934-4355-8990-\
cc351aa094c1"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]], LineBox[CompressedData["
1:eJwV1Xs41GkbB3BhMlM5VJJ0IaUUsiWJHL6/6mUjETsyXm0OGxUlXswmbZHz
st6SnEo1DuNUUZnYzauUc0iaUE45DzE/yyDn/b1/PNdzff55rvv53vf1PGpu
l+zcxcXExK5S6/97/AGvoprzLsiebExeWibxIXOdwk/+geAnegRPUM61ct9X
lBEMw/1eYwLKI+bl7aZ/hMHxoEdDB2XNQ8phtewo3P/FcUsjZS+jQG2mSyy2
1ZsPllJuSfX0JNVvonh0j2ou5emk5LKiTfFov6v0Lp6ywp2qdVdkElAjLTUS
SPlAvMgDEok4x58NOk2Z9d+tLyW/J8GuezqYoHw59oRs3WgK+EHis6qUSyIe
FTNb0mDixzrcukSiLfTLaqV3D6Bt8nh9AeWrhGQh2f0Q/2NvZ4VRTjPRleTx
02GjnHJQg7KOscWTje8z8HKQ0yZaJFF20IV1pTYT2W2C4VeUuw7EPUIZFwpT
Nh7WlL31s06ml2TD6nzwh7WUl/RKxWjPc/Bzimxh8wIJFd0RZl12HkKqvKut
KDtrmy8ybz1Bxgozl63zJIyTuXHTDwvQvj/Rs26OxJobEnJWrEJ8K9MLuER5
eOwXztjZp7hQnhRTOEsivVK9Yk/kc5y69rZM5juJm/P82BWyRTCssGi4P0Pi
2t5w++bEIvC8uB1alJ3SBgb9uDwYSOxdMp4mIR/AZRRXFkOSU2dtJCIhnn+y
OfJ4Ccp58Hg+SWL868q7rE8l8E7Ru76TcoPVWe25/j+hq7rAY0yQiFDfaWMi
WQrdvGeGOSSJhWFmnavaa5xVHim0HyExKflYx9L9NdROBYymDVPzoUq7rZv7
Gh6H9bT6BFQ/7HlOEnvL0ZDx7tmZIRK88g1jmcQbaJhNjh3pp/JMaZEVOFdA
0cZV16+ThHuRjn9TRgXcr9CfxnSQOPU+oq1kqAKPtRX3c9pJHKMd4ERfqkTj
jKz1288kdvom6Wpdr0KQ2Kfqvk8keo6y7L3v14AmMbt8p4GE6cBV14bOGkTF
+GbdqieRGsK5qK1cC6+vGrzf35Gw+2skfORuLVx7BOsDakm80frthUdKHWI2
yXzUrKTyl0nf6JxQj5OnnwUplZLQHZka1TBrgtLTjJzVOSRcDOh+rWea4CPD
EBRxScRFKM1GhDXByco4ySmLymMraINvm9Ca32rGSafOc4pSzjz8AeF14cPS
aSTWNyhZbyGacWJYMfDCLRKiAhQoGvHxjRkJ4jKJei2jdT4/86FlYLvPn00i
I1s/oPo6H37bH2pn+VP1P9htxK7g49D0mr1LPiSexm2u/nj8EzRnFqNjz1P5
XpzpinNpgY5eVYXSv0kMaRbI0CLaIKUrKF02oOadm+d7KqcNzhLdtE/6JBK3
cvnP69rQ1GDrnK1HwlwpLdVN9jPM12ibHdlDIpMRs+N18mc4hTCHHDSo+ws8
TIPyv4BZp94hkifxJUvF+++mDuj/6ucgJhTixcpHdjkTHYjqNrEO+ybE7bOG
B5zlO1Et2vcbbVgIq11MsQaHTgS7HQtf7hOi7FF0fE5XJw6Ff7Fo/iwE57no
hfNoF9p/jZeYrBCiyGVgeTD0K378a9FCPUWIIO+XR+0f9GKzceMWF0MhDmPq
jExBL3DH2vKCvhCr5H4IqS7rBbuXs5W9T4jkp+l/Gnb1ol6a3XNjN1WfKFpT
RbkPe2daM4LVhJi4wlozlNoHwrbgnjRDCM/IqfeXE/uhUrkr0KdlDKyHPzjc
+2MQ5jonXvl5jsEjsla8u2kEQ717YOs2irdhWlqx74TU++Sr//HoN5xeO/BG
3vFvFAe5++YrjGDyYLVpD3sS4yq7TN7kC1BwSXrWzWcKppFlZuEYguT1wRC3
hBmUfn/iHHlvACEp2yw2JswijjnOsxXvxzHJ67sqouexcNp484xrL55YXGwT
5i7Crilv6U78VxikvqpszFoGB99vTvE68cStmVAYFCPejPXY+E9/hscWptYh
0QrioFLAKl/LFjzrk+KZj4sTO3umNWSGmmEpT9sRs0KSEFgPSkumNoJtqaef
J0YjWG2Zu1lra1CbM2FXOUcjcgW1JRv7y3HOf+6k6iop4vtDO4lzSy9w10xv
7icpOvGvKscNuX7ZyHvskFS2mk6sUneh6a7LRsmGIL1dcnTCVCuK11rIRctA
ufeSIp24COeoQGEW5CJs+nI06QSD9bu9olcmIqo86xeP04lxhyDXhvMc/OdH
zv3sBDrR4Vhaw59LREhBhdG6FDoh4SutZ45E3NwoaLuaRifyJjx3iELv4PGQ
zno7Lp3YN+WwSKP+GUFkaeRCMZ1IHNu8ILH9Fk7XtPrYttMJ+9TRu3OlEbi4
Z166tJtODFquHww9Ho6rySr5O/rphOoEa1N0VyhSzrkPzI/SCX910ZiUeAj4
9ElH7hKdaG2PdShJY6PPR2FGToJByJ7YZnC7yg8TbYYJQVIM4trHwoJz4z6Q
zQ1uPCHHIOyX9UIZcR5QWZvp9VKeQVSuzJNPHnKBdmA1fccmBnG7Zs1mk4iT
MOoZybqpzCBi6ke92DfMYWkhc2RejUEMr9XveT3sbvoPXZ3j8Q==
        "]]},
      Annotation[#, 
       "Charting`Private`Tag$16282#1"]& ], {}}, {{}, {}}, {{}, {}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{-Pi, Pi}, {0., 0.9999993309535186}}, {{-3.141592653589793, 
    3.141592653589793}, {0., 0.9999993309535186}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8417782329709005`*^9, 3.8417782495709496`*^9}},
 CellLabel->"Out[27]=",ExpressionUUID->"fca4889c-473b-493c-a24d-14e8672f548a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = "plot sin (x)/x", Typeset`newq$$ = 
   "plot sin (x)/x", Typeset`chosen$$ = "Plot[Sin[x]/x, {x, -9.4, 9.4}]", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {2., 9.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {2., 9.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 "plot sin (x)/x", 
                  Defer[
                   Plot[Sin[Global`x]/Global`x, {Global`x, -9.4, 9.4}]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Plot", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}]], 
                   "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    "plot sin (x)/x", 
                    Defer[
                    Plot[Sin[Global`x]/Global`x, {Global`x, -9.4, 9.4}]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Plot", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], "/", "x"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", "9.4"}], ",", " ", "9.4"}], "}"}]}], "]"}]], 
                    "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[29]:=",ExpressionUUID->"26a66f48-3eca-42b0-9ab4-c0c0c7405c5b"],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
        "]], LineBox[CompressedData["
1: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
X/rrWh3JXFM/32VSDmmx0pNLJOrJyqPzbvVsk8fZySGl+x/rSdMOZsEjT3kc
CJnj4jZdT3aDXnXEYXk8d8PbuJn2gkTLrOnTPCuP0gPqL3usXpCX9710fYvk
8eq7RSbP770gRd/fvwuVpOBaJT3WlV0NJND5X9RHeQpqH1s6WRbYQAzLtZds
mE9BQ6bSi2uxDSQr9kjsfC0KKnxri9lR3EDStMRWFq+m4Jn1rqqK0o1ke5x+
v/o6Cu5Num3zjNlIFH84XI22paB3S96g4GIjl6vShpxcKOjAbamtc20kkTuX
pP08QkENt9CZwKxGYsHetn5XCAX7Up3Yic8aycyCUz+rwyj4R3tngi+3kQSP
1W28ep6Cl1LyS+m8RuJ3xfW30R2BvvS86BYjDtGZiMhKfkDBw2nWJsHAIb1u
953+PaIg64hDPmczh7jq/8htqaDgzHrrA3GHOGRzXYzb4XYKqiglzWy/yyHS
BnkSb7somPZ75GfMYw5piH9VtLqPgq8dzBJ9qzjE0kNdVmaUgqVy9zZavOMQ
k9+PK3Mkqfg5afSHlRiX/PB8t59GoaKNZlCqKIVL8htm552cT8XE1F+DIapc
sjBpg7+tFhWfVY9KBBtyiZpxN2NwNRV9lON02xy5pCNZmOuwjopbfyz+auDK
JYl/dUOf2lIxxjHt4Mp9XCLXdLQ1xoWKVUuP7vM/yiXcpSmneG5U7LL30ko+
wSWxqZW6LvuoaL5pkXVwBJcI+0pE6ARQ0cklZvOmS1xCmhcbXAqhopd84LkN
CVwSZuLUMRZGRV/N7trJFC4xu3482i2Kiov33Fnins4l43PSl9SeF+hxUxwP
vcMlhX41XYv+R0V34anVNtlc4t86GJuQREWl+ZeWteRxyeCNZZ/33qHiMub8
rt9FXDJX3nXC/QEV3zqGLPEr5RLtyDPSOx9RUeiE9ZbEci5Z++sBy7mYir/F
LntEVHHJHu9Xyx3KqehdWBhjUC3Q925q48ZqKr7T8h9MqeGSNFuWh/ULKn5P
fJ1bV8clpeUbjmEzFTvDbCcLX3BJ++IjceZvqBhsmvDDo5FLxm4l3TJ9L/Dr
fn11K4dLaLSqIuOPVPzZu+XKPy6XLInubzTop6J4+1jkaBOX2E/IfNQdpmJl
P6c6s5lLDviZjGn+oCIzGUPntwj87XSVZExSMX6pMtdOwPc3RTFU/lDRzdfv
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

        "]]},
      Annotation[#, 
       "Charting`Private`Tag$19113#1"]& ], {}}, {{}, {}}, {{}, {}}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-9.4, 9.4}, {-0.21723355372267017`, 0.9999940102105066}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.841778312093057*^9},
 CellLabel->"Out[29]=",ExpressionUUID->"6de7f184-3c6c-49bc-8e6a-f3d4fb8d98d8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot3D", "[", 
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"x", "*", "y"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", 
      RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}], "  ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"\:5728\:4e09\:7ef4\:7a7a\:95f4\:7ed8\:5236sin", 
      RowBox[{"(", "%", ")"}]}], ")"}], "\:ff0c", 
    RowBox[{"\:5176\:4e2d\:65e0\:4ece", "-", 
     RowBox[{"3", "\:52303"}]}], ",", 
    RowBox[{
     RowBox[{"7", "\:4ece"}], "-", 
     RowBox[{"5", "\:52305"}]}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.8417783181709275`*^9, 
  3.841778390980898*^9}},ExpressionUUID->"29363192-bed0-4018-848c-\
d662d823c104"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
3ie8lPxYq8cJ/1T9JFaPEz5X8md96aspFj9PlltfEPRT4/tgsq0j9DPj450R
1u9Ev0zrxTpCv8rRWx8R9MPUJ8P6Qn+3G4/1F0Ef0bpbnS5RDqH/Sf7N+f+G
k3eq7uKLsG9Z9NnEx/xP4Qu0XuD0yZxb/s8de1aGdSjoM0gfwK1fSPpp/qfo
J0jfrM9ZeE7NF3r45NI4rf9Z9B0lT/Yp9Nul/9YXLfpvtF7oA/LJpvGjD9D3
cfqQjD7A/1vxsT5q0f8ifUMfoP9duPVXi76L9Jb9C/0e2Rnzb0U/SfYKHPp8
2hfsU+gzyY6BQ19f9pB9Cv3fsrfg3rrbPoX+quJNcOifLVv0+ZceD/umkPMD
6sNBP+kLel7xI/oJ/Z0uzjV/DLyz7BLnAvj7sm/oFTh6iD6AF5C+se7gx5w9
T2afgueVPFlH8HHq/2H/gjeQnFlf5os/gH2G/j2da6wv9PiH2GfoO+rcZH3J
uxKvYZ+hL6G4gPWFf3/FfdgZT/6W/7H+MfljrC/fLZXoVxiew+U97HynTymH
i0/tHId+qxu/4dAPVbzA+kL/hvQB+wBO3wv7F3yo/Cv2Kfh0+WPsa/Cj2o+s
O7j5ddITxom/gT5Ajz+PPkAPzvpC305+LOsLPfEg6ws9fWKsL/SZlQdgfb11
sfWFfo3iI/Yp/U79FGexvuSxJ8qfZ5+Cs+6sCzj9G6yL8dG5gH3mu9oXtl7Q
R2UPWS/worKHrBf4ZO0j1gv+Pby+R+ivq1+R/Qg98R3rZfSKR1gv6In3WS/o
J6lPj/WC/k7lDVgvT85mb6F/X/kK9iN5+F2JcbThP7n8p/m34Gu17zh/6b9i
HVkv6HW+2HqRD39A+RzWC/pisp+sF3hjz06C51K8zHoxHuIF9pfNS/sCPtB3
0z5ifaFnXVhf6M9rHVlf6Mmzsb7Qg7O+Jk/ll1hf6Mn7sb7euth+hL6il1dE
zrOU17I4yOU/bd2xk9DfLHtrdWrR3yW7zfpCv1B+IOsIvkt+AusIni4/gX0H
vl7nC+sFfl35E6tfazx+PyH05D9ZF3DkaXGK+CB/1gV68rcWp4genHXx5Gzr
Ar1f16C/697EfLLVfcC9ukZAftKrRwSqR/j1i0D1C78eEage4dcXAtUX/HpE
kNnb19CrjuDXHQLVHfz6QqD6QtSrLwSqL0S8+kKg+oL5yfC507Pb0JP/8eoR
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
w75xne85dD/a3leRntyZoVq7lO8227zgU9rlQyLoLeNv9/m8lZ3rn47gj2F/
stduVTxSJi3aRv4DeFB42NW8G5fJfobvkLdSf8LeOL7V8NbN82W4t+tp6fOc
VPi4v9clb3T0ZveufZT0Wuv+p6NbZPfAX+jW650/Jk6PtI6P56zhr41OP/lu
x9P4P1aviamv4HadF+Bz/yharNiL+8z/pK56atnCT5My/yo7eM3e697V8K5y
2edus/GD++MHH9z3xMI1H4XjB+908OmzcwbssO+izz0q31L9yYmnI8gZ/IMP
C23rM3WBfRfc/b3Kvguesv3ar1XLnrTvGv7F/rT+449HkRt4+X/yvXnbzTNs
3dnXgzvtmvhilYNRvgvu/l5m3wXf0WxIztsPHLHvgh95KuvcRaXS7bvgY/dX
XVntyiGTA+fXnox5fxqQfMD0DfyF0a8MuK3Vb1HWBfzE7btXNH9+VwR9A690
btLJ94rsM7mBu79jNn7wBxy9jRO8cuZOE27+v/NI4ySP8VzdikPu7pcWQf/B
i+d7rl+5R8Lvgru/f7Pvgg8/vuSWcUfXmdzAe419bNertcLxGP9Lo+ZO/O+I
jYd77u323rLgRuREMnID7xMtsOLG+0eSkRt4yui8G29EDyQzTnD376jHGCd4
zfj//69Uxgnu4onVqYwTvGf8u1tSGSd9sy86uZle2XvXTj6pfBd8oJNPhO+C
55Sc+S74zU4+ps/4P7OcXtn+As/xQ1yvTH/Ay0sfGCe49MfGae9/St8YJ3iv
dWXLDf37pI0Hv2vr+WcrpnU9aHoCrv1l/MGbP3Rg0Krvjxh/8KNuf5kcwH93
+8u+S578VWdnbH+BX/kgbmdsf9m703syZM8x+piNE1z2x8YJPszZHxsn+Ehn
f2yc4NPOxu2P6TP9EhkKV/xw5ehJNk7wDV//nLvNw6dtnODjnX229TI+zj7b
OMEHOfts4wTv5+yzjRO8/pMXP7lyR9hXSb59yO3jO/42/ZTpFfi6W+Lno8kN
3B8P+HV33tl4rC+0a/y8MzsA/oY772y+5EPc37uNP/jrOn8Zf/pXebbceP9/
8X7/lG9yJR337Dzn8g6zV2dEX7XQt/fVeDa0h+fbF62dVCt3bGSLfXfOOrzY
+HybcD5uNT4XRX+h0/5fKqelGR/3rm722MTRDe4q2Oq0Z7ezYc+MTy7R94s9
csvO2qeMT0nl8Xp07Vu8edetNp7FCefXWuNzl+h/39r5vse/PGpy3i2/MWOW
9Gyd391p/F+P+6WXotvLLLi6bvUR08ODcX/sv+iS7C80+fbZ6fbd2QnnTnhe
dxGf5jVbtZy6NPRDyir+Xrzm7h03NT1hcliQcI4sMj4VRV9md/eZDYpvCM99
3Y94Mnbiw9YvhXm2Qrn+j8/saNmR/1dfXm384/98cFT2f7zxbyv6H0bVzXZX
y+9NPmeU5yx//uzpkqfWG/8ycX07GAmkJ7YfE+z8CNPPEqKfNLv+wq3BmtBu
KE8zp/3YTxpO3m56e9zlBSODdk2a/PDKLTb+HxLs81jjf0j0M5O6tbmnyl7j
X0b9jeOzbhpYqfJx499S+dUbRT/qlWVDaPfmJdjnVOPfQvRLpzaavDRPeO48
6+KRYPyr0178vPMJ7xzBfi4yPs+I/nCN7JkGlztp9ucz+ecPf9Pp6TbjVhj/
R+Lv/twc7LhY98ebKm0wPXzX5YuCx3M2+bZm23k2/qEJ9jA8Xx4Wn28afpy/
9QNpxn/o1dyvJS3PF0wY2D910vV0s2+tlO+q+lzlmzosWm7zSk2wb5uN/xDx
WVO58vmsZ9JsPBUS7NVOo8+qePOt3h8/eKFb6A9v1f1BvdscnlOqU2Q+2LPA
g9v3RXYo/9BbeYNNqseB9xS+lPtoTs7RieKTdt/rjYa8fywK/qzi0w8vRFdm
KHba9H+86PPdH6fnXQvFfQViG1T3B39X+BjhdRR/ThKf0wfi4zec754t1aLn
9bFH7Bx8RXnUKXpPADlUiOcF8sUmFBmbZ2CtNJtvHuVtiuo9f/AcwusLZ74V
xadfja+rTDxw2vBJ6uN64alnat5oFMqB7/Z09CaHvOIfqA4Lrrpz7H3hzJfv
TnXjNzlM1HdTWkwb2mb20ShxXLrOkS3L5l/+Lf9vpic7lEdt4vLeJp8+yqNO
2NZjW41Lf5gcktSX9Zt+JwK8hHB+PwK7sV38p6ueyLxK8/vXut8Brng8NlM4
4zzDvSi9B2L+jPK3q1/vnV5gWjieKsobdFN8Df6I8JeEs17fiM/o3ZVavfrd
StPzrTrX1u3rXeK9kzvMHpIXbK/3olnfL8Tn5PC4/bH5Pq7vdlU9HbyCcO7B
sY4jxGe5m5fhWzhnm+fLVCB/msknl/KELd17lTbf0erXClSXB/9aeF/hzLe5
5Hpi6tAX79x6wvDtOq8LnL/68sEn0kwOOfTdbXp3CDlQN7vu+Jgcxui7vM8G
niJ8RGL/VXCb8jElnmp8bnuP7TbfSqoHTdK7NOiDs2P/RPvsrdz7yeCEzXe5
8uXF9Lse4FHh/N4H8/1IfMotLv7t4v5phrv9+D97Wnr5V4f6nLI46D/V33br
3MRuT0jwZ8YmQ3+b/JAk54dEsOdp4hN1fEye72o8d7vxmNxWafz8HhN4auJ8
zT58LD7tnXwMz6J55Tv8+/YsudNsX8Ti67Ir2jfHQ8NLbdljcvhT/sy5c3F/
xuL6LaovXZcfgp6kCt/kcJvXZ+L/1Mftauwcs8e++6Xqv8scf8Odn7wr0kj0
fHeh/J9D4s9356jfr170z1Y9iiwwP2GZ+Gd1/pjp1TD1AXbQvkavtO6RPJIP
+vO76hvcE/H0KlJcOOM/V87xqeH0x3DpbeQ+rS96ksPpSaSw/FX0akqCf7go
Ffqz8t/WS3/MbxefYtI35JBL80Kf0Z/fEsdvOPUc9gv6c0bzKu7kY3gfzYv9
iJy1ryOVtK+R22DVC+bIDnj2KtJbOHJb6+xSpJizS4Zr3SIXZH/Qhzv1Xd7H
Qw67xKeQ7BvzHajvrpCdBB8hfIBw5tVL9YhHzpfZ/diJk2aXdI4E59U/wLzK
K8/8lOy/d04FTYUzrw3iU0dxlu0X+b19dO4w394az0vuvUGb7zbx2atzjXk9
qO/ep/MRvKLwxsJZ3/Xic71Z/DwynPFwLuOHFFZfxGPdXLyJ3Nqo/jLv226N
Ro7fbuteTPl5fr8MvKTwWcKZbzvx2a533hj/raKfLf8E/E76FYUz/lTXZx4s
zLjg1xwjthmu+nKwS34R/v8Z518FZZY7/4p1n+z8saBA9+BGsPqwzSsL97Dk
14HnFF5NOOs7XnzqOH/S8EecHxi8L38SOTyvvoXNOh9Z9yni87z8UuSQWd+d
JP8WXHXM4A3hyGGc+PR3fqbtd8bzi/xq5HPa5UOCH4v83GZKicOhHVB9P8PW
OZ2v1ttmclOdK1gpf96LRwLFI1EvfgkUv/jxSNDfxSN+/BIofjH51BH9AMUv
XjwSKB7x45dgnXDkUEt8zrnxR7z4JVD8YvKhbrv4yPelp3fZYvuC+svf+n20
RDtTIPZo8aHzxl89aucU9GWmNIp8+cUEmy/0PefMSmo87nh4vit/1VT5MfRn
i+JHfq8QHP41ZZfA4d807WCHYsvD88V+x7lq1mqP7Qv9W77brMJHEyf/Eua1
qJufOv9i45VPH7N5gf8zoNP271NCvw68vBevUT86OuHP3V2/PG5+AvQ/Z2ld
8PL4JSafD4l3fu66YOPOfSafBbpv8lX+jrv+vXmr8YH/08p/Igf1t8TOHGv5
0r6iY/x9FGvqxXfwuejGafrA/Zcro++p3vL5E7YvwPPUe+Sj515fY+MEP3HX
9qTDk3eaHKhbZXO/X2bjh75G45SXni5+yPzVLxPykMuSoYfPQOWl8Svsns5n
E8u/8HMYB/WWPN938jR9gH6dG6fVGcGz/xifr+kD9d+lH9TqXSX7epMD/37v
rQv0bZS/RT7U0UYoz898f03Ily5KTvQnM8YOq17AfOH/6Y+rs9ccdtz2C3h7
912LX+w+kd6TQf9baPy73PgN36Y4q162eF7U9IF7N3m69p6ZZVvoT9o75CN/
H3fpm1O2L6jH/ezuNZt/Dv2shPd+zxr9TT3ODvnxQLrFNa+qn3O38nXILZqQ
H061uKaN8rQtXJ7W5MZ3n+h38+/XRh00uYHXTvv5q3Nfppn+gF9y87J9BP62
/ED0x5OPyY17QzmOTZ6275tNdu4sUjzCOy3o0wjFIwdqDT/z6utHTZ4b9L73
OvW9g08UPks4cg4Un85XvhQ8RXnmR12e2eRvvwuvehxyZvzu73kmZ+hHe/W+
CvruUPVPIre9Gudm3XsCHyV8inD01nt/3s79pZLPdScfw2crHpyaNPOxT4bt
sXWBTy4nf9unvJe+fn+9AsVPrzN9A3+nefLUWrcsMLm5+fM++Wqrw0Lv/h5j
8oG+qavDWn4e+s6Ov+kh+Go3nrB+JHzL6BevDMq83eQGvlByQ69GKd7MoHfp
0atUxZt/ST7oTz+9szdSfDy9iswWjp7wLt90jQd66rl51Odm55Tof9e84GP0
qo8jN+ibST7w6au4+F7VR8Arqi7wh9Nzi0/ho3Wx+JTvfqE6vvWBiL6e1t36
QITPkJ4g/7eFp2jfgf8h/E8P57u5nHzM3g7Rurzp1sXw0cozHJIdADc+99d+
97s7QjvD/b720nPmC168auTWjifCeiu49rX1CYyQnB+RfQCHfpPrG7F5UTef
IzvP/oVe9y9s/GsU51bO6upu4A3073Cdp+xf+HSR/YQ/3139veszQQ70++WS
HUb/lT+MrJteJ+nhxb+Y3YP+iuw8egWud+lNns3c+RJprDog8pycUM9aZfrW
RvWm7e78Mn1rLz4NvXOK71Zy55T5LeAZv3PnLPIHH688APIBL6n7dMiZfoMs
z/WInXjjmMnZ+iR1voNDn6r+IuRDf1oH+RvIIZZQd1uXCr31G6ivyepZ4jPA
+TOmb+BvyI9ivvC56H7P1M4L6Fvp/h3zhb5MyTHZjtQ4bvOCvpH8OvhAv8H1
V9j+ok+vkPxD9Ocvxemd5UeBv6c4fYT8T+wk/Qn428htUkKdcZPJTfWj4Mcj
zp9HboyndOzM9aNdwzzS3xpPf+0j5AD9EvntiXnvXEGWX12cghyg/13v98IH
+g/UX4c8oS/q5GNyoP+hmfr9GD/3GVvHsubpsi7MG4BXzOriI68OFQzw8gDg
6xSXMX7whXqvG3rG09LFfTZ+6Nco7oMP9B+6/hA77+jTmHn7I5cKZwnzfuBZ
FW8yrxK846H3o7y4NVDcauc++HDFy8gBfI6XB+C7Y914TA7Ql1GcjhygHzbN
xenIAforygOgh8TXQzVO7JvF9cntspcfc8rWF/wNh4f+A7+Lrf4c+BCfdpE+
wAe8lcONnnhtlYv7zH8j3kmRPWG+xFO3Obtn9Pjtz8jesr74t+rbNz8Qf/Kg
zkHGCX6bzlnWBT7F5BcxHvBb3DlucuZ876p+Qug576qUSOyfxG4/qbgGHPvW
79UfN5e6J8y3sE+XKf6FHny54ujEeCFX0Fx9sOgt9C8rfocP+0jr6OtPIP2J
ePoTSH+inv4E0h+jJ2+T62PXf2V+o/RqpPrE0H/W9+hn9698r9Qxs+fm//eI
DVuw9HjYDyb8RPFcF77LctT8B/AZ9+R7q+COUE/AF8nfM7snfLvzk0P7I3y6
4xPaGeHH3XftnAJf68YZ9j/jlwpn/OArxMf6ooV/pe9ankr4RPn52B/wyRq/
5YuET9B8mRd4iuTDvLzxmJ2xOMKTP/q8RuuF/nj9k6bn6Oe36t+2OE52O7fT
E5Pbc+rTGB+b1rrvoLBvWfY5Vt3d2416+eFYReHIU3na2HLlV8GVZ46dHPLu
hWW508w+0B+S1KTC9bPvhPlG5cNjczfn+LBag4P23Qa617PB3fsz+dQVflI4
350uPqnKh4OfVd9FlfsPj67y+n4bD30aOxccqNhjazge+Q+x4xo/331V9zsq
uvsdhrcVXko4310iPrerfmF1TPUBThh38vOf7wj7ZPrq/kVJV7fy8syZYo8K
h88u9SHkdn0Iht+u/sCeD+y8dNdnYV/9++Lzon73Cryn8ObCkcNu5cFqPjCh
z6qUUD75VKde1WV7cCU9lMNY5VUaurqt4Yqnoq8IZ5zFxSez6pWJ+dXj0bHd
d37XfUq6+Yc/J+QZPrb+q7nKewzY9+gjf+6cZ/PKkcvddx7s6s6GKz8QfUY4
8xqoePP5jcWmXRt2yuQ/XXXteXrnDVz1dPudbsbfRXyWKz9j/U7qG8x4bkip
ZedOWbwwIyFOn2XzGiU+5f67aWmNuYvMv20v/E71A4BXFv+3xs8aUOWTQ4a/
qfrvneqjAKdOfeNSh0yPHg/7fDLpHndD/e4quPpMIo2EI8/r5Ry+xfWfGK5+
GH633b5bXfbypmmuvwWcOPGrS8ei/ecfNT4ndM+ok/QHXP1IwWvC4fOO4o4u
qiOYfNQ3GP0pw/xJlcI4lHrZoBWR8v+0C8f5kPAe6iuz/iL1B56Kthw2OZZu
fKgrzb16vu6SUaGc1XcXqO/O+ORQ32Cz5NFF7tt82PRqu+o+c9Q3mFiPLhiT
v23nrPoPY03FB5z+5zevDKt578DT5keBH3H2zfRf84qNd/2T4T139bnVnZR/
9p/ZTpg+fyn6C2+VKTh4WJjnHyb8pOQDTh/1+YcLvHGxS3ivBz6SZyQxz5wr
dlpxIvLZo362huqXQz5fJdZxTG5TVV/IqvqLF/fFLos/53JW2ecxrq/b5FBX
9/UWuv5Y86O+Vp/Y3vJb+38zcLfZsfqiP7Twx9yfnDvh5RWzxTJ69aAL6mdr
In0G9/rcDMdut1BfATh2vqFw9gv826ivBv8EPhXULwEOnyThzLct9QjXb2zy
aax5d5K+sV4F1J/WWn1x6MMr4jNM+x28s+oXOQdNL9W1TDivwuKj39cznP63
XcIZP/QdZa/Aoa8rnHVvre/+5vrkDT+qc7CBOwdtfS+rT+yzt9JTDjxywKtH
XIxOVj4w0U8+Ei2peIr5posPdhj9XCT6JC9uqqzzcZw7H6OJ+a7/xZne+tJX
X18439V5FO2m8wJ5cj4G6tcyOes8HSkcP7O2+FxTPzz4ENUpOL8478Yl3AsY
YXWE7Qnn+yyrIwy72fXzv/ldvJ/f+Kfp3N/jzv1IYj7tYHSZG4/Z50UaTx03
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
Z0meoG8w/kzZf+Af8JNkjxoUy9X0xg6hf3pJXE87XSE5Sb4b+AHJyaoPRXI1
zav+dtVYrqYrJZ8bxPW30w/XltXftngMy0t9O/TDdXnr+UT9Uqs5u8o1umfx
e1r+qerMU6+Dc52q7y1ymPGL1C+Vc+r6khg9XXyynUfmP0b19rnXwOerPxT3
oNUHVn+o9c5/d6v8Mj3cvaM8uCT2+5Qkk2SXiP0+JYnsJOb3d/kavFMMp983
9kn48y81Qv3t2F/2i34oPgS3+g/q37rc+ZvO1Xe1cv6pw+WvGRO9CwrTTMtQ
PzyOoytMT1X/1umK+4KvLs0vbfj0xi0mh83eeEzoRwBfWV04zQP/WJ009VOA
T8CP1nctk/0Qef5h/eM6Zx6werBml5gveq6P9N7SZJ7Gz3B6Pv1qiZ+0/A7x
Sfx+KUynim/rujqKF6mO4lyXxyH/TuLqBKYn6XzdE+c/pmNUx744zn9MW6kf
seubkF+7IPQRcH0T8uqb4PsX5NW/wHCLawp9HHz8W/52yUPXj4C+QuY/ZZ69
N4W4hTWu7v142X/4XfZ3V+hzkUNvBx8guY1dEfyp0A80WaK4OPPXqy7K8ZJ7
lj8e3mVmN7b63uorSl4w+Cy9Z5VvaPjzuh/R/y2fXX0h67u8yEOVF8m7DL4d
rnv8GpeHvlf5tsTXgf9V768WTq8bJr2O+x38Rd2D0I3fHR/6pZo+xviZusfB
Gb9c+snTbvxCjeceNFx9OWe5PPfN7h3N/Bc0Htxw64hvc9Wc/1TxRXZPgY8R
/xQ7e6D6vGTYX877ZH1vXLeqIL1J/c7i911pcpHWQzw8eAv1QY7r25QmU9Qf
sE7k3yxIl4kO050+9oH0MfywpkfpHmG/kD9Piz+fdnrRgkgvKs/vHqn8bujA
PP11XmJ9tSBtKr662NHnY9EnrtNVQL9Rixdl/pvE/zH9f3lfq55nrMcWpmfL
HuL8aGk/9eNz/cvoe5JzfV7y6vOSc31b8urbkvuIvqI6j/uC/mnyHD58XfuI
Hgv+tvRw7Ku8F75W/F6xq7OUFX/GdU4K0y2qX0oeIuu8WH0hz9L7Ebz79K5l
fSGbxXln+U9C3pnvI5PfHPrI5Jxemj9b9Kwf553le6lf5+w47yz/mPp17pB+
YnVBtY+dFF8NfmiDb6ttr/aV+XM5F/v+evGQ8b1GmF4N/ywO8eo2D3iNMI/h
8NWGJZdd1vjgN6Z/go9W39jiOM8uz/1IfQnunQ66l7GDIU/o40ncIHh11V2n
jwm/O119OfG/sL/02aRONetpPK1sH5Pxuk+tX4z6/U10eBPhvNOh84Ohf2Vu
b8w/6RHq19M05p/04ffC77KPFgd1wYpXC0t35JZFfFuazA16US74eb82fMOl
FaudunOnjYcOm5r0uaXumi255orDt3z/+mEfd7n136D1T1DcDvNcE/ql2jsO
/InQt9He19Cz3YJHzzr2yS8dX5Ukq+UX+F56IPTsLj/Cfoc/LBw9mXVeKPnW
yt2zF8T9MQ3Hzj/a2auPlr063E9zMowPcmhVFv0BfFTNXTd2OD9ncdQWHxL6
bFq8vcWfhL6flu8D/tJp4dzxu1bXPfxu5j7FJ0Dn2/780xsP3T7H9AHwz2v9
peXmNZsS8u5Z50u6d9o7fJxw/EHg1RT3Nc59b2t9b2XnL2gsf0GP6J1ldUiS
Mb8hT15QXj/zf9/klM3JY19ln5FdF/ynUwdOvGDX4hzjy+P9bup102lfZxgP
vj+MT8Chz+Ih9ao9WXW57QvjG4f71PQ68B+0/gZu/Okav+n2yA6cbxDswMkO
Z9/7i+x7f3ZxsGsVB9vZ1YNaondQI9mTuQf/E+oEJvhboU9e+T5zXDzeldJb
PtQ6rd7pi6FexA4XZ95BdtRaWif4S8tDf41ukfwvSfaoTwfrhB9WhXqYlv8C
fqPqGMOf0PN/0kvnOLvQ5dKH1T/F6PCx6vk3k/wEr67+AuTNmf1T/YmoswT+
o/pQ4J81vCD0ORrn8kw/U55pnd/IM63o/PXF8tdXcXoy8W8v/IYff5Lz1y+U
nDxGch59Zpb6ZGEvAl8UcMujB182oeO4jw7fYu8R9PB665Z0aPLjzAx2RavL
ofGa3/APNX9r5wc/IcyTJR7M/JLrm3XrOXyh3Xfgf1QfH/aLc7pU9h/2Bfww
1SUbF8nbX971w27r+OLrxRZ/CP6D/GsVnb+pvexgxc6/Nk/+NfYL/HLlnbFf
4HWUTzTJ1W34u+o2FMV9/dK182f8OLnWZPtd9neI9BnkD/S8M9QxzhCfDx2o
w99EfTeszqHqG/xdOOdipPpWVHbxQlcpXminyy97X/kRl7o6h9jH6PcBP5Av
zO9aHKb6GY1Qnw67L9R3ifk577UVd0SdVb7rXtV5aK//D/6F6lF0cXXe3tV7
iv53nOs7NQ/8DE6dMdXTM7/DV6pjRh8EzpH6WWsfV9r5WqE6NqzH4lJCHRjV
xy6vq9PzjtEb+93+ZqZ/9e0nThna3+rbnDVl6OKuzYcr7re8/sxNYXwWuoEP
DHV7soO1fui8XfWXurh3a1bv1raujm6dcO9bn0r4bZ/oLH42f/FZqjfYNt6X
lHqMrMfwLqGvJXzi8s1tHvCCkF+fYx7wH9SvkDr/8KHG2z6C71XdgHVxv8uU
OgatXR7BWuURHCs+4RxlFSfAeOj/yomv3zvzqjmZyi5O6e4Qb5PZ6eKOVvzr
js4NNs7O0N/H4mqeu3XVW/NnZEtcPM+qMD47y8X/tAjxTln2EXxcWE/22ij+
oSSZqnfu737jvVDZxTP3Vzwevwu+RfXB6mgezuNE+Sm+FZ3hk0O1L7+Lx6d9
wvhkpOSD1Zm5OPivxQ92L/QKdSz1rrfx+a3tg1+G/WW/Kol/hms8+E3qN8T5
cvGQFv8GrjgQ6Y1f23omyD7JPNDnKMVVct5Nr3Y444Xb+eK7eoTzkux0foTZ
8iO0dXp7d+nt20UH5NiDQV7l2nX89d8jWcan02td2q7jHdlB+l3oc3E419a/
nvWcpvjtlS4v7F7FhzMePRZ7UXfJT/BWstcxj9XZE51biy/Bt5674NhPB1qe
UbmfSHk3/K6r82+/a3U1t3zS5fnem2Uf+8rwL1ceOqqo/rrcCt3LVuf/3Lrn
X15jnX0veD/VT+Z3fd4Tvwt+zIaZre9vutPWb3mdyo/me8Ff/NPRVYvO2mLz
c06fUd7BysguV5q8Ibv01U6/PSD9lr/RN57V/CucHlIkPYR5wGtp/cxjeb46
19AT/L+iG/ODbxKdmR+cfQE3OVYw7Iifjnk3287JgSslByyfB72uc+fHxr3+
BefX9K7Kt1Zo1vzKpTYefJPutavj/Me0n/QE1g+/jQh0yynPyPSolwL/2/eC
/4c8OM1vccvaR/iEdX2vuqbQExz/l+zwpp8cN73x6r7XfptskL2U/XpM9A90
nJaFr74p6//+VvYzyQfw+zT+2sg+VprU0fx8L/LnaZ13vhf8BvEz3wv+uviT
77J6+LJHwf9m91a9Yr7X6rOpvoTb3/yH2/o/MXHhKjvXyI2x0uehg90LZX8v
yXzm7osDinNgPPtVJjY7zrfx4I+N+rhqi4Ff2/rZl8flh2Ie8LLfTWdn2C/w
OwL/G53Zx2otvhr4TcuZ9l3gU9Vnp7vTS++UXsrvMj78PTnDPJyvbdPvrXn9
hWMyjGeeimV/j7Z1mr5x8YglZ2x8OQP9fX4948FXSR+GbmZ/UD1Mxht/Sj6w
7+Afax+llxo+/4JAH9YP3+7/lc2T2cbn4L1E57qu/iHnPT4vBWnZPD8vdOel
IH007LvR3+yf2vf4dwvT21RvAT5BzuyWnsz3gr8hfoY+8GcVyVvmZ383iG7M
b/so/Yd5LL5X8pZ5OEdNVM+knqv3dZb05Lqu/s8/hDOec1dx9tNDz3+o2Pgb
/Ltwj9v6weEfxls/OMkB9oXfXV22Ly9nkTPgN4n/wfneCuoL3N29K3tr3zkX
nOsekmPwOetqKb2Fe9nsPxrP/OAfSW5Df+i5WvwPHay+ls4L38u5+4Peg4wH
P9iu7DxmkcPgY8K5zvJdlp+o+yjWNwpS6uDF56sgvVv3GvoGfN5c42M9pDDt
IH2P+cG/0L7XdXUUn1UdxXquvv23OhfQH3yP5D/093X82Cf28XzqKTk7wF3a
d+Zx/S9sneCn6lzwXfAb+g/n19fLYt/53rM1jzt3KeeI8RaHo3mY39fhqRf3
wcwPED3hB+t/Lf0Nevo6MMzD+v/p5ADydmOQt0Yf6zuj/YrlTGGq+U2em11O
8dixHC5MP54V5Ab8z3cVlN2bxRnHP/l+8ocy3uTPr3/2X049BKPDaOld7Dvn
pZXqJHB+wRcH/TPDvoO/f/ftxz6TnZnlu8DTTrcduuPb2e7clSTvqG9a/C4o
SJ/UehgPP5wQ7n37Luhz8Fex98DyLN8Fn7eN6xLYvfAfd97Bh0qP9faB92Qf
YJ3mF9Y7Itb3SpLJTg+xeixOb+S7hqpPq3tXpv+TPun0c+x7idPP832VL8P6
2fct4ivWyfgZ4lvmYfxRWif0tzglvY+YHzpnJN98P/S34zy+1OEmV+GTKTvG
5Do8/GEW+oBPC7jpV+DtAl9lrA6U8HmBD43Pwb+THYnx7FeR9j3Wz0sS4vHq
ubwkyUn3zvrlHSo9J+afgvR8vd+hP/JB76Yk1usK0naiZz1nb9ypd1n8/i1M
U80f3++FaaJ72cmNQO+0OOvOV17nK+fkcz6DPVDfafFRsjOwj+zvNvEV9Eeu
yj5gcs/80Vp/XVenAjqzHusTLf3N8XP6vvRe5je5NyXEA7N++Lmz4njZL+bn
vRzve2FaSe9l1sn8NYSzHvhhjviH/WL+ZaKb03vzX2t/mcflm5v8sX678new
7+D3iQ/ruvi9wxW/x3qsTojeoeDsy9WKB+B3wRkf31+lSSp+i/Wc0qSv1hnb
eQrSlpo/plthulpyI34HFaSPiH/gW8YTR+feC/mR4b2QxOfd9DrTM61Oo+Kp
oJv1sQr2vZyz76UFsvvF6ylNpN/aOWKegXofsV8WtyD6sB7W21v2Sc4v48vU
/J8X2z1rcaeyB/4/OhfQuw==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxMnXe4FMXz9ffenZ0Ns3kNoCIi5oCiomJEsohgwgRKEDCgopgFFVGMiAEV
zAlRTJjBDKggJhTFnLOiYsCc3vO5p7/P7/1jn67t6enp6ZnprnCqqt2w0Xsd
3ZxKpd6qplJplRcmqdSoplTqrHwqNa6SSh1RSKVuaaRSQ+qp1MrZVOr7Wip1
UiaV6qDGx6jdxvq/nf5/r/PXLKVSW6h+hs75N5dK6bTUF+rvdPVzqdo+W06l
BqiPIXEqNVrnvKa2m+l3nI4NUt080SdrMC+p3Fi/I1X/gPqforq91cdy1b0t
+jrVb5f1dX/RNYZqbK31/ye1Hat2F+j4PF1r67TpX9VmiI4P1u9M/e+sdjWd
+6LG3FrjbKXftvp/hs69Qsef07nr6F4uUd2qxVTqII1tS9HDdGyqjg3W3Lyu
m+uq+9xL46mpbK32/XV8hI5dpP6n6do/ct9qf5uu/6muNU5tbtcYBqjsoz47
qs/Ddf5eqttN/48QvbvKUSoHqq/jNHf3iu6p/ifrHkdonBep3F6/XXVOSWVb
XeNnXfM1jecrnbsnfejch3W8j3576P8RuvbNGs/Pavub+tpOdWmVUzS2gTr3
Cp27gY5dr3H+obFdpn4P17UuUdlRfXTQb7aOpXTOTup7gM4ZoXYD1M9KqttW
93u16p9Xf1foni7X7xz9n6+5K6lso/b36lcW3VZlIUql9tV45uv/sbrGGrrW
4Spf4pno96zqd1FdF/0O1rWLar+32j+j+vU1zr/Vx4Ea8wW63p6ir2X8mqv2
anMj49HvReaAdmrTSuU0tWmon2Fq86aOrSp6BO+T6Pd1zff0e1f03xrHk5rH
RbqnuWrzhupW5p3Q/XbXFHyv/s5Qmz81roEqB+r/aur/cfW/ne73ebW9X/+n
qr8r9TtX/0eqXSfRy/QcTtH4T1bdkzqvncZ8vuZwE413I/1Gqn68zt1I154o
eq7aPKsxnqU2I/T/pIq/iUdVP13XulD1HXTeGPW9ptodoWPXqf4+1fdS/Wjd
x5H6nav/ZdWvrTY3qP50Xfd+1fUWPUrHHxB9pn4b6LpF9bVQ41yg3zNqd7Pu
61zVradzx6v/w9R+mH7j1X5l9Xm+jq3EWDRXx+r4Z5qjkzXOker7Jp37is5r
q9/ROrae+lus84br2GDVva66VXgn9H+QyuN170eqv1H6DdX/czTH3fR7UnQf
vQs/iN6J71T3P0TX+UDP5DWd+5OOv6JzV9KxLN+3jl2s/9+r/EfnXafxXqL6
5fo/Xm0uE/2D6GtF36RxT9L/bdT3DWp3ucb3pvpcobol6mO8rjVUbT/UtV7X
/3VVv63KNXTek2r7pf6vKfop0V+Lfk3H1qE/lf3Uz1uinxDdX/Q7PHfRu2ke
HuU7Vd3TOvcJ0e/p2EDNfz+NKaVyLdXPVf0y1a+t+S3zXHTe2hrHVNVdqX4u
1O800eernK9jX+rU31gj1HYD3hsd20z1l6mfjrpWVf3kdGyu6gpq11n3vJJ+
2+q3qn4rdH6TrttL5z6kc2ep7fb6XSP6TpVbqf4q0VPU5hL1eZLodVR3segv
dO5VarOR/p+n+um63vkqJ2tsnXW9K9RmK9XluK7a/az226gs6feN6NNVnqD2
n4vuqTYX6//W+k3U+Z+q7kfVnar/k3TtMWp3ie5ltPpspz6P1zVj0eur/mP9
L4j+VOedozZDRK+uui56tofq/OGMQ/e6hX7Pqt+ixnaw6lqrzar67a0+jtC5
MzKe8yv1/5u0x8+8b6vvYqj+L9Y7vk3i92VLnbevntlbaj9A5QCN8S61OVDH
Oum6s1Tur99aaneQ+jhR/bfWuceqrr3q9lObp9T+RP1/X/X7q83RatND9Q+q
fqTqZ6rcT+WeOranxt5fv/3YH3WPd6u+m/o5THN0qH576vc+c636j9XP7Ym/
tcdFr9D7vJfue4neo33V5h/Vv6H6AzTu3TT+f3R/i1TuoevN43tX+7V0/Gx9
y/10rXnqcwBj1u8/HX9Tx5ap/dq65z/0fw/RkdqsJ7pJc3S0rvWtrrWT+h2u
Pl9V3SM6p6bj7VQOU/+7qM0CtTlJ9Caq665rnSK6g+j9Ra/Q+D9W+wX6vyV7
n67xl/rbR2PuJfpP0UeofW/184L62Uv1B+laL+laW6j9ANGLRM/T+B9WP7ey
Xuu8+zTmB/T/Gd3LqyofU31f0Q3ea/ifjPkTdZE6LmOeRJdKtVI/G4r+i7Ul
8jtfYY0IfMu3ol9Nm0fSUFr4mU1C/dTE9C26ziM6qa3q5mvMg/X/WtFHFb13
0Ocy/f848EisZTN1bEvRTRpbKu81rKP6m6zxbp42v3VN4M2+E/2U+t+Q70yD
uCX297ua/rcvmW5WH01qv7roD1T/hNq3V7mabnL9xH2yfh4duw37Uzc926zo
u9TuELXLwO/pvAvVppg2D/Se5gRm8ioVN+pYE/uOyvdVH3Hvqr9M97uj2v7H
OlZz/fSK3+WS6D10bFnkPh9hrS54D9xQ5aJm93md6kdqDLHo29kbRRdEzxL9
hc7Ni75PbbrWTd+t+rdij3m66r9Rm0T0g6I/j33u/aKn1Fx/n9rv2Oz+b1X9
nRXf+x0q7wnjfEz1j+l/O5Wtdf0Lwtr7lf6vo//vqd05Ov6s5nEz1Z2q8nzm
QvXnqdyuZp72TNF3aDzvslbzzET/x1oFj6R7/l11V2uuLo+95qpIXVdxm+56
93/JeQ0+N28+9k2+QXjP2GPYQsfuE/2R6C7w+WrzgegLVM6KTO+g+mfUz/rs
4SrnsJ6qvqv+H1A3PVntNxf9qehLRd/W5HvZSm1e0b38y1qk687RsdVVt6Hq
LonMm7G1PaT6lXjX1OaCyLwB8sfEyDyMukudp4brp72fZUW3Ef2x6HX1Tq6V
9l7wYuAr2BtGN7ke+eWq2POvTyV1QuCLPhG9NO15Y45O0LXWEH0YPEfs/g8X
fUaT+Ryu+7DG2VrlqrrXDXXddVX/q66byfjcj3gekdsX4Dci81e8+j/nvI8V
NYgHKl4DVtK7sETH24Uxv6xrVfXbR/SeGsMqqj9Y/w9RByunvU98WPC+9oGe
6UD2b3gM0Wdp7s6EHVffZ4uewLVED9Q4F6jNILVtUp97a6yrwc+oz1Yq/1Kf
E9X+fLVv8O7o+F76tdaxg3XuQpUH6dwD9Suzp+taWbX7iPdOi8shup91VP+j
/ndSn+dpnGvrfyu1uUR9/g5von1pH9YUeFa1X0/lCsbMvqj6osoJ+k1mTdN5
52g8PeGJ4DNFX8ycqz7W+Nvy3jIP+q2u3zD4AJ37t/p9Ru3ba053Uj9Pq/1C
nXu5+nlR9X1EZ0UvFD01b14jUrmW2m+H3KH2L+l+n1Kf96h+kp7xIXpmF6rs
pjEubvL+9KiO1VW2V7md5uR9ZBrRq6vtaoGPOUb3fCX7PDyGxnav5uVSXWe+
6G661rOsIaJ3UNvlqv9O9G8a/9Ma274a50rq71XR6+tYb7VfwJqtcZymedxA
5RK16aTxPw3/KXob0W2QP2K/J6/o/xa65kTRa8FH5s0Hbc/+oPo686M2B4qu
id6nyfxONW1e53u+JR1/VOWwZrcfoPrBoc08Hfs19rnzRe9VMJ/7gvoflViu
HCp6ad688HMqD9K5FdXPVft9I9N7NVkuaSV6ODyW6lcVPVj0b5Hf/1fV/sqC
eaXJut8fNKZ3Vfekyr9it1+i/39H7uctvveCZeUTNRYWmNVU/z7rbNr8z4Y6
1lNz+WuTefdeJfPV+8CPZ8yHw6PvqvO/Ufmixv9O3vzLdrxPaveV6EWi9xS9
luhOot/VuY81m6ffo2D+fa7qb2o2r3KIxvC12nyFbkT/dytaRthbbXuzhqhu
OPu76MNYl/R/A93X/GbzVfvzDYt+GzlGbdbRsb/5FkQfqvafsVZF5sfg4Y5N
Ww5qr9+YtOUX5JDF6me5ypd4RqJ/EP2y6Ad07oc6d2eN4V7V3wvPrvq7NM/3
iP6X/UvztmbG9zaP+0f+1TwtqVhWfkVzuazZ9GAd21rv8HXwujr+dbPl7INY
6yqmX1b7P9TmZ/UxV+98RWP4Uu2WIDfpOksy5sO+abZcfrDO3V7tr9f/A9hD
Nc6Fqj+X9VV1zzH3arOz5nYB8qLqX6n43MUl6xJo309tnqtY3zClat0D7XdX
/fNq10vlDH1Tv1T97T+vb3SjqvUQz8An69zXkBn1/T2nMd/a7P9sVswb+zrf
/X2id0TG1Dh24psqeG+Fl56lY3dobrvCO7H2a2x38syZ57rrlqr/BTl/7+NU
3gC/K3oT3V9bPYtX1GZf/R+b9dpCn9M1vnXV9maVv6m+nX6rq+/+NesuflKf
L5V8r8eK3ln1d8Pzi+6oe7xW97Kf7m/3mvn9L1iP9Xw+U/0pBfMJvA9vqn5u
bL56rv7fpft6WG1miH5V13slrJvnZ62reVr0JNVdmLEcOjRrme5s0V8FmRMd
B/v1NZHb3KXrTVd5re77StWd3mT59vLE9AWqv1T1pzRZ9pxVs97u26rlevQq
K+s+30mbB5ig/7cXrPMbgz5S7Y5H36Z7OhYdVWSdyTrq/2XVD0MPgV4na14A
HgVepZXK1wP/cGKTeRlkVfiZqwIPQPta0TqSSRrnC0GPxbv3u57vbfrfSeN9
RmN4EB2IxnCRrvNFs3VGi3PmBS5gPa6YP1ik59YBvViT9U6PRpahFvGOVvz+
Izd1K7nuPl13nuZzTuT5X1ixzuwr+IWM5Xbm7mVdY29d63yVM3XvB/JM2fc1
nglqN1ZtxqqfU/W7VOM7Vf08xH6u8kFdoxvykK55ltq+mXZ7+MwZsZ/fKI35
Rh1/T9/4k+r3BdU9gI5Cxx+P/P/cwPuha94tbT4SHnK2rnM7a5vo5epnX3QE
mrczYO50bFPmXf/7q75J5aca0y+q+0f3eJra/Ct6E/0+QC+q8m/4AtF5nZtn
3dLvR9X/hQ6p4r1yK9Fvi/5E9O/oMEUnap+gc252+3b6LdF4PlD5i9p8Xbbu
im+KNewadKHMNTpW1k/Vb6/3YaTG9Jzm4Bv9X1X1x5W9Zt7AXsiepDlvm/G+
8nvVfRxFn2XrHUer/KHZ97K2fj82+35Z58dnzZPDp/+h6/QJ89hNz7WrfuN0
fDM9h12RazSGO0RvxjNnb1Vd97R16c+F9Yp161udMydj/fjfacsFrDNL4QNV
/qrxnJtYjjhRfW5V9D5yvOhMxfvmlmrzZ9n77QSVf5S9F52p8sawbrJmvqnr
Ha9ymsqs3odBYW1hH1gtYzn8F9X11O9m0WtpbK0z5sn+CeO/nzlv9jrGfG2c
t37jPPV5q+7zWfRIGuMTvHv6PaE2u+pYb+Qb9IIV132iscUaQ/8whrt1zpk6
fqfKvhnzivsj45S9Jm+q8rKKdZOfip4PL9Hkb2NTvSePcY8qH1Ufu6vPx/V/
F2RHlVvznhdMn65xdNQ4j9O9ba6yC9+V6J1V3qPxdNE5M1lTKtZVvKtrLaz5
G1kLXbWu+4R+D+r//ZHnina8p62brCc9QNfYX7+l6veiinV776mfbzVnN+vX
hjnPmWe5WOVrVfMnp6L7jM1rjVO77/Wbrl9bHftO5S36rcm7UXXdaWr/as58
+uScdTjw7SerfDDye8i1E7U/Suf211gu1m8241WbmXnLmg9pbl7XWJt1zlS1
e7zg+7tV792ExDzedap7SdfonzI/8LDG+ZB+j7AmFv0tPIiOoeTv4zZ0SWnT
XIO16lb9mvX/xCADToZ3yVoXeXyT5cfzNYajRF+hNmdnrD9FZvxD9Rc1Wzdy
VNCxn5ixLPpZkMORNZEZbytaR7pZwXJru7DujVX7UzLWZ36ium31u4h3PrJd
4FDRmybWtW6uc9cpWnd9Wd56oY5p667RO22q34VNlm2fS9s28Fna+iJ03+iF
rs5YJ3tJ3rrw/1gjYuuH2WfH6Lncqfa/Vyx/s6chCw/We7ZC7T7We/e6+t9A
7bdmjVM/W8B/Ih8yb2nLkn9mLEvW9Ttf552n3+2ir1Cb8WnLpN/pnM3VRw/0
5ejZ+Bbg/9mD0pYf10DXpN8Z7AXYSET/qvb7aU5WEb1MdEZ9R7Fln910P1Xe
dfV3MHYg9bm72lyQthzaSf+X6/+avMvoPLmu6M6q31DnDdT/zfX/Dv22V91k
XXcr3e/ZQc5FJ3Nu2jJwb43zDXRq6HdK1mMvQBeXsW4QfuYM3jGVU/Qrqv8d
dU4rZBEd31G/W1R/lc65llLjuTlvnvAm6MTf/Y3Yg9T/X8j4jFn3tbHqdxS9
c9qy5586VtYzOwHdg9r+pPrO+t2gdtvremvo97eOLVOfsepW0bkPlfyt3I58
oeMPxP4O0TGha8ozFuZXdSvnvUdP07Ui/X+x6PXsDtWfwlqVNU/5GWNVuYPK
z1T3qX4FzcfvGesl0F/cqnfoe3hHvWsXFW0D/VjjWqNknXxe5TVF25iuUnmX
1oVR6m+BeIlZ8ECoFuFnEtutdkX2SqwLPzJv/SB6wtNFb1CwXWt9lWN1vSd0
Dxl4QP1mif5Tc7YmfA/7OHaGxHank0XP0TVOUnmDrnuy2j+i9s0qT0hsp22D
3Kkxzk3bZj0/bfkW2TabtX1trH4n6ZyHdew/9N7ID+ht6DvooCY1WweKLnRv
lRurz691rJ/qN9ZcTFP9KXp3vlfbbcJ+PUPHewT6x7Tt3NeLXkPf6QY65wWN
eXzFvNSh6BU1xzMztt3wPmCr3ShlnfDNsetvjbz+8C6eVfG78yJ7fcXv6eKy
dSc3hr17emJ6rMZ2e8b8LfaR+wreq6/X8e3DO9hO7Weq/x30/yb9n1hx+bL6
vFP1X4Rv4X508hmff2vGPCf2lwnYEdTvibqvmQWPf5rm6rzIunRsoi+nretj
rb6+YHvj2WpzUdDLscauVfN6PknP5FJkRtW30TjTutYFYb2t6NgY0XsiIwS9
93ms85q31fS7R23XrXmtX1vlfshlze5/SsY2LWzf76atw8f+O1xtpmVsF7u1
YLzDZF135ar3ggd1rX2zto2yf2BLpYTlvSixXfUc3cvViTEXR2rOF2tsL8e2
x6+LHVTnHgZPUfAecg12P9VvoOu+Jbqt2q6p37Zqt5P6n5I2DqCb6CtF7wB/
rHN76dxBvIc6rzv9aAzr8Y6oTRe1+VTt71TZU8fmqP+uomN0KWqzi+ge3Lvm
tofoHNgRPeOR6u9BPbt7WRPUrjdrtfq5CZ5V9Iei+1Knc/upz94qD9I51+vc
Q1Q+q3O7aI4a6u9j0U9p3odrfKuobFUyPiGLjUlt7kQ/JPrmyHYT9sctNV//
wjvq2i+pz9/Qc+tbuT6yrYQ9sVXVe+ij6uNatbshMnbkOs3dxfAI6uODtO07
7LMfqXy92f2zDoMbWRc9nfpfW2V77Fc177mbqtylaJ7sadYZtX+j2fvyl2nL
g5eLnh55XwArswCeGZ23yo2LtguM0f1fHxtjw7lrFd32Uuao5n0GvvTokr+p
LTX256uW00eCbcm7z/ZF27uxEfwIz1f1eNYpu1/o5UH/g20aG977Jet4XlM/
X4keJXqorjlK/8eK3lznvleyzmZn9fduybqf7arWC2IrZ3/6XPWHqvxE8/+Z
6JGiu2G/Uz+nit5M/Xyj+iNFD1f/K0SfKPo7tV8m+ijR80QfpfZnid5G7X8q
WY44TO2PVP040R2ZB/TjorcVPVr0RNGdy94jGcuRan8MOmjGiQ0FGyQ6LvXf
Xvf+eLOvt37WOkOOdS94Dxpb8v4ONok5PTXyfGIP7lHzXjlAfT9fNG+6SOVt
BbffQmX/xHqtu1Q+VvR70CmxbYg9fR/Gpf9vMQa1Xy9r/SFzcYfaXwU/ApYj
MpYCvdtbanNw2rLo+1nbp7CnvYecjO2Wbwc+OfL5bfROX91seWlibLwLctQC
0U9G7ueMgJlhrFfpOdX1f0uVTxfNmz8DriRrXSjPbLn+Z8CJqVytZtv1ZzXr
kNn3h8LPZ61Pxjb/l+6zrPs8T2M7KOir0UOvproRKr8uWo/N3n0IMnPNNvze
yG1Z28Jpt5P63z52m4Fqf2/a16qon0PhJTVX7XLGVr2kcR6q59eApym4fKnZ
WKzu6qNb7HFj7D1S5aMqp9V8bkbvydPgJtI+NiWxDmRjlf9WzBs8ovZ7R7YR
Yh98s2ac2I46PjW2bgue+x2NYZCOd4Kv0O9Ynr/mYYuAGXhSx8bUTf+rthcH
WQw+o8zzzZoHukT1/0TmOX4AFyF6nPqaLbo174Pu8RTVvZ22Pmey2l8UG1s2
WnOyqq7TrmibH7a/m3TubgWvZ1uLPilnfcz1Wj/6qH4VdJKqf1pr2xzed/1/
VeN8RPSLGucdievP0nnHgK/jGwz2FtogRx+nuTiMNZ/vNbLtg/fpptj8BHiL
adjO4BtVXq3fysgUKgdrrjbXOQerfDG2TMKxbzWGtXTuu6q/JmcbWS/sK4GH
rzTbTjaB+0KvorGOEf0l/av9+JTlkTF6Xl+qn4NUDlJfHXT+QJWXab6/y1gP
f27B+igM/58F+h7d42uR5Y2G/n+St+zygY5fVXFdrWK7HWPrpDEsCTIF9zla
12uHvl3XmgEeU3Vp9FXoB9Q+0vG9i76PL9X331XbAd4oWV7/vMk2hVl1Y5TW
aljGx7YwMsjkw1Qu0XheK1kHiGz+bN4Yp01V9qxaxj9I111StS3jNzCPYPlU
f13OaxHzjB3o47r1AIPYe9V+VdEriV6m+p+xVWjMUysec6ViHQJ2lsN0vX90
fEaz7ZK0ZZ9gXZ5Scf3givUM2F/YM/6r+l7e1NifKloHfaPmfEDVtpN9VC7X
sWPZX3TuC6pbN3JfR6l+CTye7v1tnfu+3pu3VL6XNcbgLh27uWocS18wMAXr
RnZAF1GybpZ5uL5q7FdXlY/XbJfpL/qGqnFgPVS+VXN/b9eMf0CeHFaxPubG
ZutkXqoZ+3Wd2i8sWB/YuWCMAfzVIdhQ9H+m6J0LloNva/b7dDa2oGbL1PfX
beurNszf0f5ytRmh/ttkjOs9S+2rwW4xQeXhaT9jcDns7feqj/0Tv2/vqq9X
Isvg/P8wb7l8J42hWWM6TfQWyDF161r/A09UtS1qT5WfFlx/t/obpjGsgY5Y
9TdWjWnrrbJa8/10QedW8T2hg125ZrzqUvb9irGsO7CHFvyO7ajye435GLVf
qusfLHoT3fMpeo7fiR6t+tdVf1/dtrtKw3qFTLPvIaq4RD/5Ws7fyiUqt9AY
X2z2eoSch+1zXsrv7R/Mc9Vr0Z+iZ1b9Lf8l+o6q1yWexcvgoBu230ytW3Zq
kb/BhZVtJ+paM7bzUl1v37qxyvDtc2vGSMN3wYvxHS3VXN2l8u2Sv5dD1P4K
3j+N7ye1rVat53kKeUXXPVT3O1tt3ir5ewF00KZq7NqaYT1ZrD5vY69R+7X1
fOpVf0t8U+C+WEdYT8BW3V62jIysjK4QvR32aOxqLfY15CNsEBrz2TWvG21Z
y6r+fn9W/S2i+yDjgBVQebCuO1/zc3ndtsKVsPtUbeNrxRqtco+GMco/YNMv
mT/pVbOdDvvXr2rzasnf0ZVV7zfsKZdVbV/EzggGD9skdknwZl0btl/+XPY+
yn56SbDxoWPco2Y7H/YacGJdGrZzfKv2t1aMTQKjdG3F+BZwLnuqzWe6lxt1
L9PL1puhP7tW9AzRl6vNMLV5Gx6rbixWJ9W3VZvdypbl56nuvYrxi++rHNIw
/ubKunEjyIbIiEMbxgCdXTHWCL3f4xVjVNDTza4YS4b8ghxzBLhb1i1sTLrW
papfLnpQ2fptsM2D+W7RG6r94Wq/oe53pq77ecW28y9U9g0yP7iJ88vGbIDd
+KZivMEQ1U/GvoLuUudeLHqq6OGqvwnskehfKsYCoRNrrTbDG8Z+3Yw+u+zv
Df3Kcao/TmN4Qm2OF32C6CdF7xHWFtaYXNV6lrzK2WXzhOh14qr1MJ9qbHeo
/n7Rf2O3FP2A6H9EX1I2Jh9s/t5hv2Df6Ff1Gs5avktY21njd9CvNTywym30
W1n01diO9dtI9P4qD9BvE9EHquwV1jfWuXEa/z76vnYV3T3sC+wPu4X9hX3m
+Ir5zd2ZG/22FH2BxrBuxTrJiugXssZnnw0PpPG/rM/6CM3JcZFx4efAb2Wt
o0D/DIYaZ47FKfsRHBV43TUS049jY9S55bSxqb9VXH6ia52pNfQA0Q/lrF+f
2GwcxZ0188YnVqwnQS/9oeqfBC/E+wymW2N4tdk67qrop9PGrN9UtO5kYz3v
57PGjk+Ah8ta98KYj1Ddf5HbL9O1jgA7pHJO0bbeyxJjaAcGfvjRrPEkg/T/
NLXZXMfGFc3Pbp6xT8LXuofH1faBnDEsB4f1nLYviN5Xv4/Vz0dZ8+h7q91e
4Mt1/Kyi1//VwPvUfe5/WhuqicfwMJgUjW8f9mXNyerwUdyT2v9R8bge1PPN
JsbBtFJ959j0XGTUjGUBZEgwvcz5E8ix6ndr/X5W26ElP6OpBWMgeYe5xq8V
Y4A/BGeka7wD5kDlKTrn5Nh2gpMj2zKwTaR0f0dnrJ9cmLUfyym8W+p/45Rx
SOh+3kUHpP8H6vhfkdt/WfN8fqP+V9e9nKq6dTWekWozQr8zmi1znN5sPefp
Ve+hJ2iM+zSsJz2x6rljDh8QPaHueb5YZT+1+Vj09aL7i/4EvIPoG/gO0RGJ
jst+n6+u2Xb/vMY6TuV+DeOu+tYtjyGXTa0Zz1DTmB4RfYL6OC62TWdq0far
9TT+BZqHfWNjrY9V22Mi30tT1dfimhF8rMZ/YcP7K/tsjXUytjzFO/xy1vpb
7CxPJR5be+5Z/S0Ket0bitYrbgqmKbZvw0n6f3hkLNNxotcpGMN1sdo20O+p
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
L9r+gr1upq61P/J2xvz5gaJ3z5iHxwf/N/acovUd6D2OULlf0diO/YvGG4OX
BQv/ftFrNj5xyJfLwj2+U3M+uhvrtumD1/pM5Wuq36LZ+Z2R7TLqZ3nR+dqx
zWer9q9Hj3Zg0f4U6OYOFn18zTzUrIYxCdj+Btetw0KXdVPdeSpfTBmPTJwT
8DhflSwjvoPeUOUzxFzLWDdCfiV0He1V90TFeQ6erDiXE5gtfOPI9fljs+1Z
5JnCPo6dvHPVeaBurzsvKjrZzdR+zbx99/DhQ87+Ldj1Wvwv0s6tRzBRYrKv
WXIuHnwAZybOdUsehQVhPyIm8diGY+oSX5e4xshzbYkpl1i+Jw8HOdjJj0OO
m1LVuVfAd16qfg7P2+8M/zPyFGDLm504NwE2yjmJY9turj4HV53Pnrz2+1Wd
L6Mu+qqq7b9g0sh3MbzqHMQ/VBy/nXjsxGUfot9E1S+rOB8r/lpDi85lQ/4a
YltPZi7S9rkkr+uF+n9Iw/lkydNGTPWWPMJp54IjPybxiIkRQQ5N4q0Tq5bc
nfibEaeXfMTnif6u4pzUYDjw4yQH2RGiXypYh3Fc2rZF8h3jg0SOOPQcJ6Rt
GyUH6FHgnCrOj3yS6I8rzuGL/yo2XHJG4+OKbw552YaK3rbq3LLkmSU25eUF
61XxqUKe/hkcS8E5Z8nfSixKcs6SS28Cts2C89+Q7/17eDHRh4r+RXR70Rsk
zuVELhDwENey12I3V/0POWPHZ8NLFOwPi1/szznHRCgXrUPCZwrfKWwfxAIl
Jig5F7C/n1R13pAvwaSq/YtFyyfEgFmcs7w2O295nZxrMwJ+4yHV7axnd07O
ucdYn7crBluLrrVIv5ebrC9aUvdz6Bb0QMTg3B9dTMEYQfJfnRvmhzy3L+ad
s5N1efeCMXbsU0vhJcDTqHwt55yFKxLnKx+ecp5DclkSjxJ9BXogdHrEoTkr
51xZ7PvP6xqVjPWr49X+LdVfKXqfgv06BqjPvQv29+Bbu1Tnft7ktZSc6Yek
nCNxas52Xp7jrLpz5ZHjcUDB/ns892V55zqclTg3IbZB/NfIOYKd/cHE+c7Y
Z7sUnB8NO8XionMKg0ckviv5bckJRGzYgwrOK8yajN8f3xr5igcVnGOYPQK9
15qil+eda/WHZtvcybcF77dq1TliiIl8dMk5uYglMSVx/hd45jWqtguT34m8
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
            "]], Polygon3DBox[CompressedData["
1:eJwtnQOUbMkSRauqWdbYxhvbtm3btm3btm175o1tW39s/b3fqbW6VmfexM2r
zMiIEycm3niHlbcvFQqFc8qFQj//z68VCpsNFgr7cfAs0pdw/Bryew8VCnPU
C4VHOXYT+Rv5PUJ6+UahcOtAoTAd6cu7hcKfrUJhCfKPUf5Mu1C4oFIo7Fos
FA7gWIM6T/O7i7I7PcdwofAXvy8578mUj0XZ0vRxDseqnP+0ZqGwEPkrqoXC
ctR5lvM/SHpv+juY+i3qz8/5xmHgY3FsV8byG20Pp6zC72HqPtrOWBek/WO0
f4g2N5Bfwf6o+wDlx5in/QWNjG92yu7m2LO19Pc5+SPor0O+ym9v0i8wvs24
ttHIH0zbozk2OumdOXYx+VvIT0N+PsY3NuO7n/s4PtfyRDvXPht9vsT5TqL8
Rsqv935SNgZtjqftORz7k3M/zj1Ysq9Q+Jff29S/u1MobEV5H/XOp7/H+X8r
bWehv1s497PUX4+6j3LsafobSfkdpGel/EnShzOOPWl/LP0fx/35mXPsRX4f
fjXKz2A891H2CG1G0v5ezrkfZXXKLuJ8f1P/W/rag2Nljj1A+ZGku6Qv7qYP
+5qEMfxE3R+45zXu1b7kv2RsQ9TfhvJ+6l1A/YU4x/uU78LYr7B9M/Wn4R4e
2sg1eC3PUf9ByufjtwB9HsL7uDb34jOuYTb6+44x/cv5DqXsc8qmJ30I6Xmp
fxv/lyA/QPpG/m9G/Wnp83PSW3I/VuZca3LN29PXKZxnLco24tgn5E+m/Af6
vpg2k1F2GG0eovwTxvgM6TW4XyNo+yb1GvS/EvkpyP9D+/8Y/xP0cSrpi7wn
tP+C/Jy+67Q9k3EtQJvnSD9DnW+p/yXlc1M+N9dQp3wM+p2T88/Hsa8pW8r7
Qfowyj+i/ufkB0h/S9+n09fr1JmS8sXob23avs94JiP/quOgfFXyUzG+/ygv
cK8vos5VXM+15C92DqDPmah/nO8C9U/n/wZ+/1zvuPQxsprxzEudr0gvyfkf
IX0oY/iQtivT/5T0vzd1ViS9Jr9pyO9LfnXSd3DOKfvyzvju/I/nfhRlL3KO
FzjXWYzhRsouoM1Z9H8mxzaibF/OfwbpbZwLKFuG/H+0bdYyF6zN+Sfkfv1H
+YyUvUqblylbm3NOR/1DOcdapK+nzTyk76DNDM5v3PuTyL9G/VfM89uF9G78
LiO9K/Vv5d48QP1ZyV/F9W7Smx9341qmrWX+u8L5w/vH7yf6u45jIyibnt9t
pBfmmuuUTUf7s8mf7/zE9a/g8/Fbp/0G9PcS17AR7d8l/7P3h9+zpFfx+6Vs
avq7hrZX8ZuSdJk+f6fsAvITkl+f/makv9EYX4f+1qB8Edq/wpiPo32FYxXK
RnDsEPqeuJZ381aO7cC9eJH8y9Q9m/u5DPXHo/4klB3J+L8hPcw78Qf1vuCc
T3Culcu5d0tSf8x6rslrm8B76XrA/VuI9m9T51WOrUOb6Rlfh2Nt+hufY+dS
/xXyW1H3P/q+kPzxjO9E303yb9J2ao59TPpojh1G+kz6OLWaNcT5dBfO/wTp
W+njjmLmROfG66jzLHX3Z/wfU3Y9+efIH0j+E/LnMIe8Sv4Gjh/BeJv0fxP5
eznHLN4bvyeu9XqOXVLN/RqTfKP3PVt+HWV3MP49Of9p9Nek7EmOH09/91qH
sZxG+Vwce4hrnoNzX0GbE7kXT/KrU/9w7t1x1L+bMc3v+0n55dS/h/YX0n4M
js1K/hLq/0Rfb7jOUf9h+pvbZ8Pvae79/Rz/l7Zjk/+e9H602ZH8TvwOIH2f
8zT9jeN6SH67Ssa2D+WHkz+Q/vcmfRjpg+j/HvI/e33kjyY/OfW3J/9QX+aD
2yj/lvytpI+kfFfPQd8/cux20ptTvgjpeTnHVYx1d9qfQXo/jh1B+QOM50rG
M7nvsPNJJd+WY97f50v7HUh/T70D6H8pyg+kfGeOHUT5nZT/QPo20kdRfgD5
Zym/m2s/kPx51D+c/K7UOZg6RX5Lk/+c/C3O9zyvMvf/IdLHUv8y/t9C2Wpc
3720fZ78OL57/JZgDCfT77ikJ+Z9e4X0PLS50PeUd+4P+jqEY4sXsoZeTduN
+M1CemLO+T39fdfK3Lkn7V/leW1Lfpn+jOlG7s/19LUG7ceizrPKL8pAjGVX
6r9M/Ud4T6ag/Mpi5IdtWlm/tqDdzozlWGUa+vuC/l4gfTblo5Nflr4Oo3xD
8rOTP5k+vnK+4ZrG5v7/N5T5YTPqzet46HND+nzL9Yz0XKRPov0jtJnftZ3f
c5x/Aq55B9ruyO958htTfz7qn8y1bkr9+8n/Sn930u8xPVnuzv6soa6lE/rc
GGuJ672f9KTWI9/v+kD6TdoXfd85/4ndzPc0Kwz35L9NKV+A/hbknCdw/vk4
9gJl81LpRq7nRco7lE1C+xNoP8y4SpR9wPnfpu5TnKNN/Tv5zUh+E+rPT39z
c84ruNbpmkn/RrsVaT8X5WO63tPnC5T9Ukn5exy7mb7G4vci49uc/F5+M/wO
9/uj/+FaZEply3tp/wzpQxjXR4XUOYa6c3HsOeouwO9/5J9kvbiH+nNQ55VG
+lNeP4L6x5JelvFMQvpb+ltfWZH8ROS/Jr8e+cXIT0D+S/Lrkp+La5iUc0xG
H4/T3yr0MWGv/ipcy0c8zy0oO5LjB1P3Eo613RdQ5wyfVTlz7wHUP4b0otSZ
tpz16WXu91NUvp/xlj2f4+X8zzHgB5THqLuac2hvvKvS93YcP5n8Sf6cM/2R
npH36zLKn3D9pL/bByO/7kD/f3BvViN9Cv1NxzlOoa/LfB6kp6H9iZzvVPo4
hfTUHBvB2M6mfE7aLsx4xqPsc/LrcD+maGTuOc09CvmH29nv/MuxlSj7cTiy
sjK/sr9yqPLo0s5x9P8U+TNLkbFH9uTn5+nrTu7JoYxve9cE2r/O9Yzw/eaa
tnA/QH7satbvK8lfRJuzST/SyNrnGjgDY7mdPk+k75tLmQ/vIH+S724h8/tt
5E8gfxPl5ymLuH9wf6ZM7fvkfEn/m3G+J0jvzLENyD9D+Ubkd3eOUl6g/Czy
O5Bfh/w95EcjfRO/d5TFyP9eiTzhXPEvv2N53ifxO5OxTMV4TyZ9I/XfcG3r
y3y3OL8tSzmn43mQazqX8R3NNe7D/R6b6x2d9nuS34v8+dS5mrpL0P4mx8f5
1qNsM47tSdn+5DcjvzH5PZQPq5EV7XM37scizlHUec/5kXd5b45d7vfKGB4j
vTu/SQq55+dVM3c7l7qGX+zcxP07lb74G/U+TuI8RtndjKfbO99ElF3mOavZ
D13UHxlGWcb1b0PyT3O+Wymbj/YHkd+S9iNJH9HK97Zy7/s6xzWd/FyUX035
trRh2KP6PJuyu3ynGMzJ9DcD+X0on7EQGeVS8ldSvtdg3vnpyD/NPVyTvu6h
/DTOdTPl9yhP8rz25vncxPUeS/oYfouQX4zf8aTfY/yLOB86T5Lfij6eqeQb
9Vs9kWNLUPcKyheivwPIz+f+it/+pJeifpuys+rZ27hncu80C/mrab87dWYl
PSkXtwfp2Uk/y/V/yvvwp7I/9e9lvB8whq/JX03+fdOt7O8qpIeovxntR6P/
Oygv+m2Tv4z691P+IuWf0d9f5F+i/CHazsV59uF8d9HHTO7HuT8rc68W5rpW
cb9E/a+ofw3156fsZvpe3v0jvy/cK3INyykL8xubvtbifP8biox5AvWvq2Ru
2Y5j01H+Cef4zv0U/X2kTqSSd3styiegfHx+q5Fe3D0Nfd/JOVYhPzO/b3z2
1L+zkHOOa/1ynpU6i4fpb2GOHU3+aa5njlrWi5WofxzHFqXsZtpfyvl2Ij8D
+ccon7mQNXr6etbrS4rR9zyjfMo7cyj34yB+97j3rEdXsh/153G/0cnz9Tm/
QP0tyY/DOAdpXyP/D/fgFp79H+6JuZd/ew/Jf6fM6NzPsWcoG53+z25mTXZt
bvA7gfQd/JYlvQTnWJ4+n3eOpf4pzq/ee9psVcqe9BL62oXzz0H9G2j3Pue/
jv8fqU/h2PWk36H9h+QXK2V9v4lj81PW4nci6UHuz/n0vbz7BvKb0l+H9FUc
+4v8xp2MbTXyr5L/k/Pf0BcZV1n3P/K3K/84J5D/hzorUf8u/n/IeH7knBWu
ZXWO3e09Y8wvMJ5JGc+5tD1YncFw9Bcj+b8i7/A6/L/P66D9Vpx/PPIV1+9G
9lofU/cTfgdS52P6+53+nmB8g+61qV+n7njeO9rvQ533qHs951uUaz2Z8axK
/Q2L0bncW8/51uV3P+nT+HV739NN/H+7mnuxoXJkPXty9+Yj6O+7StrY9jGe
x2zqZMhvRX4j8ms6tzCmo7g3u5K/m/EvW8/ec/pS9pPuyd2bH6e+hnPdzviX
ZbzjKDsw/puVKYYiA81N3RrlJe73iZz7Scrn5f+blG/BsadcH2j3BvlD6fN6
6s/Bsde9V84h5A9ibK+SX5P/T3nvuX/v0vfbrg88jz3q+Vbfps5e9eTfUp9C
+w/9dprJ78nx1zh/mevbgmt5ShlU3R7j29hvlfyd1N2Bei8NRWZRdtnVdkMZ
wy6muSfXFaNLfa6b+urmXqZ8J/fblI9NfifGeqmyGsc2pOwg2lzJta3G+N9g
/MtT5znKRqtkLA9QZzO/V58H6TOoPyXpmerZO6jTdH+8pvo22n9C+d+Mf9Fa
5v7NXO8oX4vyD1zLXJ8Zy1ydfI9+ly+rP6L8NcpHo3x7yv+qZO68gnOs6nyj
TpOyidRNUH+iTtZX11n3SiXqX0TdC/mtTP3DqPewcz/5TeqZs5y7SsWsJ+tw
vo/UJ5Dfl76XJ/+U+zXyy5FemvpnUL+PMS6srozzner3yXle4nxrU+dD6n+m
Po7rfdnrH8wcMBXP62xlUJ7no/SxJX2N28n6/jD3Yn3ar0++j/Tqfk/Uf6qR
++t9fpryNSn/kvzXtPlfK/oLdZGbc2wK6pS60b8oK71JegnO/7Brrc9D3Shj
/ov0ttSflvzClN83EB3AG43oR9VF3GIfnP9Y5aGh6Ljb6vzKeV/W59gk9byP
U3P9F3NdI73flP9YyDs0ae9825Demt8I8nsx3qkKOTaNa0snst0I+j+K9Jjq
PDn3JhybjPIt1dcpj5GfnPzi9cgGn1N/2Z7+7APfTY5t417V75b0hoPR363N
sRuUJdSfkX+fOWAz0vdzbFPKTqhFFnhMGYT8jox3Lc73EPnN6xmDY/mZOgPu
Reh/a9o/7JxA2Szu6cm/SH578ltUIju9QH478sfw+2coc9w1XPuS5E9VnmX8
a3HuedvRp+1Eu43UNzhHDhVGCYTrUD6NOnb3u+QvIj8P9W8aiEz2DM9rQfdr
5P8jvzL571vR3X6j7Eh/iymfMZ4b1GFwf38nf436G3Uo1P2E891fyh5lIfKf
kn+glD3couS3Jf885z/B/Wkt1+i1ugc6hfvxmTaSUvaAS1D/T/VVlI/HeH7V
PuF8PBQdjPabZxnjhcXokJYlPSu/A/yeKd/QtZzr2Vd9J3VmI70m1zA951nV
/aiyHceeLkTnco1zK8fus29lYs6/ljpxrn189UvON/R/KvWvcr9C/xdSdnop
OiB1QWtrY6D/86izMeU/0+e4Q9mjz0V61Wbq78h51uhGBlEW8X340XJtAtT/
yu+R/Jf8hsjvQ5uvOH+N84+kbJ9q9EmrU/+LobzjI9rZj7xYyj1e2m+BMY03
lD3kX6Qfovwb5+tS9i8HMY5PKT+qZ/8pkJ/Q9Z/kMbxfY1D/eequzrHR6e/x
dtYG14gXKVuPMaynjoD6O9LfZvz2dW2izd7qXhvRjX7gflHdQyO2pzVoPwb9
jUF/m/p+0eebpK/iXtyt7p/6D6jv5NgelO3BsW9ovw7n29F9Y6//RXyWA5lD
nUvvov5h1D9XmYv6O/JbpT86NnVtTcpnoOx32p1LX7e2s9Yuyfifp3xZjm1c
yzOeQF1RN3os9Vm3Ufcz7QGk3+LYadqvOOeTxcgwG3Ntn/B7oJg2tv2H/+tR
f/2ByAvXqu/nfGeVsr7v1Iht8HHafEn6Dq5tOmUT52TS25cjK03PsXfV9TCG
CWj7PmXn9ewl51C+LuV/k76X8iPofy9lRMa6LnWW5vi65N9irNdwz5em7q8c
O4uytzl2Tyk6tjlaeeY++6Wo8wt1Zm7HdrQF43mS8f3CPbmiL3uEdy3zGkgf
Wcp88gv9PUH6T9rsSPkP9LEY6cUHom94rpr+FyX/PelVmpnvruBZV7SnqYuh
rEif66mbYDwrkJ+c+/M66WsZ/3Lkf6ft2dQ/VNmb/hbWhuZen/PfW4rNcl6u
Z9JyzvUC7e/2O6P8cZ8/x7ZjfKt0Ip8qp2ob+EobgLpOyjdpZ4/lXutadXjk
b6F80Z4MrCx8O+f4X390hOoKXYNdi9cpRh/xN21GuHbR326kl+Ie3uL+SH06
174/51+GfjZQH075JPx2H4jNUttljfxqpF/ifrxIejnGsyn35TT6mKgZmUPZ
Y0P6O5zjq1E+PvfhcZ7RXo6NOseTbirDN7MmuTbtQP0TqT/gnta1hf5OdT1h
PPcNZU27gPOV6OOuvujQ1aWvTv+TqYehvNnKmufatwbX+566E/p8V1mG8oWU
dZXPBjMfvu7espH7dyvtPqCvS0kv4H6KOh/wfxPtD8px1H+TOrcy5ok5/0vq
BGhbUT9eiMxTJb1YI/diSvITU3fyRnSDvlO3tLOmurY+43xKv89y7EnOtUEh
83ufNmn3i9R7vZs12rVaGbmpfqIcW7f2V+2wLeofprzFeGqt2IS0DZ1LnT+4
3gHtz+qauF8Pkv6Q8/1M+S/8PiK9Pn3cRv+3F2K/XZf8Leof6HMd0ttyDY+U
YpPV3vgT/Tcov6UUe0GxHt39q8qPlcgoyirqnC+l7g+0P5Pzf6g+l/bbkX+U
sl94h7bi/D/5/Mk3/FG2fTP5aftjX/y6nvP/SP3Nqb815Q+VYhPWHvpLJ/L6
B9XYa6vK/5z/sULmq//VYs91vVqiEp2NupvrfB617C9rQ8Fo/KA9tJnvTZvu
KvS/IfXvpHwtr7eW/p0LV+d6K6Q3cM9NfpVS9As/qnPjeq9VP0O6wbG5SI9f
iP15QcZ7nftJfrO5XpC/ifSNlM9B+juOnUT7uTn/CNJ/KMNRNnMp8vXC1LmR
+kuSv558H+WTkN/Wd2w459PW/Qv5GukB6s8+lDX6C+7fRq5JQ5GZTud+1Clf
ivyl/GZUv03+dtIrOgc7t3MPvuqLjK6svrIyuvM2+fWo+xNtLqZ8ScY7O+kl
OLYu92YX3tNd1E/TfmrK9inkfpa4h3eRPlodq7YHbaCunfTxKek5eY5f9mU9
dV0tkb+U/Ar0sS3pmfh9Qn5mfgXOcTy/d0hPy+9SrufXVuZe5+CRyqbagwZi
A3qd/E2co0rdFcUnqG/wHVH+4NiU9P2D+gHyL5CfvBoboLbAuUnv7vvVzvru
Oj8a+SO53r+4F2MOZr68jv7LffmGFqXsmkr2b586ZvqYlfzpxVyj9surxXCQ
XlydprYHfm9pO6beHu7PqfMz5fPyq3DOcjvrketSV1uZe3b6e5Xyqaj7Yyu2
jpULsXcPU+83dWeUz+haVw2WYAxlHtK/MsatqX8P1/0w/Y3BeMaj7BvaLaN8
zf8DqT8+x74l/T9+B5OfUP0F6S+0B/YFE/CV+8tKvt/f6PML8pfT3wDlC6kz
Z2ybec+8d/Rxm99KPeefhPNfQPpnbZbkN/WZcGx6bVauHWIOSM9YCV7pjb7o
Z3+lzmfUfY381ORv0B7fF0zDdpxvpkrkP/tQ33sl5YOk51P/S/qvVmQLZYDX
6rG/z+t+m37PrUcuWbpXrqzwGf0dQvtfOfZ5OZgAsQF/9/Rxs1SCT/mCOnOo
Xy7HtruuNuta9O3O1c7ZU1N3J+7/zJzrGs71trYf9fu0f4o6E9P+SPp8170N
79OEndjMtZ1rH1W/fjzlH1J+oPtN9+qt2AO1C4r1eqcR/eMH1DlO25s6hlJk
IuXjvRjPg5xrHcZ3KuPbmHaz9eeZLqPsU479UZurttcNlcH6cw+WKmeP5l7N
d/YQ1zvO/ztl81Nvz27sd9pmttHmQ7pFmyL9/eIzIH+u72dfbKDX9uwT2gYE
0U2kfoxrupN8h7q70t995O8gv3E988s8jdz7Q+n/KM6tcW15dWfu96nT4djI
vtg+d+tGTluuNx/8Rnpj1yzG8zR1JiM/nvtrym7ty3o7RH8rU3866rxLX4eq
F6RsIn7nV4K5EHvhPT1LXaZ6vkJ0mi3a99F+xYHYfLX9io+6lrLVfD8pP5lj
t5Feyv2u+gL6eM/3iTpTiGWg/eoDwfQcpjzO9V9N2dbV2KcnquZd2d1n4r6H
9u+U8gx8Fu73vZbFeL5HuX5R58a+2KS0TW3gnKqt1D0z17N2Jevzz5zz03Jw
ceLjnLOdu7dnPBOR370QeXWFSuRbZbZ+dU0cm5jyPQqRt1fslY/LOR4ox6b5
Pvfi0Z6t0/szIfV3sP927NMTkN9eewTX8qX624GsbddSfzbKR1NXXMr+QX2A
c/3TlI+g/MVmdJFiGMUy/qOdm/JZqP8v6Qs6WUtNr0D988nP5PMjv7xYuFbG
6piV3deoRP74RXmW9PKV7E9cc0v1YChfUZfY+9726eY67WNB1076H38gsux1
lP3UCBZpbvpZuBt7+ugD2e9tTdl4teBXSBbG1X7UCj7hkeHgX56k3eZin8Rb
lIOLER/jnCM27gjqPUH69mLwmNPSfqg/GMZt6fQLflXyK2m/5F7tTZ83uK5w
bLpWcBviN5xjxYY+zvk26YuNS1vXe7Tv68+co73mm0awdnNSb0H62oX8mOS7
1JlVvBp13ijmmc1Ofm5+Y/XnHrrXcw97EO/mdeXsTz+m/QDlH1N+Mm0XrSZ/
BOe/i3McL9bA58vvRdLT0F9/f2x0m6rrpb8tByJD30B+LfXNxZxzHuo+0gre
6MHh4FPExP7muzQcrOyl5PvV93G+uXl2H3lvKJ+RPhYlvRHls6r77Olb/mJ8
a3O+Y10/qtHHWDZZKft1f6Y3qfX28s3sPYqc48Jm9kxTUL5ZLXup6xj/jvT3
PHWudb+qvq0vGJPvOf+01L+kkDFe5lpNne0GMmfdxbnHdw1ifP/27COLNJIW
cyb27FPtp33BEL5NfwtT/o9zLb9xXBv9uZ+n3lLOL9qIxIaof2llv7/BQL6p
sZqxcWjr0IZ4Os+zv5K1dVn1D/S/I31sVI6MuDXtT6C80BcbuLbwX8rZK03E
O7Aj96BL/xvT/xXqz8Xj1CJbiaETS7cD/Q1oB6f/U9UFNYMdGYP+5qT/makz
/0AwidonxSO8XgoGSyzWv7S9sC86c3XnxVpsLWcXFJgp62SvqC1rpW70M+oy
1GlMzrm+53cG7TevBr8i3vdT5Sn+n0GbaSi/yEukziWkL2jmWT/lGq6sxzkX
IX2Ve4h6ZGjxM+JolK13os5Zhdyj80mfQNlHXN+46rC0q1Vji164EH3Uea3o
Bt9RR0X9fxvBIu5D+y/IL1sO1tA13bX9Aer/1h9MTasVHJG6goe9BtKP0Of6
fbEBaQv6vJm+xDh+X4+NRFvJhuKVmsF8if3ynSxU8/1b5hz0VQ+Pehz516hz
PuP/lWOTULYtx16l/VWM4SXK2vR/Jvnn68GSO+eIB7paGwPl3d76+gLlKxYy
B2pvWqAc7KE6ZXXL23MPz+A8uxSCj/YnVvqjSsqWFu/YFxlmw56871q+A2M6
TJm6kXszSU9eeIo+FyO/jvZ77Rs8r18Zy5H0tzHlL3Ns677oaNXVbsOx1yjb
kWNveX8Y/xfufenjP3W59L8b55q8L/KveCD3LkdSZ5vh4P60jaqTqZPeVhlO
uYg67zuXahMj/SN9fEB/v9PfpMUce7MZXKG6kYcKwZt4Ds91USWyt/4B2jPE
xIuN34b26/ZljXCtUN4TazI71/NfOfK17R3zEWKr6G/PvuzZvuP829HnB/S9
F8c+cS/YzLu/aTV4tX/of+pi2nzczH5LLJKYnBO0pVRiX1qQ829Bmy0audd3
0v9W1N+cPi6nXj/111BXW877sx11XqbtVZ28C/Mop1B3qnKwOWLKllfe7+Rd
ch3bkvLneu239/2rZMy/kD99ONcyUzm2UG16i9HnLOVgTbR5LU7+lUra/uT6
47ka0Q0fpL2pk2fu9+p367vwUjnPx/fhddrexD1+m7FNzfXd2ArGTaybOqOf
Kf+Q+lMV87zfJf9eL79HX+bkj8u5n97vDyt5JxzLacN5V9ZvZG2/SXlTXXcz
39qL2nW8fuVd8j9Q/nw5+NenOf/ljOeUZubopchvVc3cfQX5F8j3UX65+hD6
XNW9N8emIn8lvxdJNyk/g/bramtwP0u+XAkOWDzwX5zva8quYJwXFlLnn0rs
nef2ZU50bnRON/93JXP9r5XMt64pri1PV4KlObg/mLrrOf/rvf5H4/zPco6J
i7nG59WTtjL3jEn7a1qRj5xfNqL8McrnLwfLrM1K29W85cwX+kx8Qnr1crBa
U7D+7Mrz34IxjVsOnnVmnvd6lez/xIivL36pkee1G+XvMZ7RlSudHzh2TTky
1srk76lE9lqMNoP9+QYfqqT+AHX/JL9ANX4Q6t6UQdek/MtydGPusd1rKwMq
C65F/fvVNTQjO6nTv72db8pv65K+zM/ah671eWt/ov6EtG+QbmjfouzOSvYi
ylzKXs8os1Peco/ifFLJ2qMMuDD5qVvZW+7mHNAN5l7s/U+99+k+8TfFyGiL
UH8v8g+THya/eE8fMXl/3sGzhoMxFGuoiVB8n8//UtLz9WfNPa0SW+cS6kuq
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
7rPUZtsOR6pYB6cu+Y9fa8W++i3lG1K+XyPclXJYvupcqo2a8R7DGI6uxb9Z
bp+2OgLqX9UNz6Vt1iV/gPqDYjADB7XjnyiXihwxcsVoWFXXJ0eLXC1iQrao
pU+xIstw7ImBYIzkA7y8nWf5uPhnns2S6sfIb06dsSi7sBGs+dXaPDrRKTTV
Sw1G16A/pHvhacifQr7UCF+WOv3TyJ/ejq5BTqrrG/EXXZCxXEZ/83TSp33r
g+/97fAM59MXrRD7ij6u+roOU35tM+PxWagj36HnH6lv4yTUP6kcncrO5Z6/
OudeoBNblvao98ifQH7L4XBEHaw+uZ1vTey9fGZy6NbIH1CP//xAI/qZ2Wl/
ptfbSFodjv2f3I7uRYz25Y3YOMR5ivfU9qH/8gJc72Tkj2vHP0Td9IQ+c/LH
KoMNxsf5xEb846ehvKO+pJ3952rF6ETOaYd/eFHGczDXNH0nmISza9H/+b3N
0AmXleXTkf6b67hyKBxr8qnpj3tmMTbR8VtZE10bpx6MbulIfuMMhrP6I8rn
pY/Lh8LJ9hplR7SD1Rmd32TKZ81wDVlnvk50VJuXo79Sd7U0v8cH8s757vn9
yKUlZ5DcQe904ivsO+W7pf15LsdGf7+1I+9r+9YGprytzkDdwXaD8W9xjz1q
rz0U29WV2tCGwzki3/iv7fTV4XzPtsKJoTw9Acf+oOz3dtL6UL1A2b/tcM1p
w9KW9af6tqH4zA77PrkHGYrOWC7viRqZ+9VZKE9+wLEZiqnzTzv8GldTPiP5
Uif9X0l+Bvcz5Kek/ZZD4Qsai3yxk7rT0v/ntJ2qEVuJNuDv2tmviDXwGxnu
ZH/k3mcW8v2dcPDpT7Mi+VYn/G8bl/IOKQ9e10iZnHrNTviV5A6SA3vadvRL
a1N3ZfUzlJ3dji+lPtk3u38iP/VQfJgr7dj4Ninnmrxf2gz1BX62kOchhuDv
Wp6pz1b+Etf+1fgt3Ix/g7ovdYZ+P9Pym64Qjhm5ZkY0MheIsdioE4zDb7Uc
E/sg393mtF+zmPll/kZ8qeSokKtCPg6xAOpA5E8QYy/WXs4n9+NibPQN3LYQ
7M17jGd6+ioNht9Ce/uJlL2n30E3/VvmPfBeyLEr164+k6PsUepHBvPO+O7c
0A1Pkcd2Jb9HO9zDQ+prSW/E77uBcBJ8UY+9a5Tv3UB0PRu0s3acTH+zMfYd
GllrHqHO5649rXDb28fG1F2pHWybGF7lx+0a4QYT47VKO/EI3Iu9Qn7lduJD
vFQMh5hcYp1OuPZX7ckbrjdyWUxB+YetYMqOq+QaxJpt2Y6vp3jHH7VBtoKf
lhNWbljx9WLn/ya/Szv8Y3KDyxFu7AU5D08thw9RLkQ5vKaqZ46SL2DbdnzB
xWPK9bBfO74PYir399yd6KfVrYnPeaMVLv0faLNZO5iRaavh61a+kA9BrrEP
h+Oveb02ZZ7PT9T/2v1gI9xT2tS1rYtx1PdSm5DYx03b6Vubmdwq+lTrWy3n
vLE3Hm2ED0AMpVhK+YKUneQUPZ6xPUybC0lP1xf7xo6V+D7PWAiXqDZEbYn6
lE7ZjE1S26Qy+Yed6LTVbevPtRd9v9qJvUhMovY3dZjqMuWvk5tJHay6WHVm
71H37UrsdWKi9Q15tBNbuTp5dfPawLWFGy9D7i052PXBEOMg1kF+cu3zYtDl
ItDmpe1LnenMXN9T7peLseXO1I2OWF2xMrmyufKgvob6SSvvKN/rs6SO9a9m
9s/6IGmT6mtFvyO2QJn22ka+f7FOrgnf0teHzfi2eD1ivR/j/IViuOKNX6G+
T2yMOrN3qD96I9gzfaXkP/b9EFskRm2MVvy55Uf+qBAuaDEIYhHkYxdL5Psp
15xz9nidcCTKleh8/UUr86HYh+UZw/mc64lO/DH03Ziassc70U1rk9Y2vSfn
+6gUjnK5ytUvifWQf2PpRvxzdu9dn74hzqdis1wDfujJy2KtlOd/6gTjINZB
f5L1WrFxa+t2jneu1794xWp0Lvr7GQ9AW7v+kO65X/X9KWcN0L4gns939ZtC
uLbk51DWnmsw64H2IDEG+t9f3Ik9SYyFPgkHN+NvoeymTUvb1tOd6Bb07Zml
G32G3Mwtjm1Jf+c1cu/kEJFLxJgYfs/6ToufFWMu1lx7r9xq+vAr9zsmx6bP
nb767vHc6+nzr01rA+9xM9+8vtonFDIX6DMrDls89r7t+NiKuxZ/vVc7Pub6
musvvEcj+s7NCuG8XKGT/ZHYSr95v33xafpZ+U5+0IwNW1u2OtXXmtFhqMvQ
R1QuS23g2sLFtDzZyZyxbSV7Lvv7thn/S/0wx+iGv1buEvkv5MHQB11fdHVK
UzfjU6qfizZjbcf6iGu3VaegP4c+ovqKquP5txO8klwd+icf3ghf87OV+CTq
m6gPq76s8rMe1JM3xcKKn72yHf2l2L5h2q/TyHwul638d0804iOtT7h7bPfa
6oP0GdWe19/q+aRXs0d2r3wh+cFafJL1TVbHd1s5Mq+6vwMqwVKon9aXz/23
dhjtMWt0wmEmRsZ4K6c04p+nr5s+JPoSnkP52rXM8c71cqbJnTY35Uc34oOu
nUmdvXyQB1aC9dcHT188Y+TI2+oe+M5GYv7IcaDPuL7jci6JCxIftGInMV7E
GIgPGmpmfymWfgza76ytwTmyljXOte4y179afAqe5n583Qx2U7/T0bvZr4rt
3UZMRyecpBNzvnWGwlX6WTNcOF6vvjOubyvXska7VhsDxFggctjt2wwHolyI
Q9RfuxH9jD4s6jh3a8UfUd9Dr19fUWMOGXtIzrs9m4kxZKwhdSaPt7Lf1BdB
meHAnvyzbi0YEvkvxPCL5XcP4V7C/YK27ZXo/5JG5Aux6+Lbz2mG000OlbFp
/0orHGlycCxL/l/ye1cSW2F07e3l8EuKz5CzRe4WdURix0YMR3c0YSPci3IM
yjWojfHgevYL2h7fbQbrps+NvjdHVeJ75P3Ud1JOYbmFxQctSN3ZGsFjntPz
/x+3EXzrjj18iPqvOeuJbyPXrPr3G2vRycl3Lx+h05w+R/oeieESyzWpz7in
P5fjXr65P1qxv9xQi81JPjH3u2IJ5Au5txP9+0L18B3M1Il+6PFCONDkQtPv
WF8o1xN9RQ+pxNdOHYVYcPWfK9SjUzujEY5ZuWZH7VmbWR/ktBKvcE8nmD1x
BO7x3etv0gx3r5xE15BeqJlv4UN+K1H/YM7xYyn+1fpZyxktd7T+CA93Use6
chy6P5CTXG5yYy4Ye2GGRviH1Lmqe/X5aSv2mRZJv9IJnkafD/FVfo/718PH
Kzea9jy5s+WzXY38m5XgsXze75Rj/5S7vE8dVyP8OKblGJdr3D7sSw5U+SGW
6YTLVE7Om9p5xj7r2/kt0I4MpSwlJ+lyjcQXu7kYTlK5SRfl9+BAbHLa5lZr
hovWY4u1E8PtPMb1ZyHypfFKjA1lDKP52tE3eq4uv+da+b63rgSfZ+wf+Z/F
esvBIBeDOjh1cfp0yPewSDuxlOS4XcW9bDu+C9p4tfUa30rf00FtEI3ES7Lv
86gzfTvz4R7l6Ci1rylzKXvJkStX7hKNYBU3JN9phy9+BecqnkG5nv2tsZOu
5jdHOz/T+uSJD9S/8ddCYlDN3c7+8Hr1Z/TxUzvxJK4lPxe/b1uJzyK3kRy+
2rNGNhL7yTrGm3B90S/Da5yA/HOdcMdru9M/T/5YsX5yzvq8nmlFFvOc8p0a
X8tYIcp0azYSP+j8YsYovkj9iWvJ1O4pe/Oz3NFXiMkg/3knsTF8pj7b/zqJ
VzF7JfhS7YfPFMJppb1QDuOv1dWSn6Yd+UhbrxwXo7WzRvxYSOwp1w7jCam/
+oljfeXE3DmwGp8DfQ+MkSW2XYz7/q3ItMq2crSpD5IfR25NMe5i3Y05NHs1
MTnkvxDPt3khmEmxk8ZMGBWbpD9YZ/dg7sXEO+g7IT8qh0bFEDmuFf8isS36
LOq7qAyuLK5Pgr4J7verw/FpcH9/Siuxl/QZFz+jvkXbnRw36tvlmJVr1jbq
B7wH3gvfqdnb4ePR99aYG4c53lZiHRnDT3zIaYz90GJiHhrfz/XhpIHErFvN
+beRWIgek49WPkt9cfYlP3k7+nZ1pcawG7MdDL3c0nI2i62Xc13udfcU+lvI
X6Mvr5hrsdcTN/JsN6X+OJ3oH8VyHMOxqdrRXy5aCseHXB/fVsK1pE1GX8Kp
1SEOhJNBvnNj6jxTjT5LbiDX680rGbP8mxM00veoNu2s349Ww2du/Dc5/OTy
E7N9fDsyhbLFutrkO5GXViqH00RuEzkBxBiIV9RXQA4BMa87cQ2vdcKJoM/k
zuRf74QTQJ9rbY5n0vccnO/WoXCuGW9JzgO5D/SBeJn6vzQSO2TDQvwLxCPK
f7QR+eOGw6l9XDmc73Jtq+9YvKef/70VTja51+Rgk19djgf9/tSRqCv5oRUs
1vquJ53wuxm7yBhZxsrymr12Y+Td3ox+9Z5iMFNiGc+oxJdoFGfXcDgi5Ip4
ijpfN8KHLRbamAnjV8JxrN+CGBmxMuLD9fU+jPafdPK9iqF2Dvi0E/9q+TAu
KgTb4/eoD4sYrnEZ38hObMliKsRWnFQJ1vPCQrgSjNcht8zo/DbvhPNLP3Bt
uNpyxVSLrZaHWjyC/rLH0EddHUsz/k7GLtPGY6wvOUuUIeTvkHtRjg79vsW8
i31X56DuQc65o5rxada3WUzwRo3wuxvb5jnGdy9j2qoRLMCC/H6m/ViNjFW+
ELlO5FyUa03ONfniP24lto0+sPL7qI89jvLJB6Jvtb17I2OUbN6Tvz8op476
WvEUch8bg0q+LP0l5M4eg2MvtaJv27oQH7oNe/o5Ze3xevo17VXqkvRx0h5l
fMCVyU/DOabvhi/+xmJ0EK6n2lceLYQDWXuZMRz1kby3kNiO7lfWKUdHrK54
sBvdbque+BNykspNKqZF/JR4ZGPvaTPQdiBnsjET5VSSW8k10LVQn+ktOokR
9mI1HGnyxylfXlgPR5S+A1t3ImvqzygXbL86xIHwVxgrdJ1OfOnkqDywE47B
b6uJiSH3oP5bxxfCCd1qZ391wXA4577rRF+mbnX8nj7O/pX95EAeIF1sJ7bo
Sr28MaT0A5y4pz90f6QPoJxx39DfFM3Ek9QnZHvyh7bjOzBdKfYI59MJConZ
6Xrp/mascjje5HozZtkL1XDEyRWnfPtTOfEPjK3gM/HZaEM0vokytLL0KE4x
5fd2bIl7FoLXkgNSbhE5Rox3pg1RW6LytLY/MTNiZ2bmXk7ZDceAXAPG/HN9
Vsev7sjYHmuVsxeTn35B59ty9tb6zy3s/FaOf4exPsTX6O8ipkpslXE6pu1G
l2K8q1Ex12rZYxhbS8yPe4+7yuGOlhP9P/dhHFuNY/MXg7eT/8rYPD5fn7Nz
gHPBwYXEf5V/w1irYjrFACgrG+9nBup3yZ/YjD5rj0r0Xe4F9U83JpV8yHI6
ye0kd8o43XzzfvtyXY/djc1T26c6RPHpPl9tTXJayW2lTUzbmDbQIxvxgdcX
Xk4K42HJaSq3qTp8dfnukfRvF7Pm3um/dmwvctae7PzcCd+AvANTUX5WJ7Ku
sV3lAxzs6Wr0Cb1sOJytcrdq49HWYzxY67s/OWA4nJHi/7XZarvdoh3dsj6s
8hOrA1cXfmQheMc1a8FyyQEjF4x7fPf6crDJxfZxJ9xW+gzpO+Rm0fGL9Z2k
GzzReIPx+VP/o31BX059wNXPiwEQC7BpKfZc9ftiCYxzNFk3eAK5scdRxiM/
1Aq2Uyy2eTmbnIsn7Yt/sTGcxUa433+kGk4y/XXEZBzTiL+KvqDa4D6vJj6F
/jZy7Mq1Kz+hvpZiaMXSntCzl8sRoM5cfki5zOWIeLsVnYj3zjnAuWCbdrhT
DymE/1nOcbGzYtzPaoSzSO4QOUTEG3/g/R8MZ7J4p5HUX0P8LeedphubsLbh
zRjvLJT9rxN/EjEDYgfko5T7XZuGtg35s+8qJmbAvsPRIekb45zn3KdNTdua
casmJb96LbYQ28sts3U7/BDyRHQof6sdLKcxbWbu2VP0z9Emoe7m2078WZwT
nRu18WnrO723f1LfY2zuAwvhPzZeqmuPMSSMR2Y8YbEW6pP0HxWzoGwkptx4
RvLv+n7JSShfq/HBjRV9gvJ5NfzAPvsTyZ9Yjf5N/xzlO/2Z5KB17dDnQ/9W
dX/6ZolhHxX/ohJuJ99n+V5H9Oq75hxQDn+ee8NFi4lXZHwTuXGU55Tr3uiE
q0Jdgfxr6mfkctDmoT+imGbxLMaCNpai+rqfi5E35ecwJqKxEZVhJ6rHhnGU
bYdj2zitnFiDlyjP1yLDKlu+UIlsKz+jsoV7uhXLiS9m7GB92M4sZz0Quysm
U2ym3+RQPTZkv1Xjj4tVN4aesfTO6IQ76fxy8LHGBzNWmxy2ctmqQ1S3sEM5
ukVt/Nry5ZiXa14dtlwTu5Wj2/6it34Yc8J46fLjzFCIDCJ/yhj1cPXPVUw8
L2PSaGvWfmE8oomVN8pZg12L5+59T8bY0r/TGMrGUhbjajxz4y/r+2NMVmOz
1lvhIzb2n3wXxl839saZ3I+7a+GfNNaW68uq9NWkztzl8NnqL9BSHi9H/2J8
E2UwZTFjkY3bjX+ga4HyhN+YfB8zF7Mmyf9hjG85rsRci72erne/NqHuB43c
Z++3Plh7cOzN3vxgjHfjwfzUW3+M4a1+w3iaxlbZv5h4xvr/KluovzRe2ZbN
cMsZY9v9vzoXdS/G8DJ2mDpN629di67TeEDGfnL/rx5giXJ8e/1m1RmuX0us
JDHh75ZjE9Y2fFIh/vj6gOvfp5/fhPTX5nfucHSOxouWv1BuYX1WjZ/sM1S2
Ms6Ez9Z4mZ+4dhYTX/6VcrDazjHGn9DHWl9rY01N1M1+2Fj35/I7vRqfb32/
Z6fdBN3woeorvAJl43ejq3Wt8ZnIR6J9VluK+1Oxg2K4xXIbe2O8buY85z45
huQakj9N32ntH8aD3rsd28tsxcQ/WKxnm5BD9ezh2EC0hThfyaUqPkFb1IOF
+Lbqc6TvkfYe/Y0a/A4YCMfmT8PhRzaW6PXF+G9pQ9Ifb9VqbEvqpdRPqTM1
/t8UtcwN6t/U2bhfaRcjY4lflm9Q25UYefkdtQWKLRdjbuw2ZbIHK+H4U1Yz
Poq6fzl/5f79sxNd1YiefGg8M30pxISJDVPHoK5BHbH4SnXvxtLwmW4mDqsb
P0MxoC92sqbJeyX/lWud8R6VP8Vwj+Ke6oT/5TPSs3YjA+xZjs1f2eCDTrgN
xKiKVZVPVqyNPsbuF/QJ1DfQmBDyaSgzKztfrM61Hb5x79Xpvf2f1+S1iflT
FjYmurHRtW8Z77Ms1m8gHB7G1zQ+nbHOjYFsLGQ5EuRKkGNMfxZtMupHby3H
ViO+5+9COCvECzk/+uyN8SEfjxhAsYD6LC3fTPwkv0V19OprjU92wVB8QuUf
m7UdrKb2bbnW9DcRi7oi41mxGfyFtobXisH77dmJLlkZeK9OOJTkUhJjIZ+O
MSaNNfk955M4w/iVKxQT88HYD9pY9eVSp65uXX3COqXEWDDWQrHnX+oe1PjW
xrQ0tqXXbPx6MRxiObrF8DMbs8zYZeInjB+mPmA25xqOLVfP9RkbfYpC8KhT
thMrQU5j8a9z1hLLcvlCuJ2MXygXshgy/dHVmYhNnrocXYp8FvoanSumiPK9
asFzGRPE2CDqX43HeRXjqHbjj3hzITqf9erB+8mlIGbWPa94LG1R7nnEZ7mH
0HauDtq9RbeevdGc1B+pnquevZH4otHc29cTG1QMovFC1a/rm6GOVX26mCax
TXK2iQ+u03+jnPspPsz7IRZY+5Gxnzr6IJI/sJj4bq6nxsY8xudRjYy/ZC2Y
S2V/bWFHulcvRD4WQ+690aaibUWfbX23xZcbH0UfGH1hxPDrn/txNVhefb4+
qQafLlZZjL1Y+z0bwX7IgS4X+oL8Dh0Kx6zxK+UPmawYGejDejAYYjHcI8sH
rD5eWcCYUfIRG6PUWKVixo3vqC1JbKPvoPzzu9SiCxTfdTX9/9CJ7kWMo1hH
Mc5ineUM0N4hxlGsoz7T4hnFD2qLFdMvPlCduLrxxfgd1Y4OSdn1zeHolsQM
ih0UL/BvPRhKsZRiRtVHyg9i7KRf+X1UDz/yPMX44MuHLY7WuVOOKOO5iqdT
tpQzQfydGCaxTMYgcv84JudcoZx7on3iwna47sWUjdPb/8svoU+LtjVjTBhr
QnzEefVw/sr9a0wx+YqMP21s7OmGo9PXP1JZR86VfnUX9Hf4UPqUn1wfEn1J
5MxaVntqO2l1ROqK9DnX91yd12ed7Cm2LSc+kXuNhzrBJqnTULeh/5yy1qgY
kfR1Ui1z1xbF8GOJ8RbrLYZaPLj+c2LZxXyL/Tb+kGuvnOJyi2t726P3vbm/
lYNLP2Z9XvRHmMN3uhofRv1TxC75LNQJ/VmOTVBs3nbl2Ar1PxYb7PdpbN1V
6uFKl2PS+JPGk1qmGJ+OOcU/1RML5/pC+GjEjIgd0YdFPLD+YuMVE/ND/7HZ
KF+jHsyy+GAxymKVlyvGH0R/TW3NYsb0Z9T/17KVSvH/0aalbWuiQvCQ2srP
17bkfrMSjLNY5+VL8W8Ri6W/sfpq+bXFNIttNsak+gXjs4it0YdFe6j+l/oS
LlhIbA19mPVldkz71+KDoS/GQoXEXxMjLFZYHyT52sXoitX1HrnfNT6gsrMc
LfIhycklN5dzvvy4+kvPPBgMs77m4j99d5RxxIfq061v932F8H8Ys2Sinj7x
Fcrmryc2iBysxpcWQ7ISdR8qB1siHlqs9Tal4KPPaMc27PnETutDekDveh5q
B9Oh7VEbnLY4481Z5p5ceUX7epdxX1dILF9t9tru/cbVLxiPwfgL4ncuHg6+
2Nj2S5PerxNbv7pBdYR/lCNzKnsao+XqTvSZyw0nxvEBnciQ8oV8WYlsuU8n
XDxioJ2f9B9W3jUmgfyV2k+MLTsP7XftxJ9ceUmZTn5FMTKO/ZPhYGe0b49R
SbwkYyU7pzm3zT6ceJPK9Mr2myqTqs/sJDbuWupkO4kHq3zuO248cHXCrpOu
l+433CO5VzJG8oPUP0T9znA4mIyPqr3Ib/nwQuJzqFNyP/Z5T9dkvFqxuOqX
1TOLsTDW7IzlYC/EAMnnKK+j2CDH5NjkxHm/EQyGsWBnLgebIV+Oc586EsuN
l20sQe0hxjcXH+vaaQzo3TqxkYxF2ZTl2E6cg9UHyN3m3HxdJ7YfbT3uP1yv
v2Kc81Lnkk5i7MnzJcZXrK/6zHdrsZfc1onMMaIWG7CyyKeMdyPXmuHEUzUe
kVxa7qfcV93YCV+IOnN15+ok1U0aE+oyyhZqZG+mzl3duzF1jSurz6i+o8Yj
mriHfxYHbXwBuaJXKISb/sRO4jM/2NP3qnPV1/ndni5WP1v3Etoknh+Oz63H
ni1m/+9+Ql2v6/UL3r9K4kNoP5Jv+IhOvgVjGGjPUj5dmPwi/PYmPXsjulyv
1b2k+l33/nKkavsR26JvhDpw+W98Bj4LbQC3dhJD21jabxXCVydfld/iu6Rn
6AZLJpeb/GzGu1DHq67Xe3BFJ5xEchPpc2u8avkjxZZrj5BP0m/e72fl4fhn
LNJM2nfad1v+wi+LsQfIB/hUM1zacsjIJSP/irKw/jXPV8P/IjeZ9g+fqfw3
6sPVyapjM6avsX2fHI7+1+9vlH6Pvubthq9UeVcbpHymcpbImSAG4K9OMCnq
12arB6sif7zvs/jKJ7jua+uJz6S+Tb4H46PPOpz302duPEdtUeKbjB+pzlp9
zR/V6LLVacidvmY1ug75aYzVoP3CNX+6crCJxjR5rBy+eb9H8cIjK+Gj93sW
b2R8bvFS7j218b8wHB2C8R7e7r0P7snV161Sy17dGNEz1oPZFrt99HD8b30f
fT/V4cj98G5Pt6MORz4sebHU7cjf7dzuHH+F9sVGfBNv7Olfry/Hd1E8l/GU
xAep71OGPaiS+HTa3owBY7ycvm7ebW0T2qLkz9L2MDP9P1YLVlPZeONC4ruI
LTI+vTpg+U7d87pPUSZ3L6zNznu4USG2POOTjpJXtEfV4pOhvmzB4fD7ut9+
uBK+dWMfNJRvBrKmaB9ThzJnOTKquhWxXO6d5QhV3ymfltxa03K+GWvxV5l+
OBxP6svlM9RXRzyh8e2UZ+QEc//1Tyfy4JvV2AC1BcoZJneYGCXtL2LINq1E
HhVbpo5RHZj7PX3zxfz6/hhjSCywNgz1m39WY9u4njqzDQf/tX45OlV1q8ZM
namd+Jra8oyJY7wmfSLUaTl/6iuhPChHjz4d73Zyj/wel+3pKlwzXTvFqIhv
cM4wLpycd84lfnP31LMG+i3Kr+y9/7EQrIsyhO+Sc5r7bd853z31Zzd1sj/U
18c9pPazrTr59mbu2SuN9+za6zvheizmRjndNcu169lOYg+rexZboAypr5nP
wGfhej1HOe+nurndG/n+fId8l2bvZK+tTUb/bvencguIj9V+Z7w4Y70fz7FZ
OvlG/FbkULm5tx66Vm7K+7VrI/pd9QWbloM11yajbUYfUG03rtfOHcYoND68
+hxtO+qvHuhEJ6tuVh94feHFpuvb1KXOqfX4I8pdcYJ70E44AuQKkBNRPgx1
fHKG+7zV/akfMLav9vw5asF0qn/Ux0Ws5y+VcF0vQPu+So8rpxQOfuP5HNeJ
rcU5XllJHxZ9WYw5tyPpnWqJ5aNORp/7+5vhlnWNd63/r5rYw8qEyneFSmKN
GONI/bLr9cTl6Oi0Lb5czl5RzKHzye89+8cS/LZvRD6coRz56uUenkhfo7Pr
iWX9YDNYNGUIZQl9Nl1bjOm6f2+8yubGVzb+kDKKsorzibpT90T67vtN+G28
U03sYzl6jC87QSWyszKD+8k7msHiGENevMmM7kkHImMoaxh/yfVA+6Z81WJn
5YdSxnf/cDz3dPPhYIa0Z7lH03d8q3L2bqfVYz8SY+/zV//s/K09c+FyOA68
795/dWNypsmdJh58Vu05XNORQ/GBXa6d9VcuGjns5bKXqE59r/df+/JJHNt6
ODKXspf7V21j7v/u7MTnUt9LMSpiVZS/F+vJ79r6bT9iIDLTycqelfgayeGu
zKI8teFwzmG5/M3udY8uhV/bNV3brvYQ13rlidVL8QHVF1Qb79c9m7v4gOkp
X7g/MR6vasaeo61VfqXfqP8RfRw2FBu3+ij5wfYqhcNKfmfnf3Xpm3F9N3QS
T8Nv3z2/e3/loSnK2U9oC/d7EFvvM/PZqbNXd69+/hZ1R53ov50jnStvrkeW
c484D+ljOonluym/YzuxAWsL/mg4vgHqr8UbTlaIfeuiTrgfXANdC5XfXXuN
ebivtsxOZON/evg1dUbGkjq+El2SOjLnV2VwZfEVemupMo3rRbGaWCHuUfUr
FVuvrskYZ9rPlFeNjSHHvVz37l8eL4e/UNuP8qtYLH1G3c9d3gl2Q0yb2Db3
/PqTnFqJLuAZZdxifCGMT3RpJ3trOQ3kNpivFnuSOnrxEOonpx2MTkCfU+Ov
GqvaNdy13Ph/zr0rFhIryvurLUn/g33VjXdiv3HNc+3znnvvxYRpb/o/TW8j
yQ==
            "]], Polygon3DBox[CompressedData["
1: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
2X5rfg==
            "]], 
           Polygon3DBox[{{4764, 2269, 2209, 2208, 2374, 3718}, {3702, 2347, 
            2184, 2185, 2348, 3703}}]},
          Annotation[#, "Charting`Private`Tag$20091#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt1ElsTVEYAOC/dOKZWYgFESESYSeRIBIrYkhYCbEgNpq0Uq1qETU8VNVQ
osQUYtywEENIiLmmEkVrrHZTGkIQ8/hdsXjv/Pf7//+ce+857/WfPW9qQUZE
9PO1KjMiie+0j8gXbM6OuNg5ohtrYuvYXjWXWD/2nu1hmxQc5sPYL3acXe4e
cUz/aJaSe9Ul4go/I57IGrMiPrAGVqtuBptkngHyb9kNlseG93AfORE/2W25
NmuX8S2sd7uIOnVfWAUbIT+E3bN2Pd/G9qsbw46bu0X+EJtqHNU1YgpvU3eS
jTGOY3PYF/EVNt7a1/SXsO967rN84wLXv9Rk5UY8YNPEC9nrThF/xA9Zrb4y
9oZliBtYgd6BHSMW8fYsW38jvy4exJfwn2oesTzPdIMvZR2Mj1l5KqJQvpyl
WI7+cz5P5G66XsF/y59nT9ktlmaf3EN38TNWJL+anTNX2IPnhjq5Idav4Bms
ic33HENZJesp/4Kt1FOiv4plqWtmB829QO0GlsNaWKma9a6zXfeyx/VsLiti
F+zDV/FlNtM4m51m78Qn2GTjSPswmbea9yAbm5wtNoo1i2vYYnuckh/MHrM1
bK150uIj7JbcZ++wlFe7/2/Oz025l2wua3Vvb9g+PbV8OutqrE/Ombmv6p/A
KvS2eoaL/FRybtgPZ7yRHWNHk/fEPurpo3YnO8D6sj7OzxxWwXbr9QjxVO8a
1zvVFNunLslZdi+r2Q5WxNxizEr2jtV457v0es3xRO8KdtbFdrXJFs5UV9Uh
YlnSr86WxSrzVbKlbBsTRlpxmbjau6nRm5v85i00Xf9idVvlCqDLWK6/LPn9
s3ymPB5YuyT5rZtnU+a/oxPTFBezjWwjy0z2PnkWCxbyLRq1xV1faZb80VQq
cguR6xkK1eb9/9/5C/denqg=
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVzjkvhHEUxeGrorGbGTtjX2qJz0A31kQjgkpoJJZWx0zlExC1fYtdrBF6
34FoNErPFCfnnvO79/++6amFzHxBRMzRfXHERllEc3lEll+URCyVRqyb1yoj
EnKV+UiX4Mf8UvdQEdGPJ80Jc9p9O7XQlW4LW7abc5OSk3ZasTYqxL70s7pq
7JpO7M7o33U38opcwwfkX7rAdt1+u9vjtdg+v8z/Q/4bNO3mkW/az+ofzB12
OmkGW6UJfZ3bQTsH+kPqoz95B6vHUuZTu2d0K2/rn73VYH7iGXyIivQvcpf7
RbkR7zaf5/9dfsM/+J2+Rz9qbjKP8ALsk4bNP9gkb8ZevZfTj8njeSb34mms
Vv4H+u44ow==
        "]], Line3DBox[CompressedData["
1:eJwVzrcyhHEUhvGjYeTUrDxyzka4BSW9VFgaOgpp3cBqcAPGFajknHbdyg6D
C/BTPPOe8z7f+c/XvLQ+s5YXEat4KI04L49IVERcyPuyiC15VxlxWBUxVx1R
J/vsA+jHg29O9Nu+S7trsdfIS/sVnuzz/I651fyIQXdDKNQ/23e5Azdt5lp5
bb9BET8rz3zbzr1gSjdsH8GbfY/vkCl3+///J+uxrM/II/+b1r+bR92MIcml
cMwtcPtcAxrx7q2srp7rNCfkBjaR5U+5cW98ooufkLfeauLuZDGf0U/qu2VO
n3S7ghLuW79o7uG+zI+6nCzQ9ery5atu2vzhdor7RZ/9R/4BSng3hA==
        "]], Line3DBox[CompressedData["
1:eJwVzscuBGAYheHfBehr7Q6UIFGiDKNHYsMwLCwRLoBEL7egiz3WSNyBjVFH
H+0KCFYeizfn+845fykanugZTwshjOEjPYSOrBB20YmhzBDa6QraMJUbwrtO
i3kHrRjUidJlzMlTOSG86TTZt9GMuM4zPyZfskfwqtNAt9CIAZ0T+XF2CN26
R/RF58BcyP/NcD9SvH1eAe/HPotnXoI3yku655t3Q6/xJIvyL81X+JJd0HOM
8B/lM7x88547HuzT9k+c2SP8hO49f8M/T/1rk/bzJmX15kXU4U6nhq6jFnny
mF61eQFVuNWppGv/5+RP3ujTqbDPoxxJnbis1LyKMvTqlNBD7xfTLvwB0B5D
eg==
        "]], Line3DBox[CompressedData["
1:eJwV0EcyRGEUhuEjltQ6WIEVyHkDGAgtZ9VGNNoGmFCUsWwqmzG2ACNroIQq
q+DpwVtfOOe/97+3MVfIbpZERB6/iYihVMRLOmKYLiUjjnDF7zdENNVHrMkj
chaj+NO9ZiL6za/lZjlvZ4yfwDhCPqiJuOFbzNflSX4aU6h3tkx3y9+h1U6p
/OS5SbMKvk1XTp91Kd0y366rpAPyO/1ANY5xaS+nr+K/8YNanGBQ3+FsDb9L
03InrZP3aIKu6E5pl7xBV/2TPNaQMUvqznDvvt12NvkZfhbb5p/Fe+rO8aDr
sVPgv/Q75vO6OaR1F3jke+1s8QvmC8X/j0Vkit+DN+/us3Oo+wds+DJm
        "]], Line3DBox[CompressedData["
1:eJwNzskug3EYRvH3MyzVdAW9CJcg9vaUGhcdcCWGuzBFYk3iHmhLi0Qlvo5m
G0P8Fk/e75zzT9psvjxbSiIiZ18jEWfjEec2Z1u2PxnRn4j41DbwpjXGIsru
ntbTPrQiLlld63K7WgG/a5nRiDXfHf6YX/f9xp/iLE7wsA3ZK9/yvsTX9L9M
RIqf7EWrckXtEf9qTffBnrWKVtDu8Y92587gK76vN/CtfWt1d1q71HragN8e
tBv/f4c/4bt84t01t81dcB1u1bsj3MY1bQUvW1tbcg+1llbV8njRUi3lDrR5
XNEW3JxN8f8Pukag
        "]], Line3DBox[CompressedData["
1:eJwVz0cyg3EYx/HHRpQJiTeJbsQFOIDeNtg4ATkAC6KzIxewS3ICJdzEBZS1
MpaMMuNj8Z1fe975z1ssba5uNEVECR/piKtMxFY24prmOiMu6CWqXRGVJCLR
nXZEpN2866q6cTmvb9alcO++od/my24m7F98C1qR2B7clPkfTNq/aRvakbM/
2X/5Kdsjf65LeSOjm9YV+CXdGV/zxijfravIdXlM/vQ/Pbqsb+ryjK1X3pH3
sIt++cZWpQ3vzLrp45+xJr/QvH2Q1nDnmzk3A/wr3lCwr9M65m1DdFm37/YA
RXlBP0xX9Ee6Exxj5P9979xi0c2h7g8/zTHs
        "]], Line3DBox[CompressedData["
1:eJwVzrsuhGEUheGtYM7n6ZwiwbUYjTEJF6ASEqqRSDBqF6A0NM56EjLhOoRC
BoOW2vMXb9b+1lp755ta2WxtDEXEKurFiMdyxHsl4om2ShE1uoMq2jVvnbK5
hwoWdUp0WfZa1ZPfe/fdeKBN+Qt/Sb7tXUz2dK7lN5jEs2xdZw1lWV6ngFn+
gv2cOYuS7Cf5G/9Pd9T8jS8UZX3evqyju2Xvin+JguyOf26+QFu2p7OLDj8v
/+QP2x8k9/gf9FD2y8vJ07wM5u0e5CNO5NnkLsbMx7oTdBwZ3ojumzlFZ2QN
e13vOfeOaFqnZ56WVWkdNaT4Xd4tHdg90z1FQ/YPKrk0fw==
        "]], Line3DBox[CompressedData["
1:eJwVzzkzg3EUxeGrMRSx1kgiqPgAieUD2I0ZNY2ODq19a3R6ZnwPWcSMJHZ6
jdIoMFSeFGfOPb9z7zv/N7W0OrfSEBHL9NoScdwacUT9bRGzcr49olTPHRG1
zogXbAzrk0d5zd4M9qZrpCZ8SG7mn/oi9sV/6Juq9hPYuX5E/pCf7WfkXqrq
rvEnrEtO0QD2x9M0jRe955H/yjldkpfdPGCFREQWO8WusHtswryAzbs7pAPq
waZ0F/i7+c48SCU3ZV7Bu/Fb8779jHfu8T6+oTurv9dcwGp2dvkOLeqGfWMS
y/EK38bTdtd1xfo/1t9ESSyvuzGv6bbMWTebPKUbxy/NJ+Z/Jnw9Bw==
        "]], Line3DBox[CompressedData["
1:eJwVz7kuRHEcxfG/iNb6BCqMCHoSe+yFfQaNQmhslREasRR2FU/gBUQlERFE
w+jIiDVREwVCwmeKb86555z7y735Q+MdY2khhCm8ZobQlhNCO1rxmR3CoGw0
N4RJJPNCSMe7fMnzMubQbNuCAdsL+is7siunL7LtrBDK+C16oO+XHer3+Su3
vukXEnxMt6N74yN013sffFTeZPNMN90p0p3rRvg+WaPuif7IKnUxWooSPMpX
6QpmkaGvwAK/iAf9BL2X/dFuN+vdq0MDevXDusvUht/QR/l1Wkx7ZNf6CH9s
H6fTmEnd0iV0RXwh7jyvpb7fP8XlZ7J5vkteQM90ydT30mq39mxObWr5TnkN
vaGF8h35Ld+BKvmW90/oP7CKRS0=
        "]], Line3DBox[CompressedData["
1:eJwVzjkvxFEUhvEj0ZDYK6WKmEXiA6BTEUFtGcYYy+jVegkRXwDfQLQKzCpo
JRIFicLSIKj8/sXNc87znnPv7cttTZeaIiLvvLRHlDsihjoj5tT3zryT0W/3
RNx0R+yrK2ayuCAbwEUsyIflVdlFW8QgP9UV8SCb4I9beP2l7Eh/Y74fc/Ir
rmYvxS3pU3aXsc4dqG/NpWWtmOfTuILj7ivbHZO96if5NxzVV/h3dZb7wEeu
2anyDfcWuCKu4g5/6J2a+76wyH1iL39s/zvJ7J2od7k7/VryP+7Uzgj3pD9T
P+OevCG7M5+RrSd/5jZw2sy1d+t4LvvlZ9Sbsh91CWf1f8kd+A/C20CV
        "]], Line3DBox[CompressedData["
1:eJwV0Dsvw3EYxfHHLO4bFm/AogOLhNiFRF0nEmFR9zuvQgSbSYsXYJF4A9pS
dXkFgoWSGFw/HU7Oc875/n9p2jKe6p+piIhJKlVH9NZFpPgjzdJObURXQ8Rl
VcSc/ETzlNYlsQOUtWVrIhLYBdszNdqP6iPadTlbDpPnHXJaP2V/wS1Sp+7K
lsdc80FvZjDTmD73Ema3zNi7de9ySf7g17pW3bJ7hXrcBd2qe42G5Bv5s8z6
pkm+8PY4FfWVfN1WsDXbjuU2+pJv7d98yG840e2X35I38MO6H/cd5o+PyKeY
A8yvvIkZ1QXdYzL6MXcCs2UrYrb5hPxgP7ef2V91Sf/BG9/DHNI/6sJEeA==

        "]], Line3DBox[CompressedData["
1:eJwVzrkuhGEYhuFXb1fQidj3aAQnQIUoqTBUjNBKGPvM2E5A7GtJOAc0YmkU
Cg4Arc41xZ37e5/3+b7/rxqbGUrmRUQSbUURV5gsjrjkduwWRiTMv86DZRGt
fIFx2TlP8I5OV2nEi/07t8jPsFkScco9skp+te92fpL3ufPGFbI7WbP9CY6R
kI15d1vnx9yEI+Tr3ds9cie27LPeaLQbkB/IXs0N5r+CiH7Zfu6/ZPWy4dy7
fIgDzOX+0RvTOh92v5xEnXyeM+5NcZq//E9Wd0+vyFyr02sudS6X3eotYgQp
FMrTvM4LvMY3ehtc4+4qz/I+OuQPOqO+kfHmst23vBrXdinzEhbxqZPWWXHO
xzP+AQfRPqA=
        "]], Line3DBox[CompressedData["
1:eJwV0ckuw3EUxfHb7iyMfQJvQFtTEIKNpe4kbNggVTyCJTG0ZlZszUM8ha1I
kIgEtW7t8enim3N/55x780/+rVMLuUIiIvLobYy4xXZzxA0tNEUcNUQspSJe
WyK6eaPePfSQlvTuZVVZF+8aeTtXdJ4e6CzK58w/vE5cYkj/go7QfZ1HneHa
DWTNJ/Td7T3ZoLlD9xwZ2YP3rHu7siovi19eTjZJB/BmN8PfMK9jGWPyY/oi
S8uevAPT5jOcYsbdHXcX+C+67bx+2ocne9uyXVlZL8lL4Ns8XhdRNG+hhC/e
Cl3FBJ7tJPHnxpYbvbx6tNW+kbeJO3mFlzKXdD7cKHun+Z/mNX6Rv04rtf/E
+wdsXkFG
        "]], Line3DBox[CompressedData["
1:eJwV0ckuA3AUxeHrAczDnndAIhTBC7AnEYkF0ShPwMaOiJ15HraqXQqJhQcQ
YyO18gClhhq+Lk5+955zz79t2jyaHJyqiIhJ6qyOKNBqVcR4TcQartRGZOoj
nuoibsyNNGBelzWYN/BK/lUZ8WsPWYu9iGP0za/CDF3zX727qXPutonu6Y6G
ZF0++9acwJLej04rP4lbOgncxjd5zt1F+Xtht/0RezDP+9Gdc7tIfbx57Mdh
fJAX8Nn9O2/He732XUzLlvi/+inegHymfMu/xBHKy1+oKJv2W7K8lHzCvOeN
FH7I0viJbbJ9/rLOAZ7y/7yf02uXzdgP+R1uj3DW/mU+wwX5d/n/0D2WJXkn
WOJlzf/PrUvE
        "]], Line3DBox[CompressedData["
1:eJwVz8kuA2AUxfHbSWKBloVhJ56ERSsxBPEEEokVktYQngBriiBiWJmnDopY
eQPxAl7D8Ovi5H+/c869ydc/szA1n4iIORruiOjJRRzSRXtEN17iR5cQU50R
aWpti5jFBC+LV9iBA3o1THpv262bq7wd8zXvx/1vcx8d07P8SN5rvmnepy/v
Cf6g7iQO4WLWXdqQLeEIr0ijdGK3zE/bPTWP8Uo0Tsu607I6/nrn3LvVy+Mn
v4FlOxneLt7hHtZkL7IVe3/2njHolVeUFfBed1+3BROyN15Jltd/4K3yktSg
TX4Kz/QfZQf4hOdYae7SVvMPuEYVWcGdKq57Z+id/gEbtjji
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwVz0srxGEYhvHHwplSrJUcViMrCmUxjezlsFSKxeTwARy+gYUJUSa7mWwx
ko3Dwg4LCUUsbbAe598srq77uZ/3/74zLZPzw3NlEZHGbFXEam3EUV1Ehrtq
IvLyTH1Ejo8bI171m+YtZKoj2vS9+lZeN7dzB7JyTt8pJ7Bj3nffhXzAOfO0
/aGcdGeBd3UnJZtPOWG/p+vzTcp7vfxud6ZL2vU5cy6v+N3N5h75Etf6K1zL
g/p7+QGP5n406AbMz/Kt+9bML/KP/Isb7/xxUZf37pP9nK5CnuUJ3xZxK39y
Oead+eYRZ764EmPyOLrtRnkRC0jZLfGdfpmn0KR78eaG7s29H6X/iiF9lgvY
RtrZf2q9QdU=
        "]], Line3DBox[CompressedData["
1:eJwV0DsvRFEUhuGlc638Aq1bJMxQEjIu02kkKpQKgyHuRCGh9gMo1QyNQhTi
UggJ45aMGEqFWhSeU7x51/q+nXN2dsNEbniqIiImMVUZ0VgTsYsmtFVHtPBB
bcRpfUSzeUjWwaeyFLfbO3kLm86kOSvb4zNn9jlln66LGNHPcA6Xuivc4Bpp
Z0r6ed0c8ihURXTLunQn5m33a+JWWQtf4E43ab/nW/sjP+De3C9/Nb8l37a/
86CsxGV7H76RlWV43/d/k3/qR2V/5qK7PeEFz+jRFXWL7reEBXzIy/jCue6T
e5074mX9IY8lb+AtjrGTvANnZHku6Gd53L7CG/of2ap5QLbOJ/a1pMM/wEZA
wA==
        "]], Line3DBox[CompressedData["
1:eJwVz7srhQEYx/HnbM457pfhGHDqjIyYFRFnOmJwWRik5JJiM2CQhfI3EGWT
UBxhEqVYzBbFhFwy+Ri+fd/n93ue9+3Njs0UphMRMYX5kohMaUQ9ntMRu2UR
K1jFMh5rIn50X/jFlfmbK3RVqEYlnuRnfIoiWu1scxvv8H4y4txOh+eTVESn
bx1zF1/wJVr0ec7ZvZN3u92T9fC17FZ3gzXdsrzA/f/I+uz04sG8pRvwPIgR
3bBsCEvyEX6RveLNO8ft5OVj/Gme5Tkk9PfyD37HhLvAARJIyw71i3ZH/dMC
l8uSuhTadRlz6f8uZlCLI6zr6jir33Q36X6Dc+ZBXYOuiEY0y7LchBX8Abky
OFM=
        "]], Line3DBox[CompressedData["
1:eJwV0EkrxnEUxfFrKONjowyxwd60wcbSUJREbB7KtCEiFNk+huRNGDaIkoWS
KCIlb8ArUCzMW5//4tu5/3POvf371YzN9c9mRcQCFvMjqoojqnFfFLGeitgp
jcjQV98pWoJiPPDzCiIe+Y36u7x97CXwW+izTittkJ8URrSZm8zNeLf3Ij/i
HWMTG/jgf+JZ50b+Zb50785+O++WLuudmK/kp/RJ3q3XhS0MYE02mMz6nfod
6NE95A/RYaRlIzppXpqO4o33jm83J3V6ZRN0Ct/8M50fmoM/9MmneL/mXIzZ
S9F5fg4/GzPJ2+Ecm/wSWqWz7ua4/8rQDZTxL7CtU07rdCrpCiqwilosya+T
HPU6+3ank3enB/gHFjI8xg==
        "]], Line3DBox[CompressedData["
1:eJwV0L8rxHEcx/H3ldP5lcFfoCiz0WYxEIPCIsMt1NWZ0N2kLhRSbuFKDC4/
MhwLhVKKDAaDgZKUQVFsRnl8h2evz72e78/7vt9ve3Z6OJ+KiDzSmYi/+ojP
5ogy6rDTFjHXEHHGfaGpJaIRt/qc/lj3gQldwXxrY8Qpl26KeE12yEP+Hc/O
3dyTLJtfR1X/himzJ9yk/LX3x54H52+5zb9gia+5+8WPyVFU9IvJTlkyO4Ih
9wZxpC/rH5HyX4PcgDvj+n65qn9AUX9p54Gul9uXC/p79DkX+Bpf5C6c93Tn
cp6/Q5e+mnyLZA5F3Q16zM1yeV2Fr/i9hU3M8NfJd+M7PduUmTUzVbnB78pc
8k78lezQZXUlMyvJs2MZGe/5D6BVQmE=
        "]], Line3DBox[CompressedData["
1:eJwVzz9LglEYhvGnJdSKAj9A2By0S+BSjUFBX8A5cmwJoi1B3SQyEBqChrYI
sgiMoj9LWNEQ5PCGi4OErS39HC7u576e9xzekyuW1rfGImIDN6mIH1xNRfxO
RgzRxCGO0MpGNEbpmwG+JyISVLkDu4o85/touSPhspmIM72HNf2SH+dO9ASr
3F864tjcxYI+0JfR0D9R5PadSbiu/MImV7f7wK7esXuXK/ybrPGvuOeXuHlZ
1l9Q0C/0PfMzrv3T4sjJU36He0Cea+rb5jvU9CfvfcSct+ZQ4tuo2N3ybczw
05h13z/tYDme
        "]], Line3DBox[CompressedData["
1:eJwV0L0rxXEUx/Fj8zjJaPAP4JaBbmITi5LhyiLLHbgYKAN1SYrFJmXxUAZl
ciOSUkp5SN3hqkvyEMogZSavO7z7nHPe5/v9ffs1DI/3jZVFxChOyyO+cVgd
sV4Z0Y25qogffVZmayOO+S+kayLW+HpMcf3cgZxEjv/ErHMzqLNT5N/VH3jD
Hv+GAfek0MeX27vnHlDEDv+CXu6vIuIXW/pHNJt16dfVPeqiXHL+1exZPiFj
vmpeQFaf5+5kASPcinkeSX1K38gv629L/0D9ZJbztn3Mm12iU92Bdm7XzrV3
3uAKs/wFEnwzknY2Sm/2T7axiWn+HEPcoj7j2y1oU5+4o1VO8IP8mcy4J80n
0MQd2WmUC/gHibZEyg==
        "]], Line3DBox[CompressedData["
1:eJwNzDsvAwAUxfGLpfWIweiRSNRMSDSRIKYOHomhCYNBJVIRFW1CUmNrZPAY
SBgQUgyNxcDoK/gCZWKxGQx+w8n/3nPOvf0rhYXNpojIUyUZcdEakWqL+ElE
VO05+6B9FdNdERv8M3uyPeLP3It5WR9eydfN5/IaDmHCj3HckRV4W1R2d83r
lI24u5UV+aPmEt7IXnAKu3XW5NMdEWPyNO27n8SU7E42ZS7r79G9mypvBl/l
c7xmty105O5BNq//LsvKKlSlDP/RTcM8IcvoL+ot0bns0u0sf1k+bD/AnP4h
1vEX87pZnRI+6WxjkWpuc/w3XsLfYzqhOv8Uk9RD3/ZnGtDb1W/4+0FHfnzi
F/4DBS02lA==
        "]], Line3DBox[CompressedData["
1:eJwVz78rxHEcx/GPIs65UhZdSQiDv0EyCp0sN1AiDO4iytUNjHfCodykKIPJ
r+4GxaCE0cAiJRYDZbKYlMcNr57vz+v1en8+32/b1MLofFUIIU25SAiFaAg/
dSFEG0KYqQ8hhodNIcyat2RH2I1/Otv6KecJeRozvH1Zq52IbI8W+ZPyHt6S
+UBewl5slPdjVr7My5szeKd7W+nHvKdzY35wd57u5XH9Lv6w/orzKp2YE9Qi
u5YleNX2a6ho75Q/4p5nWVKWq7xHZ3Y+sI8/oDumc647jiXnHfqVXeAcr1z5
V0zRIw3yh+jJXMCk7ia+6K3jBh17fxfbebXYTJ+8MnVU7rPz6jveaFr2jl/u
i2OnfM2c1SniJe+Kvs3/GSI8fQ==
        "]], Line3DBox[CompressedData["
1:eJwV0D8oxGEcx/GvzfkzSDIonOUcJpTlZDJabpRBBsngMgjLcVgwoA7LYaAU
JQNRZzJIGTEZlMwsjMrrhnef53l/P8/z/PolJ3LZmaqImMZGIqJYG7EuN9Fe
H5HESWPEbHXEHtdhn0IaT3ynXDTrlj2o0+mqdMx6ZT/6kNe5qYkYcn+TzjnS
OvPcAlbNz8za+TX+VmbqIgZx6fwWWvgH/kfvWX8bbdwA94yCe1awz8/wH9YZ
/hNvXANXkl/233i3PuCO5Yt3St7I8s3ykd92fsR6R57q/Mmc3phOwrpPpyin
fM+uvNCZMx91ZlLnynyYz3PLWMK1TkGO67xW/qteq86B/REOUda5N/vRS5l1
ouyNO/xy/8qnOl8=
        "]], Line3DBox[CompressedData["
1:eJwV0DsoxXEYxvGXybVcSqkzOCm3xYIsJpRJLpNBroNS1BnYKJncCuWWMzil
znbOJIoSNtmU0SZlYJFMfM7w9Pye5/v+3v+vf3J6cWShKCLmaas0oroiooZ+
SiLuyiPuqVbO1EY8OKf02bKIxsqIYvOtWDOd4y38l27pDMtQp7knrIuvulun
+7CnTfcor9OnXC8nsSv6cz/Mb2LfWAJr1/frerE+2sUa9N36Z3qRjyip65HH
vHGDZuRNnsYm3BvAJvmWborn8W3nvO98FTo+WngD7cmz+Kxu3zlrx5A3DNM4
Psg78Dd9jt7ty+ledXXmd5wPCjv5Ib8wU2XXmrlLMyk7luRjbM7MCb82k9A1
4ct8pfCP9ae0Jqf5Df8HUuY6gg==
        "]], Line3DBox[CompressedData["
1:eJwVzr0vg3EUxfFr8NIXTbQJ8ZYweNkkNjRC7DSmGkQiJF3UKvoXmDBgkbCz
sBjbGIhJBwNpjPwDLBZ8nuHke+459/6eZ3Rzd7XaFhEVGktHDGYiTrMRtVTE
Ce7jZSGig2+nqvndzg7eyWvJDuWT2+6IDdrW9eMWPtkZ4Ftu6rgma2AZ29wF
HZj77K0kb/LL2Isvbn6ooFuUrdtdwA/famFZl9O9JV72ikfmprzBl2R1rMlK
shnzI03Kls0TWNE9yG74Jd8cxnvfGcJn3axsjm4pL2vKinwPP5Xkbs/5a5z3
5p4+Yy7yaZzGK90xP+LdlH7c3V+Xf5X94meyq+vUnem+ZVnzF+bwwv2hnX+R
hDO1
        "]], Line3DBox[CompressedData["
1:eJwVzr0rxWEYxvEbCwehY+TIIodS3gZEOWdQJi8bZVCUlOMPYPa2EKJILHRM
ZHYWKQODhVLinyBh8DFcfa/ne9/P8/s1TufGFooiYl6aEhF7FRH7slwWUV8Z
sYQbzutSZ15VHjHLL/JrXA6PkhElerFcSo29jIzz1fjOvcmk3V3uxRsT+jP+
yqh+yH/hiPxwT/IttXyWG/bNDE555xWr+F58kR7Zcn60362P+mYXPmCWv9EH
3WvBDKZxju/T7+xcORdwyP0G/UJazVOY5a7NzvR+/zAgtfqjecH9pH7O5eXW
uQ13uHvzA9yWBa7TOx3/70jCLG+3yKydD0zZOTVb1WfMT/S02WdpxAr3gc3O
x/wm/gEB7Db4
        "]], Line3DBox[CompressedData["
1:eJwV0b8vQ2EYxfFHiFarEqrRTbARwm41sIhiQZAuhCBRe/kHGLFhM2jMTdjE
j4iJjRGJGFiEzafDyfc85zzve+/N7SpuFNbrImKV+lIRx80RJ7TdFNFrLuNx
JuI5G3GECd0ubck79SUs6Yq61nREXpbAdVrWreESbtpZ4RspZWfW/hwt6B51
4/w8X8EzevGMvHxaFvan8Bu/8B1zujF+0X2j+CZ7x0nn2nRv/IzsFQuyimwC
b8xPdE2XsnPZsL1bGpKNmAfxUPfj7gf6oh5ZlbppT3df+1b+gP/kO/is977j
Pygjb5ENuC+D/bXv8owD/hTT+l5dg3mf6unCfOVs2W5S/5f0H/hf3MGcvp2q
9A8VIje4
        "]], Line3DBox[CompressedData["
1:eJwVzz0vg2EYxfGbhBS1KEoTCWK1kDBhkwiLB0NjoYmBJhiQLgYvq4GEoQZi
RH0Co6mNSPgSrZGBeCm/DifnXP9zXXeepy+zEa3XhRCyNNgcwkU8hP2mEC75
Hj/mPS0hLCRC6Ncn5Bzt6HrN23xL14alzAf2D2kNT5pHdKtyDovZiWN/lJWX
8c1aLy/JK7yqq6eoNYQ5esdf7Dy5f5MndBXqxGbMGTfTvIy98l08jVXkRazM
592e4M/4lFzCIl2Rz2Jp3VhtpmFs0s4Qz+Of+g+6Mz/ycawgF+zc0Kiba35L
KfxeX7LXLXf4/nb60T3gVf5Nv5TH41ijvXO5gQ/wpO5ILuquvN1Vu4n5X/7F
T719Rv93sTqj
        "]]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
vl4bArsgXjlm0RhzDrn2PaByiPU7+XRRIuroklEIfidg+Tu1hhS2hkc5eZSR
9pru2PjMIRC6ses179NOcuVOW9wGuS4S8ejOXoznPwsM89ZX6ibjwf+av9ws
JfUbHTpn3HpgLF5JRWpdN7Hc8/Cw6eJakvmrMVBhQzfwr3z/Hb/Tx51vWMqu
kUyL8oTjdzoJyIi9OFoEVg3Hhh3iisk6+zEm/TMjEJf64scI/c658NFG+p2g
MvgjCb/TrSD19W2OZjLnyXbbB3pJfK/wN/YHbZAXtGqA25HAMxuP2IqQPBDd
+l06bPcorNixI+fm23oSM+H5wii2nbyO3LjrvEEveLC6NWt9bwOFonNSKW/7
IXOAbZnCnQrYufK8fWhfI3x6s3Sd6Kse2LyxIqqhph30T6e7vhDNITZf29mU
g7+QJf2/bXXPUj/7QqqrJqOYRKWKvOiqzCad3Udi16SOwL3lK9lEZnPgIFE/
2epXSYz39yziWDgCW1+7rMT83bsz3RzIOwzzrLyQd3zsY/DjXOYEot5sNhYb
YqFm3D8X8z5TPvs/Y3xqVicI8yGQIT1Sgvi2/K/1khZSS54GKqa2evSQtbXn
GSzVOmHxWcPgyJp0ED16+u+S523wdmvMNcwrlXyvLTrbmQVRr7UWcld3wvAk
txbmxdTfVT0wZakinl8m8lqWtpMVUcEFw1v6Ifa/+cz6/c/8/ndevdEMeWNJ
ufBaWklTxrsbIt493IT5rOP6rP84VArgdf8uQ8yvySXna2N+jfdORprxiSTo
V7ZuqPuQBpwJEgZGH0dhfd6tBvYFJSB023gTq30PVBu33cd8mcLH5UX4PGSx
qgjm0ZidBeafX3IZH8HxV3EuvUzHJxXGPVo4/sjZz6n4PcV9u7Qxv/bEw1YI
v2eb6Ns0nO/cVAgTnS9pDVyjifO9c9rOBten777wb8y7PdwSfx3XR+DyoAuu
88l9jhgXJKfPrJlf5+JPZs0cdF8m+jbivhCWwg/z+1L2Y8SXp8yb6Bt5Wf1I
TyP2bXHqB0pGwadOcZzuI2mX5cP8HVROJc7n70RYxhYh3zRXHF2Fedt97i+c
cN+3NTx+j3lAJ+1AzAOCTUrsXfwe/7iSMY4FBExabJsa0htI9xYGFtMyyq/V
Eqown2iakqmC6z9LwrbjfJcyaRf2v0skJR9K7tbfKIbWij2NPMz0O//vvCT8
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
7KNist+udVtZLdk5ZimH5803zjEb+yoktJWUYl/ozD1c9dhXYebatBP2f0iL
6hHC/rcN/I482P9hpUv3Z9S9mKhlyKPOXyT50lrUvQQnWTOuSRoB59k9ZuHX
s4jo2pzBMz9K/vcekZD/7tHq/+6R+KrF3ixdI2QhV0LO/fyXYK0wlqUbVAab
WVR2YL3/vbq3RthfesGO3MVY7x+XHq23vqEdZFwjg0wiy4jwrOYHrO9Ymqzn
iPfa5Nn1ZfReQ+RMhhreay7v9A3Yp3ptmHEo9g3YHpK/Ecfxy84YxfqRT4+7
fgmeayJPw2eDsX6E1ecdfj8Rvdt/Db//5rmJ+e+/yOBmh32A53q2HsU+GFnd
1fN9MLZl/OzDftpqdrtfYj+KSHmpTFw3lWsp27D+wnZO4izW18gKZX/G+ouV
niKBWP+odzWaoF5rU5+KH+q1buXW8dH9IvUfT9rS/YIva2AE96tuj/4S7Kea
vXOZNPar2ZFkPH8ehKY23sF7bZZ9LoTea/j5xLsc7/UZchz7GpHV98/pYF+j
FrsvzHiuDLzHD6CuO3mnz3LUH15mcTqI+kOfzy+4UAceFnYnHOu8Eot9UlAH
ril5j63q1FtQD3tlueCbD/lnoz2vb2S968KNdY4x3b9yUK/4Jab0FeoVe0w2
ymN/1xXVjkrYv2jubJ4KnvO1z7/wob791JETJagzvM+gH4k6w1X3rL6gHv7e
3ItvWBfWsWviBOrh+xb37MT6/aFfTxc2+9aTsMf2Kni/ll5YWpBNMuHeofJX
WB+X/VhyBHXUc6Wb9y+vyyevWN5yo+5UMFt8DepOvwWt6EL9dj3TeCrWzemv
eLUN9dtG2+NeYN/RlEwJ7DsKaic3zfcd/eHQ44n68ONys7WoO427ZHUedacC
txf1op5cM9TnFNbZaQX7KKCePPk/++P2X9+yg//Zn1zmz/q94l9IBAhq/m3q
BqatRfaGjL3Apmcz/3z/NUd8TjYmmc8/l/YQrsU6vgPPzVVRr36oVkYex7+7
eiQX6/4Cd/IWoP7cKXBGFL9/0jX5dA7JJHkrdXhRTx65bWYY10E2dMd7rLPj
jBKuwfoCKSuhI7iee3J/XsU+Yx1/Ui5h/9VY2xdqaJ8lwhcNob70vdvneKwL
EFzvMIz60v3cXpep/QczXRZWav9JkIb9vP1vbeNgQ53qVHtaJda3Zvy5O7/v
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
i7CHdcaBw+xl++MCw2BQ7cPzUKABOMnEzO3yj/DGbFQ68eAQnBNgrLsb2wxW
tgvdUmrpeb8evnNOuAV2f9z5q6O0H3iyvtxL/VwBttV86gteVAHj5nchtWVD
cLQy0AHfnzpwU4S+T44u3TuJ76dWpiqi7tRB624j6gaHvukaom5wRq4kF3Wt
y3Y86qjJKAbvrvsxqA+UGQnxQx3su7Kxb6gP/HY5Ig/1gY+dZnhRZ/sktzUZ
dYACTMazqANMb84uwnUYPLpnF10HCJwyD8d1uCX2w/1WSBLs5njPUuE7SExO
iS/W/tsKO5fsaquGBJA7PcYulDlEJq7/jbfPaoR7Ag5PjcTLiUG2JhPmTdSD
2/Qxb2LhdPI5xsfC/ic+Rur+i4+V9w86i6rEQOGpLQozscOgEXzFs9K/FuIC
+A/t5UiFmPSEna/0B2BX7V1lm9J2kOlpcMT3g3O34/tE0dB4/v0gtvHd+L5I
aSW+TyS3eM+//8XoWWmyUSzpVeS6KGVOxy+q4IPsOogoe/SMjkO2PzU5gr97
7OQCfxzHevapGh2HLGhh2IS/28BXpovj6BqJL6P7TnIie+/jvu9ZocSP+54V
V95D14HkJ3sto+sA0uEXP+E61Gs8YLhT/pFsqLSTwvOQwK/ajOdhILXBk64n
YSrXY6brCWzl91lwPU/8F/fb/D9xP/Lkv7jfsxRL70mpVDIldvnCSh96Pu2h
3Xy8AzIfi2G+kqSeUG/J4ughWhcKeDAf16x/wArzcT++sb1ps+kg23td92M+
rvf//l3yv7+7vV0Hzy1JOZ2O30mqVvk34XfqeDd14LxUG0ZwXsQvenEyzkv7
/14H8r/r0PTucAGus3rLPlxn8lTu+Pw665pEm2BeLP/ZqpGmv32EOzmDD/Ni
J9vWp2JeTzdjBPN6pMJApR7zetf//cqi5xCY/Fwk8T4W6DWH4jn8J7lotpnU
gu9W7WzUh3PsiZjEc5vazmiJ9bPOS491YZ17Oru1GsYxctZ5P0fdrE87++ba
jGIyLHA0Cu+F9qpWBqzb/fR+6TmsZ9crc+fC+MmaR16u9N6RwR/31uM95WRv
n8J7Z3yM6SE+H1c7twHvo+yLm//wOZfQIRN6f4nemyIlen+JjjhjBN7f36FM
mkd66sjB6fs2JyQryYSq4kvMd8+JdFyRiyoj51tEDpXY5xKG5xsuMeuNgJa5
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
0ZPwJ8cOUvQkBffLCpCes7Uy7lH0JHzfmcUoehIj5vIkpGfKvLGdwUWUHbKY
Q+Sp81ey1q4xILGrCTja9at5bxaB8V3lstJnKeRrdsXpquwBmNfissYjtY9s
/ZFyMWJrDaRcJzox2TlwYXQyjvdTP3ydu/QP76fopA1zj3p/z6gCo+Ky9Sn5
/dBtw65yijuYrJYqecwuUwXdYguCwiT7IdXpwU7WyA9kP/vGyJUDlL94p+FM
Ymc7JEgZi/p7t5PLn+R2cUSUUP7lu9u9FF99PcOk6a/cTr6+OMXJZ1sFWyoN
mJ5VtIOwlVuFf1gr4THrWxlvUgM6W87em9nRAburx1euim0lQhu+OjIlV8H5
v3iSceZaJj4Kz600nkLzbh/UlO0nfTf1F6/1CCXZw1tdd/2ugfuHtUvfBvWR
Ces4y7NicaR/y6k3Udz1UM/XlCntMkBsMswd+tLDk2TdArxFWcpAXJwEXdsy
QLrSm2aJLnxFjnSyv+6aVQGFx0bu8NzuJ1HbbVXUXseQjW+SPmw+Ww0LPkQF
OrX3EsfPn1RWyX6HUwNrrrFkZIFx7vMf2scHSPB6c62GwiJQXPbjuXZqDtza
KyyofHSQsMdovNrcH5A0nh1w+6lTLpSkt34Ll+wFZ+ix37gnlWToHbyzy7IJ
ToVL61Hngg0GnFzUuWBT9lZnPJdW1oJy6lzAZH7vNHUuuC16JxTPpTnGkfbQ
sY888vxiuH9tLbgFtVtcEc+Fl38yJS64dMHrI6CAcwNbLDWTcW7gSTmOmQG5
LpgWWaWowNNKTs6XMRxcWQLTyuzHRN53QqW38XDq51ZS2W849/rGEmg+rXuV
WaEdUrsNJX3XdRCla9LeDmylcFRhy7yA1+0wvGT5g0SrNtKQ9nhEwKYK8uk5
wbMM6LnB9LzgJOZ1Hs7KZXDbMSmnJDSHSPdZd2Df4HqDojj9R+WQcvf0iWmO
fDK0xOOekW0/VKffwfcLGrlPePD9Prwux3i/SXFb03887IfxLNt14UohxPIB
BJx3qIZI2UrkW8J9Ik4R+VZqXhmDbx+4y+N6Eqf0fDWu1+tUZqy3LtUv33x7
gPy488zfvMyfvPGd+2qdYhlI+xq/UT02QF4qqSpobAokHt/fyfHwlAP3UpvL
GFe5vD/PA+PADXI6ZzCust7I9JhgbxuofrV4olNRSw6yqhq2rG6D5G0vKnkM
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
ITI4F+LlUm6wSjZDcuVAkrBROvE/6NPEz+5Njv9ZLY/xMRN6Lu1Cei5tHD2X
VoieO3COnjvwjJ47YM3lFab3cIA8WlKb0P+Wsv/fmVxjvVAMH89WlMpJDoCE
3M9NvJLfCE8F2X7TsRjG2rg/ex+oJgrWS84NamYBn1tCdQlXP7yMk51lPKub
ZCVJe55530SOLR5P+j1QAe/tj0s08HZBgMc664baSjhtkhQRFdv8P79sAe2X
qdB+2U43SS+yvBeC9n2+fjKzElw59wjrqNRAo6aLcKbyANFX0Nt/WyCbHF9q
7LXwUAk8k+wrCLzUR15KMmVIHi0jq22ep5syVYJ+h0emdXAf+Wm6bqQxpJx8
uLVKcnNiGdg+Mj2M+ak9f6xsZg/lkCVfRj0w/vk70Fzsp+oAcfO4fmc7axYk
GwvZ6r8qgR7aj6ug/bg22o8bWVARjHhOLX9oSOFJHJz6ZvZTeG4xOOJfaN5B
jIeTF8/XaSGOpr/PZu2pgzRX84uNDj0gnJby40VfA0SY87oqrykFEndwDbdV
H3HqPnc+o6yMXO4pKbf6XAFHTJizcN7Z98lGjnXFVaT7daUizp+CMJUrPBJ9
5FSh0hyFG3mk6oJ756hp3X/ydP4K0nTcY9Ix5ivmxTaaMyU4q+WR1dPaqzAu
baKaxiqS2gbKmdobZNg/EB0xt5cXlSl7Lz03F+kprzOWT9ETbj1cUoL03MI9
SwLxzLA7f5XCE6K2/WhAPCNvdmXjeTdvzfs1T6cFlqzcuR3P69Cn7L1+TTs4
7WjO7ZLpAJH+AJkF20uBie+w9LufbeTlDdHOexNtpLzfscl5fjWIKK1+d+Vh
A1mxmVeo6WQGmcuXX3QM85dl9UqYR3Pmvqr3J6+G6EsXXsI4/7/zgyEKOnR8
6W1S1BWRzGhy/WQUc3teGDHmzz2D+QLPtZ9uZM3vgdzKNYk9kylEbe+8Zdrr
WuBse3EfPvcNx1Ze6rlwuX4nwedeofvJ9NH9ZLbQ/WRaDZMlEf+Em6SXwh++
x/1sRfxZY35nYVw0LM4ggjO+HdJ3yTLioo/tE+Pyi0KIpnjKU/vpKNJWt19s
rG8QNGsmiblRMxmNbY+LFKW+9+Ky/Vr2XTDP5Fc6zo/78jHtCc5TKzmw5QnO
U2tn/nuf9CV9nzSJvk8Ksb1nNHtfk+Wcl40324eR0+uOpnn0Y5+1U6GfQ7rh
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
T/atVXHE+o1Dv4TeIH36dLJFKfpA+YN0QaQPL7zJpPw7mOK7vJuX8u+49V4z
/LsIB652dvbP8Cm2Qygx/yUc3Dj72K+6Qbh0TFKE8o/g8Ily9I+ge+mkG/pH
Of+JA0TQcYDE0Jnp77xd5JP5ub2UX0aK+CX60C9bRvfrbqT7dUvR/bqFLNd5
U34f+C8xHxmi/D6fsZx89PtSV3H8PD6rG7K5nj+h/D7Ycn/BnHHK74vhuYb1
k3C8Q+prSG89nEm95IX1IT9dO967l/UQAQmLFif+YmjmXs/zbbQBZnyH8yl/
kwgUS12g/E1ocn25F/1Nfbp/1G+6f9R7un/UqgULwym/FdzJwmj0W72ZYxl+
65iNSS3lLxONE8c1KX+ZGKqLaqK//E8c4Cnt75vR/r5zAPtDxKff3XLFY/5i
cjZy2T3ER4jfdRnlp0NE2KGSp2/K4MjuRxf7KD9dk10G/XQY169BPx0ip2PP
op+e8Sc1cWJ9L9ldX/zmypcGwr25ZhfGAdyW34pA//pD/NQbCk+iyjXvHOJp
vq1KdnxzB7m4b9EhuepYEif9RfVKWwfMabl8AOEmhYcFKThEr0hYg/DWosAQ
xfM9pMXxaf4tlWKSZhGvjvU5uV4SvbPZP5NHa1dnJ+S/JAfmfjyN/NB2XQv5
hCiynHWj4DDHYSWDT8L3fZZEv8/Q9tcyyu+DKxmbbqLfd7m75g76R8uLLYMp
eQJnhac4UZ78mbTtoeQeOdRJDqHcczvypB7lnr6c7BX0C3TNB15Q8haWssfY
orxdes+lk9LX4Hfl8Hu0Zz6QJE/U1/Gid/wpPQghU/rrKT0Il1nizVEP3i2U
96T0LAhd2bSH0rOk16xpBvWswcvvDbhPxFGBWNT7EwsVGPuceaR5iNLjcFRr
z3PU4495O+6iHtcMl2vwPP6dNNSFrizwbIDTgpcZ9YQ67xdj/SRwW9uEOvZ3
QI3GAk6sn5R//tgG9cWEzoWXiH9ZiZsd4s9+brra4nU3id0evuyVTApE5C15
FJXcAuJKBlKU/wsVhXdPop++8KxoBfq/tgckV1P0JGMTxTObKHp2jFXZIj3n
rxg7hHVWK2dF22OcoZfPnxFnSG3JuUn573DylSUz5b+DTO2cUvTfe02qmdmo
7zr1PbsB9V2T0Np9jPcYqt+A/AOLwruCkH+GyrUY/JMsFoz8A3YX7SyRf3ZF
BTD4hztzE/IPWM+zk0P+4TvjyeCft6WLL2O9cbuIPrN4fQwxDHTNwPqrScMd
huYrq6FdvWf+q4v+kMzx7hmjjpd11+4VO5tJUKbL1cx37fC8Qvr8u5FGWMCu
m+kqmAzy4oIZ0596IFRgPb+RQjNsvba+5tJkKvDdTc/7HNMDaee9N95b2QwX
qzX6q4bSwTSzK2xasAc+vHxzDQqboYv2v47Q/lc+7X9NZI4z7HYB0wS02+Gd
kA/DbleZkejFfWSUb4VT+5BzjT+v4j527MaM51auS8PnkqMXvRjPZWvsTUE8
beNd0ik8SfzKrUsRzwdRS6spONnj+DwJ8Q8zOCSKcH6zBc3UPiSVxS4L8b99
M10W9zmrZ/2Lei7pncoJRvyPqvnZ4nOP0Xb+etrOX0Db+dFpTIlo5y+KbUI7
nwQNmDLsfEnavm2i7VsP2r7ltNs4hPtb1EmF4Lku/L7B2N9CaKwR8TmwdDPi
Q3T2aMghPnW7Lxcj/j/hPuJPnI6EMfBv4eAzpd4X+K4XOU69L8Kd+egqvi+p
E1zyIpnR8D606gHGQ3guBzPiIcfcpEyo906kz3+6GUi9d0XBAA98784WNy9h
nV4zm7w08kmcqTaDT6ZFq1dGTfcA/66u734rG0Glfvz8wNICmP1RRR3v7Xq6
ih/8/ruOsGzPnuByLoR5NNyfht/b9hde7Dp/4lB1D+mYs80P48MvZY0tMb56
cDHn5dOZXWRV0blj1/ZUkJv2Ekmx25vBlfeEd/lEMelgOhlibxMIMh1G5eyV
A1DDtf9b6q1u0mBs7iN2sZks9ZAqj39bDN3Kxuwzh7vJzjuXL+C9v4VbxJ7i
vb+O/8AFafjJX132WHfh901v3KGyGnzsdFI/FH2HfceOcNoa9ELcCUkhU/Z6
SD9WrHOssgS2Nhwu1NxcDLP0w+ecYHtKuEci5eaODsAa0dP526JbyUbZ65bX
bjSRVa/hRwnl73qYrN6E9zuK5spvNJRpAfnC4vd4v8ObhlfQ8OU0fP6bbZp+
fNR3xdQkJrq3EYxqPi3B/MX4ne11wUso+XdY4pftaCOIZBw9fcarClT03XYz
W7bCxt7d7Ji3Cjwx9wnmrbbTcCka/o6GP38laqAtUkj0DKVYFndnkxXbXBMw
75MkIr3ih2Ib+bZlQ10nRzNpznMYjJim/E5tYydxtSrSxvbgKeahHnjF6WAe
qm3vX3gIDXen4VuPJTwSHy4jMrobjqYnNBIhiZrfY0PdEJD8avZ333Iimncg
J/5aL1md7c/m51QDaapvYoO6i0noi7OqmLc9U6G9E/O20TTcnYY70HB9Dbf1
mO+W0Eu2w3yud/7dBZiv3C0lcPFDdAh0vxT2ur40Feb0GgZujh8EFTrOwMyw
DxMUOGl/9u7cgzOBLwvhjluouaFXBVlh5hcyT7QfePi5QgdnvsKk/HE5zDvz
88grYd45eclf+BQNX0bDN7N8f/GiNZ6UKbMob2hshfplka5WrV2wz3S6Urc1
jbg+0hheUtEKyWePnME4lTwNP0/Dq2i46ZWjs9FvNR4QQ78VZgw5GX6rsbXZ
7CN1mSSi09ZdWLAZUk/sC5a72QN7/+Wnf1CYT58r8NySW3zHqslinjYY8ygn
2p3FUlopvWC2/ruIUkcxqciQbpp2bCdZFh/ZsR7AIjDH53VMBemZrfvdJqCV
sLQUP1lV0QG8pkwFmNfWji8gWLewsnCzBOa1v93Patqa+Im4M28peMYSSybS
3+bdyBqEFbnLftbdqAMnJYlFWMfiIrEvButYRnL+wnVpeBQN/2L2dD/OvXLJ
EjyN9Sc8LYRRf3KDhh+g4UtoOFR0+mBe+LmLTQrWpfxS68jAvPB6P/8fKhGd
wHqg+sOCsRrQSn+/sWhTM/iMn1Q2vNMJW0fea2CdzzIBl7NY5/OBhmvQ8Onl
NNzE6Rv6HZdO/k7FuHdp27NS9DuUYtaGuVj0gVTW8O7PRqXQoHByypOlClhs
roc7suWQoo6c31J8diSxIODthnODsNpGx3PvgVLg78pyMs/5AHceSzBhndiJ
pNpGxWELwp6uGNVmdY/oBy6MvzMzCNySnhurlzWAgaJUc/OccGh+0J8bJ9MH
4oPBHzHP1Wp05iHW3UVbvLPGPFeRh9Kt1pl+Ihf8+saZR99I4NxHc5bcKYFA
um7wNF03mE3XDXIXrX1N2bewSXhSmrJvgUVr+Vy0b0MvnLKl9oHw0yY21D4w
/5K0IO4TW2U3+qOsHOIPTDj2bv4M1ztt5E+sGIBRo5PRKJ9Ly8sXUfIZttru
ckD5LPKCYP0kjP5e+GlYLAT4SxcwO3cNUnJH7lpVG8UHOufuVzaVE/88L8nD
sd2Qz5J1cCboBTmxdDi6MO8pydw26XZwahBOyWlrpw9ZwMd2pov1VvfguOg3
Bn2iNIaXqZ7rIdovfHRWbCwmb4wrixtWNIFVxz1v5WEL2NQ1tLeWoqde2E3G
+mk6L8Mk8Dcvs4fOy+yk6+VW0/VyRnS9nAadbwqh803P6HzTXjr/kk/nX/7Q
+Zcmev9BOu9TR+//tZavILEtDqJWyxUzt8WRK9JGS7GuW8PK1E9+uA2ec12w
xPrYuR0FXczOdZDhWrn2y+Z2qCjmqjt9tx38Pil6zF5RAbtzzRcrxLfCe38t
EIuphfXpEYp8J9rBnMZnkManjMbHZ3KbDNazZZh9kaf4mRy2jrZHfnan4ek0
3JSGT8yX1US5Pddawo+S2ySzXvgYyu31C/7ClWh4Ig2/QdfLOdD1ct50vdzi
9P+j673jev7e//FokRkRiQotK1FZcVVmQzSMChURmlREaRmVmUhCSUuUlBYp
p2W09957Dw1RxvdxPTven9/L7fb793573M7znPM851rnuu5X5nHUL1d3Hvw+
rbCRDFReZ+VLrKe4P8VfUdxIIvTNzKgG0LF7wof5xq8yFw9jvvGc5QMxK0Qy
wVhacVrz8gJIP+Q37bRwL9yneXFPaV6cBc2LG1Pp7GPuO0l3Dg1j7jvR83fa
gPc9KlEhd4VcBplVP7PqkWkqCdnpn3FpUh84CbMlYJ7bnEcRAdhfL7tOLBbl
Cb/IOO5F8XSK7+YxuIm/O5x57ALzu3AjtigMf9eZ4puyxvHjFDc6I5KBefLr
DKVmHv3WBvO0TJowT17sj50s6sGr0snGjB4EX4s1nN8ZPWjxyepW9Kp68sdK
1FEuuJX41FvH692vAw767hNP332q6bvPdOpP3aH+1AfqT516Kmq6LiEOFOfu
UfJij4Fnv75/RjmsSf0mH+o3cc8c95tGuTk/RzH68aQzvzejH8m572ks/bg5
OeMT6lmpfVlbGD0LgnVqu1DPmlH8MMXbasfxCq6Hfoy+gDQB4zpGX8B1cugG
6osh58FnqB/nCVmifoTBnD0s/ajgMo7P+Qc3ki/gP+tcB7n7SzEfHnanqrDy
4c1/bET9BVfuGmxh9BdcG5q5EvWXxn/qAuLlN9G8KfP/vCO8keeiejA2bTyf
P2g8nx8u0Hz+2xJXWHr/9ewGY0bvg33gB5bed3XlxPx8eBijY435+c2KSaz5
cK5Z64DzcdbLVEB9ekKjnKVPb9D8NKXx/DS4RPPTyigOFLenuMn4fEgwnc9F
Op/ycTuEPBi3Q2AOtUPG7ZW3if/WKYj8R++/k+ej671qboz7ScYU3c7ifh4p
DGHNX2zmGZw/EezbhPYATPHlY+1nbL8Zaz589dGseocVZztZ85n36AfbM2Y+
Qz26LLvI99Yd1nyu03VtoPl4V+i6LtG8Oymad8e7fTzvrmdRvx1jjxHeX4qr
0B7TN3gWiOeNi753CNH3DhH63iFL4/whNM5vSOP8FjROvoTGycdonPxsX18h
c54Jh9VWCTzPjRsVgnB8vqAbd5j7BcXny52Z+wVtp0zD8H7xXlZMxnkq+99S
w/O8StdYHucJFD9H8R864/gupXeLVv3KhsuSdc5rtrWBovvy3+eTmuHA5Hge
xo4FufrgDMaOBZXkgp9PGDtWOZlnlJED8Ec4aczwWxvJi23uRjmw2YX/GSMH
YFWGQ38qYw9zWo3yoRzY/tly+kq5DNjZnMHz2DQVlj55mI7y6jZd73q63kK6
Xr6YJl+0o8psPJai/DHvPZGK8keZ4kLnxvFdFO+anVWJ81mU7DQB5RKXxJuv
OJ+epdaqOJ/0s3v+MPMBx1Xtwjgf/v1tb7EeROJ3kyAjn8m+oPVZKJ+dOQIV
V4pkEpOQkbOMfCYbghxHTjHyOY7my22k+XLqNF9u8x83ZcxbKzr3vQr1yI5n
Ww+jHjlL8Snnx/FNFJ9X3CmN9ti7fRx6qKeuB129hPplBsUTKO5F8aU0L06b
5sXx0by4jWc5ZjH+CwzXTS5g/BdwUc3hesH4L5eVdskw+pScMUk7zehT4rns
Oh/qU5W4/ftx/m8iX/Ix8yeN4j2WOH8TimdT3Jfi2wVjPbHOxczd3pDR42S9
E48Y1rlYt1eLM3qcPGXLL2f0OOHkOhmOetwrtyWWMHaAfBN38q+mWAjZnsGy
B9SU618yfiLcP8kTj37irPLHxegn9tD4vAuNz6+l8fktNM78I2Y8zuxL48yC
FU21jD9I5F+c+MX4g+TuhFE19AcvcLZKMX4lMTtyUwr5BGr+fEtDv9Ke4qco
3kDxJ0JKwsif02z8fjvyZmtzFeqjXRRD8cknx/F1FLectXJnIrMu016NB3+a
YonDOalFrHV5zxrCddkLnb/DrAs4LPTDcF3+IWOKqf2nyJMg7tRWxq4rOXeY
ZadVy/JPZew6SNbN28HYddC9rrUL7bpDdL08NK4+k67X73X+FMYfJ/ev3BJk
/HHy89rF4+iPPzAsT+EK9AGbynPZBZkecNZhjgfak54GRnyMvw9qlbUOjL8P
KhP91NDfD6P4cYp/njCOV1c7hA5t6IDIVzUPNfkbofze5VtY3yemX/Y52bED
Qh0n+4ieaQAz3r2DGGco1QnX8nGNJAlez3jYxIJI2sxdDVg35F76XLm0uQ56
vl5KKakvBglTi9do91bYvD/G2M+wTu7oF4xvxB45E4X2M5vHeDxclMbD42k8
XGQLu8NQUTHZeWD77G6ZeBIw/F0I7fC5pz18cZxdmyQd0Q5/a91vjeO0LrFR
mpTcBZ1KWhrInyazpXYl8qe1U7yd4uspHhVEnBZUNsBIzRs2xl8AJcP3m+8z
/kIyxSfXjuNrKX6yZtfpxAONpFV+6fzGiaXkeVCfKtZR7r2zUzTsdyepTVdu
8l1cR14I5cpgXOiqpoZF8pZOCLnwKedtfS1sSDqtrRxRBE+pn2L0j5/yN170
hMaLntB4UWax3Mmc3mJQULaoH56YCivKm5IWtfXA/Km7Lqmd7oGpg1N/5Dhk
wfrDGd+UmHt3OyQsL4GzBZZxfdFdEPURzJbUzpRi5IjJw4nB9k315DhHUFft
l+ek5JL85I9LumBbxcWzZQK1ROmI7w/G/yJeBhU/0f/aXHHsgeusNCIV8+i2
f+dDomp9imt+QB+k3cqbgPGot+5Rgo42/uR7ZEw7xqOmPuQcw/Gvbor3wHou
5/lcxVjPtduwA/074hhr5Yf+3fvr0zJx/B3UHxGj/sgh6o8kPN69LXtpM7l/
u3rXtlufSO6rySpn17XD701hVsg7vVc1VRF5ONOuvdyGPJyaqx+/YPxTUib+
aDfjn5LYVKd29E+DO4Kka0cekhYuweDAXTcJ18pyc6xHc+m93XuV6wvMVEtW
XDnnEjzR/+2HfqunmcxtrFftO6VqGfruOXxViXmN9aqbqo8cVJXJh2UbmtwM
uDzAquClGMa7ZuwZhFZm/Hn1i+qe7boJmYVHWPVu+dwCgYxfDNo1KlukGL/Y
oT6b5RfbCDjErDyVS2qXL/vcvzaLNO2rWhCi3QtpaTddTnG0w7PFP62b8upB
/OKCLs3nFTBK65KcaF3SMVqXtKczaEupSQN4eFQEHfIsB561GeU3atqALfmJ
sOZcxm7/+dorKT2ThBvenRQh2w0W1H+xpf5LMPVfnlP/Ip76F0epf3Esiqdz
kVAYUexpfqca409CLn7wFenvg/nUP1pJ/SNC/SOp5j+gJdZKxN52zC0wrSBq
+orzBHY1wTLqBz2gftAX6gdNWbxl9cMd2fC9YlfPlcgcssypn+Po3l4Iit5+
6KBxFRmZOChcotNKDJ5UlpzWYezHmWkeotYlpOuNklreuVxyWbR3a8zyHuCS
lJTE+tm0hFlYPwujwb5TsH42+1vDFIyzVe1J/oz2SafbZA6Msxnf3ikcnhxK
xA97TS/O+EBav9dnY72q36Kd13ya3sKn9jM6GL+qcjhnj/GrOJpn5UXzrNhG
x/OstNVe3RLRKiHZCVe5nkY2Etk2aXLhdRtIXxmvxzk3Ol6P003rcaKyOn/p
VH2E5QPf/TF+VdS67xHGr/6+E4VSvyaM+jWClxva8Huprm0BzPck5kgA63te
yWfvcT71o4EczHzI2FP+Qzif5RTnHRvHCyj+y3HrdVxvdJnmJGa9IOAdwlrv
rpZNJrheayV3XWa9RPEZO2u975bFcqC9N297z2WsR54gsYRl77XWT2FHe+/L
lsZMjFtK/Yj8hfbe37ydDdSOnUbt2AV2DweZ+RNTfcO7OP81WV+DcP5b6m6k
YNyvt/oTxv3Id65RVtxPh+LCNeN4LsUv1qeZKtg9gnNL/E+9qIyBI/ffHOZq
7IMjl++eYtYF6g1FWiXMugzN37Hqjl1GOh0wDnlxwyqMQxIlr0FWHFKpMorD
WOgj/FaYHZRh3gQrzIaDkI9i54LxehAXnfF6kABaDzJjVX0kc96A0ybGljlv
IDAgtAnP2zYlwYfM/w4rG71nMP87+GtHxuL/zk3jfqdpfM+PxvdmeY5sZe4F
rFYKXsTcC7g6TYwX74Xe07czbzk0gIwMu//1hdXw88PBqBt5rSBex/uzJa+W
rDRUXbHCr5lwTqivS2ZvAjH/a/OZ+0KM9XIErjH35bN/7qAhc19CaBxvC43j
TaHxPeE52fXzhcLgnfGR/p0x/lBpwBaE99ds90JPjblV0BVbM4mRD5ByVHgt
yoeG7GOnGHlC9gc9qmPkCQFPm5coT7ad/m6APBLvzgjceuhaT/L9zpQij0Q6
rUdIpfUI7rTu4HL/7NvIk6y7SlAH+wJ4WmxZiPI5dOjKSnbTenh/5sKW6VHF
oL8wdfr8Mx1QbGhwh5G3JH264GqUt1yhG1jyVmuQW5uRtyToD3CjvFX5pSaO
8vbHGU1JRp5D0Z36riBGnpclfWbJ823+Fu2MPCdK0odhOSPPVSL3PkV5qxZo
h/wD5JDOjmPIP+DA94jFPzAjNgDfL8jjhX7OzPjkneMb1vtF/cDnyYzegenr
tk5k9A5M8C5yQL3z9Lwz73vOFtI4NvEJo09J4stNhauYfXcwO6mV3VtMMi3S
S4cmppLTj/Z9R73MvdZ/0fMZ1bB8ZKgk+EYBvPjJ0/vmWBdwnljizHeonsg2
HNZcqltMJCy/mhXf7IC9QVqPGT0L5y55r3nG6Fmu6/NZejYjUo2D0bPwKGTW
ftSzA7pbWHpWal5DENZNV0luWlLH6PEiP2GWHk/8Iot6HPb3PZVpZPS4vt97
lh5/NesW8jJBnda+MuRlcgZuFi9Tw/2SMTfmd48933SG0e+QM22ExfNgsEno
Pv6uuI1cJ7438ZmEsd6bFunlXWbsDaJ+yX9CrkMWkf7ul4f2xosTK81XPGsj
PjMOPVDcVkIkJBZ2IP/SkMob5KMgfn+qNJCP4qL2JxYfxaOnMhfFY8rh+oiI
TqHXU1DkbJRodeoBockd/WIMnvuoNJrBCSx13Y549oOa5cx9IYWCd7KZ+0LW
Hc65jfdF8oWVBSMfyMCVjhWhjHwoDek1QPlgv7+El7nvRLZiCHl7YJ7bgni8
7+IBI6fZErqgYuzYRu7nNRD9Wdh0f+5nuGs08LP2SBdMO6Xre/FwLWx62en/
PCATCtaqCFn7MritpzQ7by3cWKg191rOZ2AXCwhOXtdDlomJVY2ol5KCfS/t
a+dngZbdH9sHmuVkTHbz5H6VT+TD9cLZhbw9MInGnyVo/HkljT+zpd7MxfqC
F5VGGpjv0dByTR3zPebE7MW+4cT9tKIe9g0ffZtXjvUL/BS/TfECipetcfF8
IFBPGuvNpQx8n5M+odbe70+6/lcHMY3WQbymdRBvR41Ccf6pU9QKmPlDKP9F
M5y/XszWMqy/yLDuVMC8DqUhX3PM65jy+u710BnVZGKaZ0rIjQLy0IvfBM/z
l+TBwWfl7cQgzlkceQls7bK5kJfgDCSIDSxtI8KJq89FH20kkq5t8+Wulv+v
nj2M1rO/o/Xs1T+ekomm9SSjaULMtKhikmZafgblg6bft1+5x9vJWzvHh3vr
Gfuh5PaWJM4CyPy1wfiaSBcIG60SE1xXA3NSVBX5thVA0bb5CU6FbVAtntR8
Ua0OiMrEGMzXcnmfp6yi1gAZrRaH520KA4/LwU+Q94BvlpcLr1Er7D3hLDHF
PxpiDUpUkxNaQfHPF+RJgKx5xq7IkzCbbR+LJyHHxssIv88weqLIfE8u1U85
hd+Xvuw9c1S9GdboBNzmHYwkJ5y7rk8NagdC676v0brvWFr3Xa9yht2bsX+e
3M7/xtg/sPdQ8xy0fxznvapi5D9MKSqdy8h/2LV0K0cKI//VX8TGOm2rImf7
lWKQB6M+Yu4e5MFYy2YrorajnHAsmrF1sn0XWfC8KjOCqxQ+03ivCo3rZtC4
7jta72xI651/03rn82Xy2sDcI533M1Yy94hk8Eoa4j2a6BNsjXkmsjnHvIuL
y2FBQqUL5pkcfip9nfkenGM/oF4mWnsbWHo5P2DPOcwvrZ6/3QK/3/XhwA38
vr2vWpiZJ9ibmLHmebDqdQbO8wU/u7Nq1wvgawjeKOsQAoYxdcmYt1/hc3Lg
AaPv5hvoSzP6DmS1n7Hj/ky567mTsQ+hKvjmLMY+hCdGQn1oHx6h8Yo0Gq+I
p/EKuXtqb6RO5cLVkokXB9ZmQWOmW1MwY28vz5p3gZE/RN+TlBQw8ofXR0ES
5cwsLrGvjPwhkv5FAih/4rQCWfLHl/rLOtRf5qF+9K2w9J8+Nh3g+mDdNIWC
BvB63OyVfjsX2vjij2CdlLD18UfIU9ExcPIG1klJiKcEMvcOljWGtaDcqKo1
u4j3LkNq0w/mnoK1y/PDeE/PtOay7mkmxc9S3JTix6RECjBPzFE9UAvrkuxG
Uzei3Gj/x/9dQ/1cjtKAC4wfSrS9p1QyfigRVhPmQT/0ZeXcezq7/vLyechv
sc976jSYCWH/wR/IS1P8oMv7GqzDWqe4+PuLwAxSWvBGDfPKogY3bUPejGfv
HsbJ3swkp5/biWPd2bIeczfGfwf2L1qDnYz/fmNdoAj670sW1Fw+ZtcDA9P1
+VYEFpNFGrV6+/Oy4LhLuvVJpS4o98mwaCmsJeaCHwTydTKBPX/6jPKJ/8cf
uGSD+8zV9/KAg+LjceLH8oIU70htVUvn6yDqh2yfVpo2QvTxSxbIKyXTzh+G
70e+HJOWr8wvg4w/EVoYX7rzcE/jqpQA8OZeLMwREEIeTdVdd2mgD7hD7g1g
/51D81R4sd+r3tX0Yey/sz5sapyhUzM5fPD3ilbHFvhz/qipXUYZJDR35uL7
xbPCS24Yt3RNYHfHuOXaUBcWr93bk1ysfOPbfvtZ+cZ7Y35biKz+JC++Pr5a
3L8Trte9ThJIbgANyqs2dZxXDWwor9rMtllpyOf2epzPjQRSPjeNO7GzkP8t
f5z/jbyg/G/qgYtSMI5qPLXQG99TzMrkXXE+nd8k/TEfe5FfjgTmoT0X7WDl
ob1Obb66zyEYFnxZbOX1PoTc/xnF4sFTeTof64/gXLG6IdYfaTQ+NMH6o3Ni
V59gHuwDu+I0rG9ScA9dj3mw7ctPy2E8cCw9Igff9eIm7XmK8cAJf0REZgt1
wdfHOXdtjpcT7gbRfcsDyuBTeXA2xv0Ob3CsW5FfRrb3W23F/+Wq+g7ZWr52
ore2dybWzZ0Xr4rF/My/9aev/6k/PTLNNhbrNzUDpK8hLwrPFztJrN/03rb3
7FiADwwltR6pzPQgDuEbWO+tn80SWLxbQ9bbnR7ofCQHNhe1I+8WPW//4+8S
/+95o7iXvADFy8+5xWGeJNe0ThuP8CKyxrphAOsZQxLDDQUrGTl044W/+Yt8
sur3oQiM83hTXILimyjOFWd4Fe+FhYfpNOZewIdfSfvxXnz8h3/bkvJv717p
zeLJfHIk9DLOPy7zJWv+BzZ9LpueVwz+O5N6p9lmkiXvV3Sddu0BaXr+ven5
z6PnP3G92VLmfyGdHwevMv8LPBtS0sT/ZSPl9+ii/B77Kb8H/16VOaNrWuCs
o7NesUIrmcQxSWOsoABWP32ou2ugHkpDdRceUi0AHTH2cuTBU5g6bxjfKyOe
p4VgfsKrqg0y+F6ZQe/LC3pfbOh9+dTzqRp5KRUsRUwwb/xZ029rzBv/kfDt
M76ftrCVTcL4vMGScy0Yn/+55tD1lSKZkH/GYLhpeQFRy7bixPdTbqlPPphv
Ocf7vizWHWwdPHQaz/nEUr9euYQ4+NOgs9WLPYa4Ox7OwHfDl3Q+9+l8/Oh8
eH0DxJF/8vNdFeSfBIuW+bMwf9I6StUT3zHPBn29hO8s0btGI/GdZQe9d4b0
3p2j907HXchsXUIcyT7Bn32fPQZEeYRZv/tNPyx9hVwGnHGu5ntsmkpUy0c+
4ztIc/GtHszrkH1WkYDvvMdlOdbhvmVq3tZDvsEd7sUzcZ+9eO0rcJ9vpvYo
IT/A5OFu5AcA6/xJYcgPoE/x3KFx/CrFN1mnYn8xiJD7MQ37i2k16rH6i8lT
PJzi+yguwOscivx43eEtYZh/K/7p0U7Mv3X88FYI49irhRpWYX7Czrq3BRjH
jkh9EIX5wNIXZT5jXfDHpfrHMB/4rGIgnnNSK90wBc/55YIx1jn/i9dQ/ArF
F97iZeF8jgJ4L0jytgmHERdM4eVZG9oFB0PniB6YVAOhskmPkN/1r50ZTu3M
aGpncv9zv1Lo/Xr89JXG8ivd5MY2CHHjKSO8g/mib8ILQI3yR3lS/igvyh/V
1CrWJqnWSSDTr1xItJRU+0Zppn2vBg6XA1ktPd0Qb3tXZiFbIZz9LbYj1KcY
uMb5r+Cv3JhC+a/+6tnxd01P+RVUzzYsV3TGvJQjX1O0Mb9l+q74SZiXYmZ0
7BrGe2f3aeblMP7XzQXPCtD/Omj7azbjn0K0/ogo+qcbowpK0T8tDjzviH6H
j/7105jXXTNnvR36HdYaR5Nwnr+fndZj5knKrjw5i/P0/2l9BPdh6/BCZ2Yf
IG99MjvuQ8Ks2Ds8gT6k94ll7cdMD+iTamK9L2h/K5m+jNmHoPupPsw+gJNv
6EAqsw+bpd6eXlDZQPY8urTA8kU+WG/3XYTx890UP0rxExSfu3e6Efplv85r
72X8MtKa9cQR/bL2u85sdYxfZmee4sn4ZeRA79sH6JdtSToaYlnWSU6uzV3Y
/aGW2Ludc8b8/Haa37iL5jfOpvmNIQkytjvmdoGCCJ+gf28NJJT/LNmlnA+7
/qmzvkbzXnr/w4v4UP4U5Tfj+I8d4iU/l8p/4f5q7CNDEoOuKmEfmen9P1l9
ZP7isRTnofiffBF35JUS/ymnin1qTDOfsfrU/Kb4SopbUVzuqcgQOdlBfv26
eQp5DwSe6TUj78GyFTaTMC9oJceqE/h+VO862oH3zniVCRfGz4f3fjuPcYyF
VR8vYhzjxPXAKOwv+Thefgv2mUpit+LHPlPvTlbclmHkx3q/+QlsGXVwdE21
nmFvMXS8CcrHPokRu+6lYR8xZ5+bKshH0UPxlxS3pvgxyn9VRPmvzCn/lbB/
I/fqU7lE+MH0k/2MHd4dWj+GdvivQ8Fj6D/uST2xiPEfQX3Hx7FljP9ocuWr
PeYL5V947oLvjFUrTCbhO6PapEULMF+oki2oHd8ZbxwXYNkVMh+n3ME65e2/
+9eWTm4G8eWWSVi/o0DzP1fT/M8gmv/551XoH/TLjjg6rmf8MiJyR8cT/bJR
ihtQfC3FbQvjLtRvZOynwT9bNwq1kz+iT6+lC5TDeYqfpXgvxX/pTkB5C7qv
GixR3q6ZsOklyttCiotQfCvFhZIMgy1Hv4DkcptHlrM+QfXpJRy6Lb2QdXu5
BH6/VG+3LfK9qHwTi8LviyguT/EdFJ+yY9IajJ+rvnkugf7RMM/mavSP2inf
VB3lmzpO+aasJ5TmYJ2so3PPUuwP2FN//BHW2X06nz6mfKMMjv75nVLkXw8c
t28fWPKqHaQcnygsOFACgonreecz9seseuXAC5O7YXLZEUvklXKf+MQPeXjE
bl86hDw8Z+0qhnEc6Wnaycw4RPspvy6OI3t5nN/pesU4v1MD5XdyjH7uj3H1
mcNx7Bhf1XFfkoTx1c81adk4/44dcmuY+YPv6JnnOP9oirdTPJ7iS13lwr6+
CAYVqfrbkyZ1E5Wk1ALV5Frg5F5Tj/27t+/pn770QzcZNP3O6t99kOJAcU6z
cbx3Gk/g/4dvmVhSvmXtOWWmW0yfkhcDtveQV3N5/cgv5NU0fvryc2FeHCmb
Jbzn7LpuCF5ew98cVAMRtK42i9bVbqR1tUmHxCOYeZIbUttwnnBcabAI56lO
/QKxcb+A3KB+wbg8Sk4UpfhNiq+jeSMpNG9EneaNnD48Pr7b+PjEnI4vc6+6
Eeezr7IX50O8wrnicD5uFN9L8VCKm6RfM8b12t5yw/USgego1nqvJExOw/UO
7NiM6yVC30NY6zX+OZzK/C/A5X1dFs9bnmFNEP4vFhTnoPgXij901OJGnqXF
2RvVkfds+Tk3b+RZOuUY6Ip5LKqFN65hntjKd6IRaF8pHxznp8qdMc5PdYvy
U+2L9R5lzhthI97v8dzydYgdwvM2RV4BzyGR1hJIwnN46uFJFn5g+uQNzHkm
7ve2TGXOM6nnfhuM53nipCdnmftIkuuWmjL3kch7fJyE91H9vs4XnP/0p3tl
8LyxXYgLxPnLU3wGxQUp3ukwORr5S5VrNaJXJnZCgGDbfozbsBftXYLxkMd3
A5Um23eB3uEuVtzmvu/Cr1s0quGMo9faIxM6IW33+xTkr54Y+/LkCpFM8lqq
8xbmB+66b/IH808+plyKwfcCy/yjGzFe9DbSuwffCxL/4XHaRvNSjp0+vwbr
ZFWKpzch74RufxWLtyHvDXn04UczJP62Pp69ool4b50P5adr4Gd7jfGLLS0Q
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
mkKMS+hS/7GH+pUD1H88LP5yB/LZvimolMF68Ei5kllYD37E9vqx+amtxC7S
dn5VUB3MPftZ++VYHVjSvrdatO/tOdr39s/WI+p+am0wJfXoz1VRtUSZ7+au
WwfrwFOgL7GsuQ4kzVoPltQXE/jlpIH56tN7ojt91dpIyKaiPqmoWlDe7OKC
31e+FNL1cY0En8nTnn0VDSLXbLQ7Me/9rLUYV2lzHRn7XtlTWl8MeQuPuuI4
A4dXC2byfiZLws9xrEtIBfaZI3nYz+jizX5RZv5QeiE+lJk/seA7dg7nr9DY
PxXzopvVLn/FuoMPBl+3Yl70QYrz7B7HAyi+gb7rhdJ3vRT6rncoeu35nw2t
EF39W/iHdi2ZdmFNBvZ1WhVXDVhfKSOrL4z1IDWLZ4tgPYgWfbc6Sd+tjOm7
1fRtnXeQz2qRir/nH+F0ksuvN4x8VqGjdy2QF8ji3pUx5POconnvJosXiPIb
X6T8xkWU3zievvOq03dePfrOy039YkfqFx+hfvGEM77HmfsCuzZM5uA8UEvm
JkjF4n25eHclf/35LlI79WfqvuRMcLH/0cj9swZuvLcr31eWQcryZp2R6Awh
Rl67KvvV/9d/hMbt78nz0PeXgdvuLLt6pahKHsqHrQK3xVE+fKX4aoqrUtw+
6ADyC5GbO+vUkF+IP2ayJ/ILBf/OtdRmfrdcNMZYsjMEnPtFuvF3rXamrM3u
LQYBrROnv01MJQPkVS/mB/54XfTLx6aDOH8pmaFQ0EBizfUsMG9kG//IS4zP
JycSDYwDpB1sFsc4gIX6V/THycwJKpvQH3/p0szyx00pPovibyluTnFeikdS
3CLFxB55U4OF2oY3Ie/Kc0sW70o+7XOxnfa5iKF9LnL/6X/xgeIP7530wjz8
ffcWLMI8z57DBksxz7N9RzzqI6Lqs0oD9ekYW7Yv6qOZytsvTG5sJ44Tescs
a6tIuIrBgxPcNVBm9auY0Xdw6ffl3ajvNslMZem7x9dGzBl9B5G3BcxR3+Xv
mcjSd+cT6zBuQ9La2N9h3CYv/fJ6jNuYUJxQfIziZ//5vpHiRU79aciLa1DZ
/w15rqySw1Yiz1XsczvW/C2623D+EFuk5YfzL/766oJzVxNZV2Gr4/W+HtbO
PXFhbUAjmFO8rXwcb6G43vmyHdjnse+uWRHmzeod7Y3BvNmLfVvxXZVkfc+a
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
556Cc+6fFMszrqfV0UWeB18/kWii3tXahyQXNJPtWD8twPppNtZPx/OHXZg/
jMD8ofuBnPv/g+eFjPO8eDYfNGO+l7L9cNNjvpeu5CzKgO/tlVvD0nurj7TY
Qp06YcJJVp2abdeUUOZ9SF1e8gvmfUjggkX28D7SbSLg9xKp3X6s+GKhut9U
8HsVLSb6Qx4jSUZcH+KIDTsX7Yc4IpNrUj702Z4iKrP8WmtJTZ2oJuzDuD8W
iv7YS/THdBEfqRTxkc4hPtLwpaA9zP0ks1PupsI957BJkoX7eRv9ohH0iyLQ
L6rF+e4fON9tgPPdm2zyjeA5Z8VXPIZ7viqPi3XPd637aMzcK/LiO41g7hXh
mkAuwb3qwf1Zi/uThPuThHPi+3FOfDHOic+Qi9lhlFpI8ydHV9i3FJAThkK/
YO5mlm+4cX56DyGmIR6A25nQG8vC7ZxYOca7Kou8qzzIuzo8QSkZ/CiXgsSt
UEf7JFwcBn7U78kHfwPvSWikmyrwl5nVbt4BeubcA2XgeaHqM+szgOfl8wIV
Fs+L6JdI4G2hG95VyABvy4sdB1i8LWuQnzQZ+UnFkZ90t8WphxAPfvBpgXOk
933qd8E5DoYMacL935lwLx3884Xqjiz/XKePXR7ihVjjTxAvUEG7IFa8MI6z
lI04S3aIs5T4ftQQ9iG4XOQR4JoOHZNg4Zo2hV2IB74V2au73J/wFVOXr2El
wLdyaD6XDX90DznR0jF5XlgJnRkccyVcq4Cc6ul4X3Cui97WzzaDubMvd+Q1
Ye5s6nFnV9D/RZY7hIFHZqfq/WbQ/8I7E99CXbLm1s2Z4JdymOi6w36WIV+n
4Owxvs5nyNc5os7uDbgorzbE7oa5M+Pzhp4wdzax4Mqr9thO2uVt17/wbik9
U6Q9+fTzahKi328m491F3qq9nf5aN4225P5xm5RdR/ZIm7qObmolWyt/LxdM
aKJLxbNcJqRXkOLXLnYDKeUkZ82sTTDHpHRILgP61cPGnkML8Dmt+JyBtxdd
vuh3UaEjYgcNPZKoyxtO4zy9evLUdKLOHYVuYtQ9SIc0y4jCs36TFtUy8veP
03LAB9A5Grhpm30x2WIprAn2UQN5UnYjT8pE5EmZizye25DHswN5PDsQd90U
cdcjEHf9uLnJM5gDNRDLuAk4J5e+bReAOVAz5NnUQJ7NK8iz+dL5LuscdyRJ
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
5Yl/HS1zums+waudXEQegdXIIzCEPAKlOPcUjHNPt3DuKf/Pg9VF/W/o9qPL
dgtMe0NW8h1JecnTR0aHx/DzlyB+fgji5wcMam+rP1ZDwu/qmvzpbCGXLz10
8l7YSFRw7sAX5w76ce7gENaXv2J9eRvWl53Qv92E/u029G/XtEsqM8+nG1r1
TzLPp37y2h7w/IX/hx/S2rjkZ2H/GxJ3p8+ZeX+auuwu6/1fIv6JCuKfvEb8
k5hCS9g3svL5IjVm30jeWRfWvpmlGAox+0x+Hmxeyewznbr2Amufr3ybTZlz
IWwzducx50LDZvLOhHPRUc1btXE0XIFDyGhbSX0btRFU/xS2q+U/PRCPeiAe
9YB0wmmvYiaul+/7Eq1/+DN5vTz04QbG/1h9af1ai4kdZObk79XL6We6PUmF
87dzLWlCPCtFxLMKRzyrhk1juFKjumO4UpcRV2phvZudx8Ruan1Q5qPgxAKi
vvPK4fDKL8ShW/nuWrEW4rmp4V27ZCsR6QmUnClfTIxaCrut3WvpY44N3PVG
r4l19VZ6KKKLpMqaCs5b1kW733x3tTpeScJ+qGivCqkgCchfaYn8lcbIX6mH
9TJjrJf5Yr1Mz3FLfYhNHd3YJLy3cqiR0O9B3DCfnZ6WlSmR20oKWk5s7woo
IMbaLkVPjrWQw8gfwfXjPd9LjhcK4/wRpZIGGcx6+qxRbiuzngacUSyF9ZsX
yUiE2tQRjrMWa5jn00VNpgvh+TbCrg+Z76V+9qU58L3bPSJk4XuvjF5pY76X
bP2jKgnf275Fk/W97wUDVjDfS2TO5VyD7zWMnqIF33sB81FsM8byUTaYjxrn
ZduAvGw5yMu26h98iT7Elxi6ZmJsEdFFa+05dlw1r6aGt9znLuH/+N/8Qso/
8wvvz7KftzfvJQefr7vGwX5fIafvyYb8FyWkGO2FFdoLZbQX43qS5Y7phCqM
5xn8ViXZ5XJ2kvflYimdQxlUddeMRRprGkkd8g2lI9/QF+QbKhnjoyftgXkd
/rcfK2giH303l0/b/msdpE/PyGyp4muyNZ7H+4J/Iyk46zrtad5nys2tL3Vp
aRd1e9k1/QZ/OdFCnp35yLPz/+o606CoriyOE2gWZVNElqjgBs0SkkEWQVov
uAImEaVcIJGgA6YICBjASETBkJhBBSVIZGkEAVkEFxS0LIUrJGYQWQNi47Aj
YDuAYJkogjLv8v49ZXWV37r603vn3nveOef+z+8sxpyd9vfEpbv4dSdqWPc+
rLuJSV3ww7giUeqPXyvN4+K56vlJR/5zQUrc+Xku5K1ObtjGJ2WivzHPxe7l
T9cufHNR9JHo+d2mba0kyWv14arJYZKD/vrX6Xx//Qb018u4jm/kuI7KmPs8
2cXPfbbA3OdL0U+Fs18MUG0DyawP/O+TeV67AgQO/cQdel0t6HVVoNftitJn
9iFOzoU2nH3IyGGJJrMP7EzHYOctsLNQ5NrH2ZkKeg5GcHam6hePJTE7Nynz
/MPPwT9UzeX5h8GoLylNx99ZIges+8qHrge5dadDP2uUsHW/s/47Q7buBpgH
ofAXPw/CAvMgJpVNx0xLJXQqs/nDP5Mz6W3PnHUDMcPkbQAfJ9sjTu5FnPw4
/IEft59Ju9ur9dx+JhFzD9ux/ayDe5Ay3IN8inuQyTVWppzdyBXVyjmc3eiG
TpVAZjc9xM8miJ9vIX62iRay/Ub3au0LZvtt2c7S6f02KOXnv1/C/Hc9zH+3
Au/rGHhfUvC+XoD/s7yb5//sAf9n/HLzm9QIKT1S/UDbuamHXg/+IuT3hHpS
I+4zZ9/xhLhj3tx3nCw8cmoinvuOW86QjnL2If1prdeYfVYu/XnaPurglheC
W+4Hbrkr5g0J5vD78yX2p/97uNmbwYs+D150H3jR+g/5vNJkC59XJiOv1Hc2
u8z8tr6trjHnx6jG3NoG5sfu497TEPeeibj39MPcrlbM7RrC3C7b8l3nQ19X
k3WWEWmhOn+QR98sEXj3jxB38GBbwIP1BA82Afljilz+KMsHo2YMc7+ui2T5
oIO1aPo8LuLPI03GeRThXCfz55rW4Fyn3LtYwvxzgVObC3uv4/ei69h7zZxT
221oXERc9viMbijNIh2+CrmLRp+RxjUGyczP+x5dVsP5eeqpZixifn7MkOcU
DYBTVAJO0dRD/n7QGveDNrgfNPinvxG37rR4rG8Ti99CoresYPEbBUfRDRzF
z8BRNALfXgi+vSP49v7g/v0D3D9fcP9ejfIcvy+DeY6fPTh+gVdnPjUyLqLG
I49vbizNornfV2Sw90pDHUDPmq8DtKIOUIC5GGsxF4NiLoYEHLOzLTzHTAiO
mcpBPt90Rb7phnxzP3hZfeBlxYCXlZrL84KyD/G8IAF4Qb7IQ3vy+Tz0HvLQ
vEzb74XcuTj3cpEXdy4IUe41Y+diJzg8utU8hycKHJ6CTRWPbm3vJSlfPQ7q
UWwlA75+vcyewtQsaytpI/mtPTmwNewmNRdujK28OkIGwIFpAAdmGzgwX9+o
HyviznXhOafd3Lmmus87p8/17FtBM5i/tbl6jflb2nxdX4P5W3NwU33BTXUB
N1X3vkEk9/zU9hf6oIl7fr1UZ3P2/HnQY++CHrsDeuz4ot8nOb9Bjv66XJPz
GyQj/XEy8xuN4FqMn4/999KY06Ib4FqU4T50Qou/D63HfaiMO7G+xe5MmEKq
qA3cCRnPoRA8h1HwHATgJJiCk3AcebcG2T6PxZ/qfPxJIhB/Bvj8faI5JkN0
eXtJvpbjEM2zEiirWHSSsuEna5zH00WNHoNdqU7DtLh2dKhU7RH56j1z0xSn
Fi1icdFoel0iFxdRtR6TrSwu+nOV1+H8ghFC09x73ZTv0sWe9RP56vWy96Lu
cu/lCP3bMPRvXtC/icGdqAZ3IgfcCfFs+jmL/22/TdjD8ouuXxSPsvj/ffWB
RsxrTsC85uOY11xX63KAvZdFhvYp7r3oWW+Dv9h77euIuxH/TEo+K8wqT1dt
oBsyzn7nOKvn/3NadeTmtAahv1gT/cUV6C/2wlwPIeZ6hGOuRyD4JKvBJ4kB
n2QQ3CdXcJ8MwH2aL64+xNmT+vovkHL2JFeyXBQKOHuOdK4Xc89JB3VsHMWq
DaRHQSmJPafxmuZwFufvzDdv5+J8mvjl3DAW58v6MdeiH9MB/Zjy89CD0K8n
0708ge6lBLqX+Nz0GsuZaaJX5auFnw4M03DJ4BPF+lZitaTtxjv/kzD873zM
2+GdfUUKsa9CX8fHvrMPSQ724R3UkbCfqWw/N47ttWN5ZUrKYCjL+xxHKmPZ
uneoir/lvlM0s2tpEPedouTUXTX2nXJCX9ID9CU5oy/JX65vaDf6hmT9NePo
r/kB/TWaJqYsbyIvPXa2sbzJK3q7D7PnBfTXtKC/ph39NVtRb0xDvVGAeqOs
L8YYfTFe6IvxCPlpfdX8p+Si4SvRZcsGMnn+k9OsngC/QSfk/IbmkuXsfNEq
aXk/O19J9onT52tbG8/dJaU8d3cjuLuaZzb1flyZTTxUFi8UZOdRsYb38kPP
nxE9/zxlFp9XRNxj8TmpbLdUZ/5QH3OUEjFHKQ9zlMLl6kgbUEcKBqdiATgV
InAqRNBdL4Du2gO6632Vgmn/kBWZxp6fnD7Z/ZY9/xLoge9AD+wBPXA7dLw7
oOMNg45364EhLbPUAbo30ftiwKpucnNS7cecX7tIVMjWW+eMBon2J+veLDDr
pkOXhsuOrugkr62jQrn/KZ1n5Wlk1k1UI5372P9C6DP3Q5/pA31m7A6ei6Kt
ODDNRfkIXJTfULcvRt3+X6jb74XOcDZ0htegM9yBucMvMHe4DHOHm6H384Pe
bz/0fvHQ701JeP3eFej3tKDfs4N+bwr6vSToASygB5BAD2BQLF7M8vSEKmkc
889TxTHbmH9Wgd6sB3ozMfRma+TmG05hvuFN6K+2Qn81C/or2X2TEu6bKO6b
ZgS/lQQUSmmpU/6H52wqSF6NflxReS9ph07prpxOKdFmrQ/Lf/W1Tuxm+cJq
Sa0VyxeG1u53NObiuvlP/5vOxXV0iVt2Jot/dqMe24N6rD3qsXoe7nNfL+sn
YdFHvmhxHqCqArXNE01NJAPcBkdwG3zBbaiC/sQI+pNs6E/CpW0/sLzYuDEw
h8uPSPDCSS2WH1Xg3mol7q1CcW+1CvXJTNQnT6I+ufmK16GTB0aog7rSH7e5
792LdXUS9RPN5IxuiCCrfpDorrjdEWnUQxsiM+3HM9vI/wAHo5gO
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{372.73279629847104`, 256.90456564923386`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{Full, Full, All},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{-2.20384252444617, -2.1068171251097505`, 1.4677873581643197`},
  ViewVertical->{0.31354670291559084`, 0.29974263401159973`, 
   0.9010232063862453}]], "Output",
 CellChangeTimes->{{3.841778345800901*^9, 3.841778353711417*^9}},
 CellLabel->"Out[31]=",ExpressionUUID->"552f958c-8b45-4436-9a08-fe77ed86e5dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = " ploy sin (xy)", Typeset`newq$$ = 
   " ploy sin (xy)", Typeset`chosen$$ = 
   "Plot3D[Sin[x*y], {x, -Sqrt[3*Pi], Sqrt[3*Pi]}, {y, -Sqrt[3*Pi], \
Sqrt[3*Pi]}]", Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {2., 9.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {2., 9.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 " ploy sin (xy)", 
                  Defer[
                   Plot3D[
                    Sin[Global`x Global`y], {Global`x, -Sqrt[3 Pi], 
                    Sqrt[3 Pi]}, {Global`y, -Sqrt[3 Pi], 
                    Sqrt[3 Pi]}]], "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Plot3D", "[", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "*", "y"}], "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], ",", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], ",", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], "}"}]}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Plot3D", "[", 
                  RowBox[{
                   RowBox[{"Sin", "[", 
                    RowBox[{"x", "*", "y"}], "]"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], ",", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], ",", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], "}"}]}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Plot3D", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "*", "y"}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], ",", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], ",", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], "}"}]}], "]"}]], 
                   "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    " ploy sin (xy)", 
                    Defer[
                    Plot3D[
                    Sin[Global`x Global`y], {Global`x, -Sqrt[3 Pi], 
                    Sqrt[3 Pi]}, {Global`y, -Sqrt[3 Pi], 
                    Sqrt[3 Pi]}]], "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Plot3D", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "*", "y"}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], ",", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], ",", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], "}"}]}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Plot3D", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "*", "y"}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], ",", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], ",", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], "}"}]}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Plot3D", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", 
                    RowBox[{"x", "*", "y"}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"x", ",", " ", 
                    RowBox[{"-", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], ",", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"y", ",", " ", 
                    RowBox[{"-", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], ",", " ", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{"3", "*", "Pi"}], "]"}]}], "}"}]}], "]"}]], 
                    "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[33]:=",ExpressionUUID->"71c2e174-c8d1-46ea-a101-c656351150a4"],

Cell[BoxData[
 Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
/xOXiGZPgr/VD1dk2MkWr8CO1flaXkP6EjrZfRSc+2j9etKzVm9Jf6vni6l7
CSb/9Z6h1QmvZZ/Q5w3dTD8S73W9tlY9CfQgv2Nx9bX0lPXZia+s3tL6NZRv
VRzJ7pf66I0f5EebPyv7gX3n/pTFz8tLDQd3fmLPFxaIzzl33l23dclbKS9j
+TjJF+mfshXnnXTJQMkX1p95367n33jOLNOz5aUeg4dtNHLlPPEJ8zdc2fOt
Hf8w0/omKkpXv/LlRf0HzrP+CNU92vtvZeCj/aDf8vntOyaKL0kPQs9FAxe8
+NO50+UXA19+77ST/zunuA/8HXmbxmfK9V1v+Jh5fv3uNstP7F28qwC8/Y8/
N//uBcUJBUfepvEoza86e5tfdpXN7/l6+ZucH3Zcfo7aD/D8HKPpTfwa0QX/
m3daVLeX36fffN/+rp+OnGN5h5X+nnBm56t7bXgq/mN4ejyfejzR3/Jiiush
/3j3I40P18Zb204+cuee0oOSY7wrYnmQmMbr6Ndo0PemU/+xPnKOKf510c+R
+807UZaH0veGoCPvNAx+ftCwQ/893ez5yXH7tl++MPOnGssDVutdX8tDRfwO
yzfpuzzwicnbaPiEHB/zEyeHHB/jk2rNY+8J0H/hdNZ3No3OgftodA7cR/DH
PofOqT/S5N9bkT2J/Ld3FQzPGs2TvjMjvgvwW/qeyXK9k2n5aL1LZnFR4nLa
L3IXuZf2H5VlyD2rBza7S+9PZ5wj/MT8nCP8ATx9Z1XvODKP7BabR3aUzaN6
aeZB/nBesrdz+QO9gPv7Y/Incv1i+i5DTpq+y5CTJscy01OiP3rK6vxlD3Nf
DB/dU+Yzfap50KcWX8VulN6x/FQ0u1F05j4Ax66wPM5a/GZxYMlt4NgtNh47
R3hb3ZHnB6lT8v4XxfPhE/yh/Ls8yq/Y9wLk71s/tb0npu/W2btP+h6B94Up
LwAfMg/fx7R8N3E/y0/pHXX7LoDexbL6hMqIP5K+U6fvMdl3W/TuqOSt9eVJ
X7I++IAHcPCx+CTxEMXtoR/4AIdO0Mf66+lvEt3tvUedn/nRblcrTwFfmr0t
POw7FMH8dOqpxG/gBf4W39D5ohewE4yeghs9g8V77b1EfU/B6kLVV252rN4Z
tndc9c6wx4d1juyTfRs/a9/s177fofOy+Dz1D9qPvf8pfKx/0N+dyCyvVzI5
IzsbuMml4vutNW22uWHvBYrL8XfgJrflp5jclp9ichs/SHYF43vucPjmq/Yv
3gEw/yum8XP5X6Iz4x98dcw1He6uVf6AdVovWrxx48UDdd/ZV/9Pfrhh0qpp
uo/Ad+nSscubp9dE0wsle7802LqKD9i+4nalPjesv11F9t7E6ecu69autO3L
1dttNWWh5SnaiA7QDfjoW468953Tiz4u/m52jvxH7Bz52/l45mG/jDe7osiX
5XZFms9tU7qmzXND294xX3LS8lzB7J+S2VHan9lRgmNHmf2j70CZ/QOewewf
vWuX5qmFfzC7Rf47ehk49kYa39Z5if/gR/hQ/l4up/Gv+f/QFXpanwL9PpLb
Nr/ZV82R+GQaH2iK8H9635dH+D+NQzZH+J/zZR6z53WfsOeRq8gt8gXmF8T0
+wWFP5rPY+8cLo/+nQXzE+XXmx8q+WZ+qOUR5Id634ron9aP1Sh+mOYrayJ5
HMvLkO+zPhHZLe5Xyj/Fzja/0vI78iutD0h+pecfQxrnF92C+e8l8yutn6JG
eQ3sKuAWZ5D/Z3EG+X/4ffY+TDA9LnsTvrK4gb6zaXlzvR/+Qs++B59a2abU
eNJfxm7YuDK8OK1L+6tbr9WfSH+Q7AbkB+fLfhVfte+T8ne7d8rv2L1TPxH3
Lo0TNgfuNfwA3OJR6jOyeJT8aH+nnfHIH4tDZhankl1qcSrBiVOZPAzIK6uL
IN/kcbDM4nWZze/ykPm1L/aNvrM4amZyXnCT86ojQs6bfZJZfLioH8vpYPZJ
Bh0svppZ/FN8YfFPwYmbWRw1szhtsHlcD2apHm8S3OwlzWP2kuDwLXQEbvFn
wbFPGM+6nJfZV9DN9S/nEsyvySyPIP8du5e4A+Oxb80u1blb3oH4gPfXWPxH
eQe9657KgXZa1/IImdnPqlM1+zkzPD3uUfrl77PLHhP+Zo/JD0e/IfdM/uh7
YSZ/iIcHkzPYOa4vZA+YvpA9YPUhMc0jSD9Gi7sqX4adaXUgMf2eddHfk373
QX1GWRpvV16DPLLFAdqUvh9/3IphmxZ9MaYf7V0I6UfPOwSjc8nkvL13pD7Q
sGzFK7uNnta6dOZh38/eefjP4aFdbi89eUXxLoTFaaPZdcInrd9uDoPmr3fv
ZQ8V31+zPtOQrxfz9TPWNb8jM3u+qDfI94V9o3rObtWjpn5Z1I3b+4HCG/hj
t04s79g4RvERq4uTHmL9s3b4w9FvLZ+g+a1OzPzB2jjxw8e3uvnhBVbPqXeN
xA/IY/Lp1j+luIG9n6x50r6/5gj94TPmz/nN81B6Bxt+wP55/9Oxu5xYpXeS
ReeUbyeLn6E/fABeOT4WL50c8/GSR+D11aL9er02YoDiDMBfGLFh5aARE2Sf
8/PR6YcfPbTvcO0X+PSP5g257bpPJZ+Bv3PYijO6//td6VngdzY8vcMN936j
uh3Oq/f5Zzb95Z55sk+Ajzj/oROPGLdAv8Ofe/f82yNPzx0lPQj8you+r/zu
pirJGeC2X8HZL7/z/xgPPYG/+N+O++06eJLuL/Zz+q57rfgNuQdfQWfDX3Dw
595xj+r+++4OWTZX/Aqc+8L/Zx3m57yAz71/+G2XDJ+oOg3gRn/BoT/yh3Pm
3kE3zsfWFZx1jQ+hs+4pdM7f1dR9R84bXwkOX6XvJ8xiX5IL7C/fl76nBr5W
n1PUoYy6+7xXm79SXAV4x7sevTs0fSc5id4gzpnWH5aV3j/5mfmXDqsWPdFL
2C0WN8B/0X2EHjkdLO7UEHI62DuEZdn2w44p/c+hEyRPsceIcxod1uq7UX1f
SgfBoYP5X8Q9gvEJ/Gn2VXPM+T/4efAv9acqY46P+VnjYo6P6qbgky+Gn37F
/X0n6F1H1llZd+RdpZHjLe63LJzTYfph8yZO0bkAX/+Q41r3uOEL9yuJ5wTj
f+6d5YUrY46Pfb+jMub4xHW7bnz6RTcVdTh7X3PfDVdeoLoXwV/psMdhR53y
eS5PquRXPXJu21437sx3+qrkLy7tVTX+olMXxpQPy0vt/rrlpUOe553hRsGb
L73j6WV3V4KP6me+3PTKh27eebHwhM/vfbD7t0dtDB5V4v/jT538+98Pm691
gb+67eHjz5y9ROsC79113I5b7zFb82MPnt7hkZP/tx8NOwf40zf3Lx14wDjR
AXjz/PtHvXj9HNHB4MIH+JLOFUd0eabAB/jR55Y9uV7vOjuXpnjhc3u/cnnH
Kqs3aIqTN6xY/75ulbLHdC8qy7bZshvfqakSvEflZqd+ev93dl6C27k0xWPL
LuhyyvB6o09dHPm7Kz454J/zZB8A/2v7x96d8IbToS7eUTaj5o+bTDY61MUL
1ow3OtTF9T8/6qWpqxbautWx6111Dx/+wOKQnkt1fHPxvk9t9s38nG8bBR96
5n1XLfz6O8OzOt6+Bh/DszredduCf919+RjDszq+/8T3e6z728mGp+YXni3I
k7Xg4O9w5NQvz9PYwviqFr57W7sWHPxbWHctOH6Fw+1cQn4udl+qQ34u0c4l
QDejf8jpH4z+IeefYPRnnmD8GXL+tPnrNI/xYcj50OavCzkfBruPIb+PJieb
Qn4fo93HkN/HaPcxcO/sPob0nkqPh94nDBx72viFwe5pyO+p0WFlyOWY3ZeV
IZdjweRYSOWV5FhI5ZvkWMjlmNFtZcjlWDC5nb07v90+L51W0A14w8iL3p39
p+JeA3/7usX739dzUTA5nz227Z3nXdpjfjA5n+VyPpicz3I5b+dYng3usuO5
o6trTK6WZ7m+c72W5XrNzqU8y/WanUt5lus1rUucB73G/MDRp4zn5+cP1D13
34tF3hD769bFnW5f/+pnhSfj772m93vlvyv0LHnJYzr3uWnG5q9r3NG3zdjq
9z+Vlfq1mvLiNQO+ED7Ad+k+fctuv63VPPiX4Tdtr75n6VTJvdzfjL/qsvkJ
PwxdIv7n506jP+1651czND/jl2y32z/23nCu5lmzr6a415SOC8/bfqbGA3/r
tpn9/tx3hsav8aMXxx5bHLqyfc0s0QH4tH7PjhgwsdA72Kela/c5+ZQ3ajTP
GviMeNVVhy1d8vgSzQP84fd/aHh42cdmV8yKL7+8/+Avr/hW9FljZ82JP28Z
/3vlwXNNf72a54M+tHrFyvx77uNNj4+JT22+zXk9O0wyPfVq/s75I6anKuNu
w298b+CFb5geHxO/bvvykJ+nfRxTPqwK8El67yaEPfpffkTjH2YYf1aFN3o1
L9hm59HG/5PDBld1WfRN//F27yaEL7u+veq23SaJ39b4KwvDoLcnHLftwAWa
H/jYW7Z7Y+vTJml+fn548Gudz/hmluZfY/fOC28N2Xq3+bvP1/xr7N/vw+U1
/WZ+VPmF8Ab+n5H/2mL6z9Pd3wztrrmu56H7L9A8D5z74StN+/4UTlp3w9cm
P17Izz167/7Q9F4/hO++W/XsRk++K/wZv0Wrx7d47cw5mufB9Tbd8JWtyrKP
Nmx3zsg7Zwof4IfP2b5mvfUK/M+qOeaYaQPaZusM3XefTVbOllzCrt+g56ov
99+gsN8Yf/8/6q77Z89CT1GP8OuJx16y60b1whP45Z0G/PY/k+q0rytOePmK
W45ap7Ti2kMqZkybCz8EgzNe8uTzrWeM/fXdxXvQJpdkz4PX+se89OkhG80T
v5GvK2s8MTT/WC87AfhnXWZ9fubVE2XXmfwRPzD+jcvmPDp7ygThb/MLf+bZ
ccUJHdo9pv4y1U1BZ+CcwyPz7l133y11Xhly8rlnz92716FfiJ7THz1u1baH
tSot67XODtNijfYFvNuoc6rGDp2nffH/vv/qpu+GVC7Qvmy89mXza18mb51v
Y863Whf41Dt2O7XTA9KbeR5mRTx9xa2tTn23XvjYeJ0v8vnYrvNH/+4w0U15
/CdO/WPNyu7fCB/Wsf0KvtP7K27ca0KBz5p41NL42KaPte83Vv5m7h9/H9N7
XRVN/rscYLzkJOtct/Ge1zUeL/0VDE/Bweeh+nPGTHi96GO1/epcc3kVJ4/Z
b/p/Mn/3rzYi3/jd9Iv2lcvJmMrJqmh6KphcZbzF+bWu9mV4Co5e69Vqq002
HVqnc8rlfETOAze9o/WIG6MvUr9M+sv1C+PNf9e60dYN6DvDE30Ubd2A3jQ8
0WuuZxlv9p7WFZ/ndAvQzc43YD8YP6Dvop1vSO0Q8UNIz1d2S0j5QXYL6wY7
33Dy5l0vKdtIdrj0LHzLvnL+Dyn/656G/J5Gu9eB+2X3NKR2mu41+lr7svGi
v60b7J6CZ7B7HVL5o/sbkFdml4bjEvkmORlyORlNrgbkJOvZeOEDfNiUpwde
cstEwc3eCGZXB+S86RH25Xonm73Tbx/uvET6KNh41yPM73onS/Wavk+aoR9N
X2f4C6bfs+G5vjb/gvGur7NcX7t+z7AfzG/KsDfMb8qwT6Bnbs9k2DNm5wB3
uyjDXmJd8l11yxq+fbVVcV+IZ+5x4S7jTt+5SnTAvvpPr3s6NvX7VHDsq+PW
+GuWt21XevWedgf2mFxrclXxVcl/xj9wwhbj+1xT+IOsO3jNuroP4Llw8NN/
P37nKsGZ56mX+j3/7Ucl0Yd1z7yyQ4ef5iwWPsSzH6pdOmHHoYtDKocVdzV9
pzit8GeeE77e5ZVvGgv5aPObH7cq3jjroAP7XbVQ5wt8Ru+np3ZeOlt0Bn7E
U+163rpBQU/gYw8vaz73QNk/ivcS30Be5fZ8CXseuPm55leuine3feeSw56t
0b5sXdlXti+LJzTHvb4Y+PyJtxfxUuyc3A+KKR82x56Pnf34es99on0B/76+
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
l/On8xty1epANL/ZXdLX5o+3Kt386YL65avmu91CHMDqT6TfXd+hl2OqR1bE
s9pd3bTpE/NNvy+OO156WKcDf5TelP49ZtSmr6zbq4hv4EdY3YvqqW58s3Rl
68mFvfr/7oN4Nf9OwYeWvxsTFm+63/tbL1G9dGbj7Z5qvOlT1esKbvLW9L76
MixePSOwr9R+WByMbrJDoJvZS8HOhTrAQP12aiesCJwX+BBnQA+mdTutMuOf
aHZIMH2XuX5kfK7v/L5k8LPZFcjbYHZFZnZCNHnudkKW2wnB7ITsyNTOCYZP
ND1VMr0T7V6bf6q+PMvXSI9H45/o+tr8C7svsg+D2S2Z2SHRzkVwo4/L81Iu
z70uupTXRQuOndN318v2O35WUX8IHfJ8hK+L/Sa9hnw76qmjfpg7rcgXI8/J
46R6Sn2LooPZV14HXsrrwLVf6nh3mjDv5aOri7w/8vPZLS8/dOs950r+o2fZ
V3qO6ouUHLB1Bbd1Bbd1rQ5ktd1wWucHBi6tMfnTEGdtus95O02XHlQ8vGLc
lN2bGot6YOLbOdzwbwj5PBZPaJPletbiOeoD0vnCt/StAKd+7JCdSxtULyng
nP/Qsw+dsu29ggebR/fL5hHc5nG+ynK+MrqVZfSxpnnhdlkwPrT8l9XbyM6M
qT2mfJzbh1luH5rcXs0vp70Rj5tfyH+rj/K6wWh1hsHiq5JvVn8uOHr8uPOW
v9H6kKJu3/pthY/VpWtdi6Na3lD1TpZnnBf7T9rj5nvOme/6OqJ/LR8R8nyE
5W3VP2L5aNUPeB0a+WLNb3WV7ieiH13uZbnc0zmanBTc5GRM7QHVxQXTy/in
XhcRbV/qF6bP0eJyxKUlP60+xPJ66usR3Pox3d7DbvE6t2DnHi2PL7jF5cQP
ev8zuRe6p6X8nlp+qrx0wa1zb1lRvsj226Y06cA7Go7vPsXikBrvcqZk8krr
I68s/kNcy+oHmqL1jaou7syrLlo14MLC3zd57vEo4lfmj9fE6j03/ehXfT0+
pn43y1/rflneWXrB8UEvGL/VBNaFDsDRU2mcUPXeZk8qbmz1S8sC9LH4IXE2
k6tNYUrejw8cPjR9jd7PTP/qnT30r+nxzOyHzOaJpseZJxp/ZvCb2TP0qxod
2mQt8C3zuPzJzE7LTF55XCLj3Yk0D6J+WKuDkt/q9kAp7QuWPVAyPR7tfjn/
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
0edu8gr5r/4o2fN5H5DpTb1LYHIYOR9MDkeTnyWTnzpf4KZfSia3lXc2uS07
yvSI6ppMj7hdob7+tI6uUf1Q2NvAoafl9cgLRNOz6AXX4+iFYHwSOEeLP2Cf
yw8FzvsGFv9Rv5jxCfNHs+uwT/QeAXD40OrHMuoqqVtQX1R+74gbWz2n6vqA
230UnPto95fxwe4v410fcX+D1W/oHQz8C+BGT8Ghp/lNxIXcPsTudf6P2A/G
/9hXwfgf+yoYn8f0nZOiLpF4rNVR67vG2FfQh35Pq9dVfz1xG+D08cEnwOnj
M3mu9w3Qa8Dpu0SfGtzzDuTxLS7dmr5Uq8dW3jyYPRmRA1bXGumbIx4IPO2b
K+D0v5s9GZFLZjdy7jHNG1YF+iBs3UA/rK0b6Ie1Pp2Qvs9Q2KXQwfwy/Jei
jzQfTz8p8VvsDd4xsLpl9Wkan6hP0/hEfZpmv2Un/zSv37elT7z+Wf2V2POm
9x2uvm/4ATjyx+xY/OVo9Vfq07f+BfV9W7xFfd+WR1O/ueVbY1onrHyr+s2t
/kR93FZfqu8xWbxO7yxZHYj6za1PTf3mVqeq71uZXaE+dKvv1fciLU5OPZvs
Xss/Ki5hdUrK71jdkedn9R1S4jbAeffA9Lj6Qy2vqvcfLL6ndx4szxX8vCx/
Gszew18LFu9VX7bZvSXj/5Lxufeb6Lv21m+i78iDj/UdqC7U5LzsUpPz5te0
LvF9dvI7wJEbqX/UuuTymfOlz9riMOrHx66z8SH1jxojfdzqc87hyDfzs/Re
lslD9UdbvMjeHyjs4V+uf5Ccl/0A3PROZvLf+usl/02/S/57P6O+o23x/2D8
LPkPHSxeRxwspv5jY4DOaR65Ne/ARDvfwHnZOQJ3/tT3ZI0/M7NDSqZf3N7I
sCvM3gAufIBjF1lfFX5fMH8Eve/ni10R7XyxK6L5Kdgn1reoc/S4K/FG53P1
46dxhtb6boXVD9Ov4fEl/FPPb6pfnv1CN/rc2S9w+tzTurLasP+Wtx4xaOZ3
yndwv+jTt76trOvJ43vMGjBbegr4bd/8Kjt78GTJT+iQ961b3XJjyPvW9X0s
5ln4zpvDN93e+zFbK05l/I+cidY/Erb/efy2N788VXlk4APeOuaVvn1mWjyn
MfT5adltc56ZEq3uJab1M+proC8gWP0qdVCqnwHOd0tNP+q70naO+s5vGh9Q
f5n0F3zLd2nJ7wCnP8v6toBH69vS92ptfvq5os1P/5fFMVpn9MFZfxxw7yvM
2C/rQge+u8T82Gn0Z1kfnL5/h/1g8Ghwfa/H1s34Hpz1FWYt4KN3meBL8N+m
zYhb/jz4Ze1fee1dzjrn8Ia3Cz2Xn+/nnWZuNHrj7xRHAL7kiz8fOKJ18S4i
+J/fpv6k3sdOE12Az/3HTvddWa33o7Tf40c+WbvhN8X7EjaP1gW+qsf03vdt
VWPr1oZde+x6xiF/K75TKXvssIc3b/6bf49ytV2dw9N1a+OG9xz80tSBxfc+
OK9fXrcqgqftN7Iv22+EDrZf5inkdX4+43L6Q3fOvVN6XuKHbfPzZV32ke9X
+LGPCxL89d1L4Lo/wHN8NA/77pjsV++7hI7J+Rby8NUDh4wc8fl0xydckPBP
8R3OC4zOnHO6L73XXuq7+c5jP35ykdMTftb80Cc/X9039pvfl2j4QwfhAzzn
wwIP+GINPk4f8YPxWzB8Cj2S42P0D7/MV7oX4g/xY4JP8Q4Q4+3cQ8qHkg+Z
8wPnAv5GZ91f9i+88vNK+aF16bVRpzy6zZ3F/bHzcjkg+pvc0Pma/Rzz+aOd
F/Sxc6l1fovGb86f0eRP4dfn89i5xJQOxT6Yx/gcuoWUT1pn+87940nHjxgR
Un5uXToxkRtFn2wqzyVnSrmciSZn0CN+X0IL+iXbfw0+0e6L5LbxeWyfzCP9
ldm6imful89v+/V1NR9y/v8AwsTnsA==
    "], {{
      {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
        GrayLevel[1], 3], 
       StyleBox[GraphicsGroup3DBox[
         TagBox[{Polygon3DBox[CompressedData["
1:eJxNnQXYFkX3xvd9dvfZegxsTCxEsQtbQMVuxW4RsQMDWwxssVsRO7C7u/0s
7O7Exs9A/d+/9z5c3/+6nr1mntmZ2dnd2ZkT9zlnzh333mivVpIkE6dIklTp
hmWSDO1KkguLJJmtnSSrKH+FymdRfmYdy6jyVlmSLKV0oM6toPzdSh+gvtre
qfz9yt+v9EYd66htb3X8gPKNjn/zJPlHR638MyqfX8dDyvevkuRyla+g9AZd
53od6+p4LfovdCyk/iul66v/l0qXraf8lWpXKr+srrV7tKOvO1S2lMouV59b
qv4N+n+H6p+q83fp/KU6ntL159Zxj87NXSfJBjo/opMkiym/ltrepLZ3qSzT
+bWVvqHxvK7jEf3fXO030zG76iypsrF6JteqvK/KjlZ+rPJzqO/blLZ1LKM6
tyjNdZyg/L/qv6+OF5Qfo+MalV+no4t7VfkcGvNjyj+q63ZpzH3V11P6v4j6
P0X1e/CMde4v1V1d6cs6v4iOl1S+oNJnlD5ZeIyMf2XVe1ntbooxPKlxD1HZ
6brXuwuPcV2lN+la43RsrONrnouO/VVvXbX9XvnvdOyitlfpHhfVGAfoWp+r
bE4dX+qYS8d+qv+S+ppD+aFKn1L9XZhferY7qc2LvH+V76dr/J77Gf2mdGLu
9zRSfd+ldDW1OTHz+11d+WvVz6pKF9CYr6t8fmKj+aZ2U6vOpvo/j8rvVf4h
9T9r6Xlwn/LrVH7mayk/u9ovrfz+Sh/V+GfRMY53Wvo93K46++rcLUpP1Jj3
qz2XxlSe46vGvPpU115G+c+Ufq5xXq1x/6Dzbym/mPp8mfeltmuqzjjVP0b5
DZW/XfnLdMyvfKKyxXVspOwdKttVR1v9fKJrL6nyjVV+p8ouUp/H6/hV/7/R
/S6k/Nnqv9J1RjN3VH+Cyi9R+Tn6f7HSiao7m46r9ZxPUdmM9KV7PF35a1V/
C74XtTlJ/zdRP7Pqut+o/FsdS6lsBM9B509TX0vr/97MDf3vp/xuGtPUqv+5
6myp8l9Vdrj6f03llyqdXmOfwLNWne+Unqt0QR2X6NwrqnOG0j68I+XPVdvr
lZ9C5xdW/iid6yi/kPJHKv+RxraRjplU9p7S9XXMoPwvGtfPOqZT/kelP+iY
RvmX1Oepaje1xvBq5WtOp/xdajeFjgu6/C55py2VP6J2h6vdJP0/R+VX6vyt
Gk9/3evXKtPymFygOsfo+Eb5B/h+Vf9Y1ZtO9ZdTvWmULqPjH51fQ23fU9ma
Oo5Xne2VbqfjUeXnrz1/mMsXaN5cob6OVfpy6Tm8mdquof/zapwzKl1LRx/l
eyo9WG3v1PlLNCdHKr+K+rlG/bT0/JdUnVfV/hqlf2tsRyr/p9JDdcyovl/X
9cfr+EFt2qpzmMp/Uv4G9feH0tXolzbKz62jh+pc1uX1ZXrlr1L+NtW5Qsch
yl/O98ucYH1Tnf+qvxE6vmCu63oH84xV5z+65os6ttA4b9G9zqRjD527SX22
dJyg/K9qdzBzSW2P1vnhKlMXydm6x0OVvqp7X111f1f5fKxHOvkb35n6X1D9
jlT/fZV+qTrbsa+or2lU9rHStXRUlcc2g9qNUvm6avuI+t2GdVXlC+i4vO30
fJVvrTHsqn766P8OKt++7bn7t8onZW6zi87Pp/Qq5hZ1ov4Byg/X8Y/q3Z75
fg7iObb8TL5U/R10Xz2Vvq50Rh0zK7+T0uc1tmdz78E91O409Xkg96Jx76m0
h9IZK8/B5XTv76ru6jqOU/1zVfcn1Rmm/Hnq6wjVKZSuprGcrzrDde5kvnUd
O6nO7y2/v0vVz/Sl3+Mlyp+vfia2/I5eiXf3mfpqNJ6TdG5fnbtb+X9iji3C
nqHzv+s6vxT+1n5S/m2dvz6++R/V7gOlK+noUn+JjsWYl23nF1f+aOWP0jFC
/7dS/blUdpZOT1Kf9yo9WennKt+SPVvn+jTub1el36tsqI7l6Uft+yt9QG3+
VpsbmZvq90CdX1nl9+n/fnqGc6lsX6W91X4FlQ9Veo2OFZV/Qs/tKd3jk7HG
Hpib7uG626qfeZSenZg+mrdlGulqte2t/CNq+yN0icq+Vvq+nu1CKv9Z+d1S
52/QuUz1eyl/v+qXjft8SPnloBtaXh+PLN3/D+zPjZ/JA6pzlMrnVP5X9s/M
+TGqv3nqPs9UfjPlZ+OdK79g4fO/qP4LpfeFVVQ2E2sRa7PWk1XV/5RqM43S
Cann93JqP6vqLKb6eyj9SNf6UMe7GuMw9fO+0v+o/cek7AmqN0LtBqtdrfNX
Kn1F5burfCld+wQ9x81Z4/XcN+W7VJ0jVHa4ji1V7x+1PZx3zPzTdS5UuqnK
X6z9Pj9Ru+drz4ePlT9Yx2Y6f6bGsKL6P039bM2cUPqayvdQvQtVfoGODXQ8
rPrbsdbpfvfUtT9VnZe5f/V5mMqf1/k1O97HXlD+TZ2bV3X2ZB3TuBZPTbss
rLazKN2p8F7Onr618nMr/7jKH1f+7sr0yJd6nm+qbGbq6/87uq+3M9MGqcb0
XuZ1+yHV31bnT9JYXtf/njp21P+FW95PX9f513XdrVV+DmNW2yE6txNzvvJ6
PpPOb6X8j6q/kuqcpWs/q/7PVHqCxn6J6vRVnV56PnOwzuh/kXr/v0r1N9G1
b1Xb99XHJ6yfudfnG1UnTb2XDatNt0C/1EF7/KL/j2amK35Wfqjq9Fa6rJ7l
+7n3xwn6/6yu/a3S5XWt49T2Yl1/e/YCjW+I2u+m9Dz1e47y41W3n9otreOC
lr/fDZVuovqLq842rHnwHdDbOrcDvImu+wzfnc4/ofa7q2xqpRuq3/1VZ2Gl
69deE95WnQ90biP1c7r6SZVfR/lTlH9WddiAjtf4n1Z+HO9N9Y8rvVb8qToL
dLzGX6c+B+ncGmp7osp7q84iqjNR+R31jg6Jte43/R+gOscXXmMGKX8nl9H5
azL321L+POhqHftovKu2PKadUvdB+zMzX+tutb1N9W/WcQ80itJVVGdtvkV4
NB3XKz+YOd3l9XOP1GvmX8rPV3qd/KfwvXGPz+hec/WzRPB3s7fNB+4D7Vqa
//tD9f9beO07QektOn+zjot0TF35m+3D/h/vq1B+uMrXVr6t/IKqd63Gtp7+
H5J6HRjMs4DG0XGe8odWXhP6KP1bZUekXjd4ruPiWxjU8j7+MOuazg/XsSbz
BFqo7TWon9KldWyuessrXbbtteUlXf8onjc0jcpubXv//7ox3bu7+l+8Y/qz
h57JvoX307ehzXSdCSpfgOfMHgXNozovsZ7puFr5/QvTre8o/Q4aFZ6sy/Qu
6/p3utZf7J1B6/7V+J2uw/en+z5LbVbX/wf1f3mluc7vqTGNV/9rwMvWppOn
UTqf+hytPr5Vn5nOrafy01S2tsb5o/J92cfVbnodt8F/qDxTfgmVv8Y+puNL
lX+pa7aUXxz6Sn112r6fTVW/bvm5sKc0LfMC7DXTtjy+wxuXfaO0R8t7GPf5
Knu8jjtYXzWm0+CVlK6q/8t0mUeYSueX5RvUub46d5nSn3XtIxrzGd83Xg/4
Tp9kH4n1YP2W9wD2grX1ri5R+SjVO1j1P9NzaDS+TZBJsAeq7S661mUqy3Uc
oP/jlHZ0jFJ+IHyI+nlO9R9WHw/pOFXlzyB/aHlOfssepeM59X+Tys/LvAaN
Vtm2Sl9nT4dHiLVoZON9tguaHRpN537T/0HK/1fpHDrurX2/43Ufj+n8Xez7
6usK9VHqOJTrqs7fqvOP0idU5/HMdT7KTavPpWPv2vk/lT6o81Op7YmqM4PS
M7vMk2yo+hvkXqu30/XGsC4rXUjpA9ByOkbr/xF69qcrvQe5iMouVPupC9MA
j+vcF4356IX0zC/TtS7NuEmtvfF8kF9Mr3oHKT9MfaxWe/+CL+ynNmP5JpWu
XPudX690JR3D+WbgtQvzbvBwx+l4WP1spLRUu0LHUOV/1TU3SM33/QrPzrxV
OoXOr5eaBxxXew7Ca17POq1jY/Zh9XcUfILqzFt6f/1V13yN9VDnj4Pvq/1N
vay2U6nPKaHnde473fuqKrtY4zysNA/6perX8NG8M75PtR2psmNUZ13V30bl
8ypduzHtOo/SsTqu1HiOU/pK6Xl+qNo8prGtrPx1rDWqu5aOQn1urf6v07lr
Vf5Val4DHmeC+ri2Zd77TZWtw/zW/yVV9xyl86jvgRrPBWp3N/OwNk16Ycd8
zHUt8zzsCwOU/gudmZuvWQ2eRXX+zMzX/FhavrFY8F7QRfsEzQTtlLPnV5Z/
vF6YfoKOaiP/UB/fMmd1rJ5ZdvSB8hN1zAMPmfgdduk4SPkzlaY6Dk78zv+F
Bld+BfV1tNKL4X2DH+yt49TCdMvv7K08f+UvRaai+zxW+f+w1/NNt0y3HVeb
vlpK6baFZS9PKF1CfT7Mmqzyz7osv+Ie9yg8xleQAapspqDN6Jf+O7XpP+jA
lzTeHQrTe/1U3k99Pqf8KGgTXf80aGr9X1blL7CHqvxZlZ2uYzboPrXdWf28
pX5mKkwzvqn8AXruf+r8uyp7kf0Ynkxt39P/PirfS+n+enf76VhR/5covefs
gzyH/Tbz/Dyo9Bz5WOUn16aHoYuXVPlKqn+MypdR+fYqf6QyT9NTx7n6/6nG
vEXwZgfHHOObOSPzvL1IdTatPFdXUXp85fn1EzQD619m/mTr4KFWUJsLas+l
UumyOnaAllS7vUvLE19T21dUf5nU/MYA9XGF2j6t/BodyzCRZY6uLWNE1niG
8kOVf1r5jPUmNc+yYsgqe+kYqXNXa5wDKr8vaHVo9g06psOhx4fl5iXmZZ8J
fmYRpePhjXR8qH6W5lmp/WFqN76w/HNXpQN1/ouYny1953/wfODHVf5Vl+UY
OwcvC631Lvtq5Pu1TF/dBs/DfpKax/tX9/5WyzzkpRrHO9B7SvfRPd4Sa8c3
XZ4PyGCfUDpll2WIx6vuFF2eo4doHB2+YaWbFJYjPY8shP24y/LV6eEHWANV
/qP6njX1XrAD75Q1iL2y9jssdH9nq95ZOnrqeKw2bbax0gZ5f+715Qfk6ipf
r7Y8AH4c2nQv9fk08nRkG+p7Lx1LtsxrQz8wn+dVvx+yLtEPc6Flfn/mjs/P
oD6/UPmbLa9Xj6u/02NeIhOaueX53QueC5pDR6Y6acgfkAfM2TZdfkhjWdyC
7Lk6N6plefsg9XcitJTyTyk9Qcd0yl+lPk4OOfXDfB+pae9HdP6YlvUWaWOa
7xKeScc6kLmQ+bQ8H5Cfn1Z7/iyndDc9/730/D/QmHopPxyeV/lZGq9Bp6jO
cy3PMebzHCp/i7VQ5XMUltl/pPqHNh77Qsi6Vf/BLl/7eeQGGufVyv+uOtNA
06ndk6rzbJf/b1lYdn2R3svOudexaelL7e6D7lOfj6v+sS3Pp3vhRUIfs2jq
ax2pOudprsyu/1spfZw1VvVvh+aDZ0d2rDYXd1lPsSgyhNr6onmUPqS6t3ZZ
ZzGb2l4a+U/VZtrUdNr1jXmfdyvzbgNb5mUebryufgp9nnrc6EeeK7zObAcf
1PGa/Emsz6wxuybeC+DRb6n83slvo/Jrdd1TM8s7Zi0sY3hX9/BQ47nxfu17
R05wM3L7xvPkvdpyfL5F9p271OZOHTe2vUewPt0X+xR51q93lB7AGqA6K+i6
y7Meqewc1f+hZVnfS7llrLspfw08L+sMMj34jpZlif0bywZrpe+GvIE17jO1
u6LLvDr71dtd3m/uqvzt94t98q3Y79iHOL+XrrN6x+vcLko/qj1WdEk9CutW
nlTd9+Nat1beM1+PfsZ3eW6/3/ba/1nss6z7vJfd1H9b5z7JLFuaK9Y11jRo
CGiJg2M/Zl9Gx/R523QI+x379qfRJ3sYe9mgjmkGvpd94U2K2NvRs1Ue1+yN
v6nPo87sSj/p8jWeqLwvL6973Fz5m+Av1fYXnd8z7mWf3PssfNfHmcfKOF9L
vcezX3xQWzZ1otLZCrd9j7Wt9nNB/rNc0AZb8o5qXwM6ah31uWbwnxc31slt
r/Sy0D9dqvS1xtc/q/Y8RV+HXG6bxu3OrL0usD5AM3D++6jzYdvPeLjuazT8
o8a8i85NQT/K76ejrfzXSneGFlSfN0Abqs8llN9Y+f8of5LyN6reCUoHqM8z
9Fy217k59A42UPoC/B+8hPJbwGPoeZ6HnA69DXyKrvm4xnGH8ueqnw1ZRxrz
gFuq7QKxVs+i/vqpfDP18ZLKZ1L981V/W9bsxm2PUnq57ucweCKUCir7Uue3
goZQftHM/N0iSmcO+QP82fld5tH+qK0v2l3pOaX5wRWUbpqbf0R3dajS1VX+
nOqMSa13GcEcQP/IPFB6jMY7sm39w/xKj4ReV73jlD+27fvur/QrlW0Dzxky
0Vc0hjnVxx8t6w8KlR8Qsu7/Kv2k5X6W0Lt8SnVbrP2650vZV2rreuB3Z0is
Vzmwy7qVQ1rWS5CfPXM55zdG16D0WqUXp9br7K//PVXnl5b1Aot1PL73dZ0R
emenqN4pqn+e0pujzv4t6xk+VP9r6L4m6P8B7OWN7+9Vje2Wxu//ZeWnVf/f
MyYdv7Wsm0A9cGFq/dBe7FPKf9byPJtS198zMz3wJ3Rdy/PgH+S6StdXupM6
eEb1zla9jtKDgs/ZDvpGff9XY19MdRZtW65Yw6dwLWiDjvUfKTLAxvoR6qNH
20f56RKX7RvjPI3vUO2+Rp6PnlD5XVvWj38V68njlddP9ven9Z62SKynRi+M
3Phd1tHa+yk6Q/ZO9lB0ydCO0JBzNtYLs54eq/T42vs1NC48Bns0tDJ8BWsI
awlyBvSwbzXes9m7F069V7Fn/acxL8D6wzrEXsWetXljegW6ZW7uD1mE8p/X
lpmzLrE+oaf7iX2ptiwJmdLGqXlP5EbI1ZAhrtplmSK8Obrjm2rLAZCD3ch8
qC1TgudGvwn+odOx/Ag6EJ5/bG351ZjGenxkI8hI0MWD6fi18RrHWsfayDrI
esjaeHltGde0HcvskN3BY4P3gK5ZrmN9/TRBE6H7+DPkK7vWlqUg80YGfhbf
Ysf6u69U55vaej10o8+o7VPI9DSefxvLw09jnnQ8P5gnp6r8N8aK7FHlZ+n5
nKD8iTp+CHkkcknGxNgWrU2HQY+Bjzk/1kzWTtaPM5HpqO7FlXllMBzIIpHh
IRdgLWBNuKvxt8r69wrvubKMfWfV76P2iyvfoLtQ/hT1M7/SUZV1oOhCp6ws
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
3NVftfG7ewXPelGXsQHgv5CtI1ffIrfdAs8BXT7PCruGqVO3nVv/b0uNQ+C+
eqruDZl15WnwV9DJezfGpq6sdOG29evI9Y4PmQyYHuQxYHBeVJ97ZZaR8R/M
D3KaFxLTEkN0LNhhwdB6CL/MfMktrwPzAxaNNRsd70ct437gFRdsnH9P5/u2
LRMEU7RPyOIeSqyDWqNlrC88JjjBXZX+nBobDF6Ia45TuomOk0vfx0OlcY7o
BeZS/uXGeustlW7K3EutV3ilsW57a6VzltY/gglsV5Z/TauyS1T/YmR83FNm
WRkYWjDLYFXfVtvF25ZDgZdCngq2BRzb7pllVpTfqGMjHc8nxlYhAytL4y2h
af9V+43axigi01mo8f3tjvwhM66yGwuNDiu1jOtQ5ffmGavPHzTm//DNNcYa
78Oz1f+5Ov7/GrKTyuvIVLrubuzTOt5JvK4MibVlZWjvtmV8y7UtawVztXdm
mSf5PDNOBhnySSGLaJR2ZZZ/guF8rzFe+V2lk0qPPQdXBk+QGtu3T+Pn8pPG
Nl/bslBwZg+WlpGeAFYhNTYMGemRufGm5JExr9uynHlSalk08y3XPY7QNZ4q
jR9DPslzWQWZs9oOa/kYGvf+DTonpYtrLIXaHZ9a7ndn43n1c+3+eFY8s1Xb
lqUzB9DhocubTXUXgA8KfulkZCttY3zgk+Ax4ZVYz+5reW0sNc96KL27bTss
+PSnlE8Lf1uPa/z3tyzzoJx1g7aTlK7WGNvzu/IrlpYF3BW8G1ig5dXm7MZ5
NgbWlntbxhexnpFnTUP+gd0TvB88KXp5voGlUufvrWynwho6S2LsFvP7aeWX
1nWfUzpVZfzguJjbYFfAjS9VGjsARgVa55nKejlkU08F341e9QH931rlD2qc
C5aWOyF/ug96Tvk7oB/1/wCN47HS8t1LYm5/X3l9Ym5DB0APsO+fmVq/80li
eQaylYGJZSLksZVC9oLMZEBi+zJ0B1uUxiEzh7dSnVNyz3/kXGCbyW+h8rVz
75Gsz/0y88bwxdjjsM+C3wUPSZ9gFOeojeGqOraTQt6UdnlfI4/cCd56lqg/
Z20c1jmNdRzIwRZObOvUM+p8V5sGnLMw7cN1oX9Y+9n32BNvbdleAfuRZUrb
AXyodKrC13ys7T2FucT+gvyIZ4J+9prY37+KPsEFY6P0a21+7ffKPBv5L3Ru
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
rIwZWcX/Aa8G7Iw=
            "]], Polygon3DBox[CompressedData["
1:eJwtnAO0JVcWhuved1l1Y7vTMTu2Ju7Ytjp2pmM7HdtJx7a7o4ltTmzbmPm+
/Hetd9Y7+7iqDvb+93/u1FvsssbO9aIoPm0UBX/F7d2ieLVWFE+2i2L/XlFM
0ymK0ygwCeFT0n4kXEu5M5CnI2+8qijGHSiKuUjbuaRuqyheo/4khIkp+1/y
RzSL4jny3yD+E2kXEj+T+tNTf1bCBcRnpvObib9Mmd0pPwPjOIf+Z/E/+YeR
NivxPwiTUn8U/ZxN/kzIh5B3KGFm4qvS/grkj6TObLQ3NmF74sNp/yHi+1Lm
efIPoPx+xP+m/D3IZ1FmBvJnI+0I8g4n/O2zEF7nWSb1mdpJM29Jys+JvDXl
h1P/MuRtiH9DGzsgX478rf3zPPv5Lkgbi/hj1Hma9zU7YUvy56TO8fZHuycT
/5z/p1L3Gd8PZZ+izJGMfXLqL4m8Os+8DfGpST+O+Bz8f5f2m630fytlfqC9
SWl/A/JqyGdQ/1bS5iK+CuFi5GMIz5K/GeEW6v9G/ua+G8a4I/Ht6GND4veQ
tj7xbSh3Cv09Sj8LFGnjTdJWI3zLWE+iv5OJL+g7Qr6D/A+QF0Guk3c94VTk
Q2jzPPJeJ34G7b1K/k/0vwtt7kh8TdIeIz6cfi8gPj9pE1P+RsI71LmSMGkj
ba7Z79/5OwFplxN/n/LHIFeMc1vaOJy0K5C3IH8U8SPo/1Li55B2J/P1+nbm
rnN4HfKfds4ynn+T9kEr68D1sGWR+fw7bU5C/B7y9url+/vu36PNr6n/GuEw
4mNS5lXiU9DfK9TfAnly4kfQxuXkn0x4kfzHCPsRP4N3Pi9tbYg8ZX89ObY9
GON8xMchPpz+vuf/1UXaeIuyb1PndOJn+p/8Vyi/Py/kEOSjkduUP52296HM
fMTfK/N8T7Uzfx6kjfMofxpl5qHO2s5Z+p/GPtpZD6OJH0n+EOKHkXYW8lXU
mYeyLeQTyTuL9uf1XdH+Ae4X5B1D+3X3C/LWoM+5ib/EO9iV8t8iv1jlm/pt
b6DOAsTvaed5D0WeAnlX9yHkK5HnRr4beSnkQ5AnR96ynfVwCfLsyFsxxjrf
403a/BJ5pGuc/rbg//m97CvuL6cX2c8ecE0RP4L6U1H+XOQbGplzVyC/yfP8
h7E+SPqxzk3aPpiyz5I/rnOFMpcRP5c2XnCtkvYvyr/POzwP+QnC4eT/1F+/
f/jO6H9y2vkNeYtO9oK7qfMMabsxvsH8n5bwO/kbEuYZyDP5bD8jz03/bxBW
oO4vyPMS35oyRxEfIG1Z5HcJKxG/n7AF8U1o/z7i11Lm/Fq+8bLE1ydtCGO7
ppb94jnSBhFfjPydkH+n3xvJ3wX5SNtmDDcz/lsIy7k3UH4W8mqU2xJ5Zesj
30gbd7QTjDunV2pnz3HvuYT6i1H+dtKuJ380Y1yUvBl532Mir036jrzvJ2h3
Cfqfjvqbkr8i6XMWqWPdt0m7ivYeKTK/BgjX0db4zmfid/o9ioxpI8p+1sm3
c490r1zJMRC/gzAUeWrXIPHvfUbH0Mm7+Jj+XkDeFnlh5LUZ12GUPY0wA+1f
Sv7pxBdjzJcQv6m/Xrem/LyUf5LwCGnPUe9h8sciTID8Lvm3Mp7hyBchL4H8
IONfgrQ7iD/qGUDeggPZg9e1f/objXwW8bMJ9xIfTNi4kznkXLqWMD51D+F9
PljL3N6X8eyHfBfytIx1b8fK/1HODcrug/wM/18YyDNuR53jWaO39Mf3GXWP
rrKeXdfb9fJMPptzYHPPkk7O8uGMY2Lie9P+fMTPJJzVzRngWXArz7gQ8W1p
8weeZ0za+Xcv+/W2fivXjPsq6a8gDyUM72R/vIix3IN8pu/C+YR8I/Jp/fPm
a9o7G/kU17PvcCDvdHHiJxqQx6X9yzqZry3q/4e0c5BvYIxP13I278d4ziH/
lIGccauT9iHhTur+SB9LkDeYMnMzzibx7YkfSv4wyn9NuIj4J6S/5VlF2L+T
PdS9dG33K+Jj8j73or8L3Uep/xxlRtD+jrR5LPkTVZn7roFLkTfp5Ft3a9Fv
niecQPkHaHNf5zptLEjegZ4dxP/dybtbiTIf0ubHpL+JvAphb79PO/ExyNvO
s43+ZhzImrkMeU/XPPKntPmO+yrlZ6glbS/y5ub7TYy8Kem70N+i1BnJWC4m
LEz89Sr62Sjae5qyH1FndCPf7CbiT3omI99GmRW60ffU5dbg/czYic6n7qeO
pn63C21cUMseMDnxNxjT8dS/kjKTtXMGeBa45rbwfSA/Uo/Ope41rJO15Bx3
rn/F+K6j7jK0fZ76FG2OR/sPk7dzL/rRzP334V5yAvKetHc2deZXvyCs14qO
OjbxRQjL+63IX0J9kDojkTemjYOcX4RpGe906jT982KLgezp7u2nEQ5E/osw
0vlOGy/R1oH0saj6N/8vLlLn4P78dy2tSJmJKfsE419Ohci9ivGvSLgL8U/k
w9WnXH/1zGnn9pnuEcSnoH6N+i+6B/L8S5C2C2XXIlTEryRcSt6+yKsPZE47
t/chrGN92vyCeM/znfrjqYMRv4ryu6nfEc5r5wz3LH+OsAzxpTvRdV3jrvVT
qfME7+Y36k/Gs0zgHPWsb6S+7RlflPFOwHhfI2162l6a+nuQtzjPOAR5L9J3
db/rZO1pw2jL+P2ORx6LNsbvRAdTF/MMP1zdmHA78QNo45L+/rw38dtIe4/4
1oxvA+J70f8rVdaEa+NJ2p+ynTZt2z3mJOJHq6+QPz/5vxL/lfLX8WxDkIcg
j+U3KzKHnEu/dPOudndN8fw/I49f5J0eR3/HUWco8cXr+aa/k3Y/Y1mTcpvy
vF33n1ZsGPcX9eFWPTaFtsVBpK3gHKKNG8ibhvrLDWRNn+/ZSxu/U/cUyvxc
Rf/0bPuLMUxJfCfCeciPN/J9bvYb1bOXbNaLPbVEPWte22zNKvq6evuChA3K
6ILqrOqu31H+bNreiP6O7Gbfcv8ay/nUyvyaF7lEPoD6yzuvSb+Q9heg/MfE
D6T+fcird6Ozq7v/jzpvUfZg+ruP+FbU3Zzxfcp4rqDsCMpugbwA+VOaT9mt
kJci/SryryYcT/xt8o+l75fUb8jfwTNmIDqSutJ3pF9Af7NT5gf3G+rsRNpq
hEOJv8D/dYqk2afz0vn5B+ET0h4gzFTkmY7pRt+dlbzvCR+Rti/jPZZ39TTx
dcn7thXbZedWxqc+vpj2Kf1/7fdFXgh5HORfOnkeyz7omdN/3zOTdzFp3xCm
4Jlm5H/LueqZ5xxTPyPMzrO3kRdRX6BOh/jW2hiU35wxLFjmnb2MvFmRd3mf
/RF/yfla5p09Tp8v1vIuT1dHGIjOOZZnpjpyOzbSZFUwh82Q1+pjEUOQd2vF
5nmtm2+oTjxhLd/WM9+z3zNffeJEzwTy9kR+mPInEPal/pfaeM4v+jipEV19
P9pZwf2G+j3qTE/dE7vZa11zk/TniN/08mbmzm3EX67lzJuH8ve7xmqZQz7/
Ruq41F+D+nMhL1TGdhRDOIH4I86BImM8CfkMbZqB6DTan8vQx+3IZ2uTl5nv
f1P+lFrmh/pvo5Y1+B/6eYgwL/m3It/lfkydG2rRlVdHHo08Dd9uA9pczrle
xRYVo5mK+L6k3VTLme/zj6FNJZZBqNPf2bSxJfl7ILeQl6bOrZT9lTYmpfzr
hMPIW4p3uj/xBXhflzGmx8mfpxcdTV1NHUv9f3gZ3fQewplV9tt9ie+vzUTZ
+8ifrp6z8hDyFm9HP1ytGcznZOcGZedoBSMQH/iQ/B1qsdcO9h21sse5161J
eyvXYhPNWmXOToW8TTtzWb3Fb+n8cx6O3c579f2616nHq8+PaEW/35G0c5F/
7+sfw9pp70PC88TvbUe/VmdXd1+EMjO6fohvRH/v0c4e1J2GtEHufeT/Qvx1
4huS/7p2XpH5Nilp/0Xescj6mUL7hjLPk/ciYWPqljzTd9rv6sz9+bsSeQdR
76S+feLYLyDcR3jJeeH+2wpm8GYreNXzpE3ejj09GfHj68GYFqXNmZCnI31j
+j6lyt7/DX3sQN5ayHMgr4P8OPEzumn7UsIfhKcIS9P+beoE7dh12ncPGdQ9
OrFd1ZHUlcaljTEHskdsT/trkjYGZY/0/KLshX3871TStiujb6lrjias2sf/
1I2dk1N2MgbHok09B3l70/5RjPdj8tbneVahjRXcj8nbU2wN+bhasI/1erFv
x/W8q8W+ma6KLud4R5Ups5j7cpG6Z3djD5zlPq1OSbiWeE2bvJ1v4Lf4iPGO
0Q6GJJYkRvgT9Z9vZe+7m/wJyb+I+tMXmYO7k18vc3abZp7P8K927BGfTbxp
0f75NKIMnrCIug/t7k58UBXdTh3vePKn7mW99zrB29Q51D1+JW0Myl6ELMD2
Dn1sQv7ChHnI/xx5N+LTVtlb1EnvoexQwrLkL0qdK8hbA3kl9TMxXvUJn6cV
zFPsU/1TbGKI53Y3+Q/S1gzia93sme6d4rDb0N9K7onIp/AN/6S9qavofuqA
55K3czvr7XPCu/1zzfPNPvekvd2Ql+yXV3d8uxXscVrk7V37lPmkFt13Z3U5
y1Nmymb2Q/HjxZAXJ+xPfMsyuuKntDER8XUY4/nt6HCPVtGHf+LZb2a8m5A/
PvL49H8XYVfkdSm/EOU/p/5eVYJ4kbjRP3mEq1rBtOek/L+r2EvaTQu3Yz/6
rS6gvc3I/5UxTVjEpvyxDP78B/kjtYfK2OTa5u6RYoSrkbYiZZeizNXafuIf
tTyj+LhrwrWxmPZYlWdyf/Fs9FkPRb6A8byhrkG5Y7UHyHuEMn+RNwFhIvoe
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
a/tMa/Rynontj0BeuxcfqZixeKC+0/HF/JGPcD71ct7om30EeeVezo8na8Gk
xOde0KYusqZ375+327Wzh7mX/Un+zYz/cp5nySr6o7ataT+X4b/cpD5GeBn5
yW7Okh+ofwbyOVXmTosxjd3L+lCvVr9eqRcb/rU+xrUc8Uur6PJi1stq63fD
xRKTUZ9qldm7TyLtQ+JfldGnf+Sb/kAo27Hr1JFOoK2nCMPEx0i7k/zfutGd
5JjtUcXemJfxPUM4nfjX5J9fj46yQJXvqe9Kn4W+C/GNQeS/R/6KVfCfwfXo
sCtXwdzE3vSp/UD8fO3vRjA5z4tFCM8W0ZnXID47YUXyfkJevYpOpG50FGH+
KjqIusjh+gSR10FelXfxA/JqyE11COQP9OlW0VHUVfRpLYq8it+M+IU8+wje
zarIX+gbI6xL2fF4550+HnVxmW/st5az5f6xRid+PvcU9xZtdm1317z7rWvQ
tShuvVw756G24yricL3wSeSeaQNrC8tXmHggHAW5CnuV4S64xmu0NYI6g0k/
wTNQW999k/imteifYoBigfoNPI/1h6vL6NNfvgqGIpbiHqF+IMYh1uEcFU/T
n31/LRi/WL8YiViJa1R8xDXr2hWj0V8p/nhGLRi3WPd0ZXwD6lDqUu4J7g1i
lJP29wuxcDF7sfszqnCJxCxncD8rs1e4Zl27Y/XClXmE/N8ouwVhNfkU1Nmc
+PGd+JX1L3+v7tIN1ivGLT/q5F44JeKRR6r/UGdluU7IpyBvhDy0EU7gB8hr
tMPrk983BnUbhBeIjyus14v/RZ+WOp66nhw/feTap3L/7ijjn7upFf1C/Epd
7DraPamX81eunWe0Z/X7fr9W/PdP9/VnsXp9AvoG7tbG6493zk58tPrE1GnU
bRZEvryV88HzYpMq3IWvkDcm3hGXpdwTnl+UnbqdNuVbflmG4yXXSx/D3sjb
+H7IWw15/TL60Y7d+Pc+q4IBiQWdWAveM00v2N7G9awn8SxxAvGCSchbD3m1
bvDmX30XvfiYFkJ+oAo+6ru6mbAo8ZmqYJ912j61l/NInp18uy+68W+Jld3Q
jD4yTTs6ofbfeYx3hirYmz7flZFP6Nt8+kOv0D7r46VyRy/qhVMpt/Jn0iYu
oxOpG83cjj14fC8+d+3jS8qM0bGqQ6lfrVfFNlQHUBcQ4xPr0x+2Si/2mnaO
9s5aveBB6yAvg3xVNzqX3AltGHUxzzgxf/UXzz7xl0eb8efJZdTfIo4lnqVv
5dlu/LnaxtpzP3YzV+9Ux1N31H6j/gekPVLF37ZxO/qOur8cFH06YkZiRz3k
X5o5c7VPxCPVHfWpTYV8XCe4s/jzU8grd+MfUEeVD3Z3FV31Gcqd2Qs/Uv+A
Non8OeeaWJb2mHyrO7o52+QKe54P0yZoxSct/q+9tUM7NoK2gjaktuSRhDl7
fR9QO+9ghV72441o4zX62KqMD1df7lXkz94ORixWLD94qV74JQdrj7hftPMO
fPebtPNuLurr3PKfnTv6L/R1TEOZpXvRXx3Lsc5H8tfqhluk/qEeso82A/Ht
W9HftVfUJ7TBtcXVidWN12plP7+qCla/CfLM7h+uUcpvhjxLL2eGZ4f+DvkG
2ge2rQ2pLekac62p02sPu/bubYZjo79H/9e2tdho2mqOVz6ENo58KM/fEeJZ
jOHbbvZM/Vtyg9xLfxBPaMTmX4yyXyHvjfywdmIndayrzb6Q+Z3wAfQ/yy91
/ogzizfvTP5uVXRfeYjWf4v6y9fjg1zL86yKbr8NYYe+PuDZvK2cryo+FLFF
McaG50E7vBFtAm2Dx8pwz+VTvdEN5l2I4xTBwt1vdhLbor3tiC/jeujbAvrq
3Q83N4+wE/H3usF6Vq0Hj3EtibW6fvTzf0faMPL2akR//lScpRHO0JAqY3bs
ozvhDyzby1q0rv7VMal/ZJEzzrNuJPIA7a2OvCXyWGXic/PN7q+ig7p+xIDU
TX1Hvqvd6W+2KjqLusuqjZyX7o/bk7cl8rZV8Bv37l2Rd6myxlxLYhyuvd1J
O6QRTqN4mvrhoY2kmbd1O758MTt9Q59Sf89ayqg/7lmF3/14J/6Xv7uxnfTZ
vEve8Cp8fXn7+kOu6Qabltcnf8Nv5rfTh/FoGUxaHo98HrFq+Rav1OMD1xcu
XnBQEcxQvOX5bnwhYnbXlcEQxBLkPu0uNt3N/YpZ2uH/eZ7IM5FvMlDF3jq4
CIZcr2I//VULJ+EZ6l5QBhvW56u/5eluuBSWubDMmeTZpI9N/4wY5J7t7AHi
FZdVuSsyvTZElTNd7G2Gds76l/qyGP1dZXwUcrTkY+u7EO8QLxBzvKaMTaht
KEdpcBUMRCxEDs3iZfQTsQ85QkuWmW/ODW0EbQUxza9a4cOIdY5RBttyTx6n
F476jYxtniLcdX26I10v2oR9fdu4HAq5FGIIYgn6o+WG6y+4pMg3kx8j514O
wnRFuPhijGKNa9ajz99Q5excH/nGKuPRdtPHKt6mTaVtJSdi8zIcff3w+uPl
7ovfaUseh/xOGR/Foe2MwbGIB25cZI+Sb/M5Y9m6HgxTPsaLZbBWbR5tH20S
bRNx/RHaytpQ1F+3HntEPo1Y7Ajkd8us16O0TXnHW1XhrMpdnaCIv9g9x71n
54H4e9UR1RXFOKYogy+r2x86EPtce924e4p7y/LdYIH6eOWXn6bOSv2ni9hn
+g/lcgz07RvHq+3knu3eXZZZH/oQ9SXqH5h2IJwYuTHyQXZDno82Hizjg9TX
Zpr8EPFy+WxynvRPqF/Km1UHVRd9XFyzER17w7595t6kjaWttV4ZX0qb/eza
Kjqfup8+1tXL3JcSa5SHr/2k/0m+pj5y+fpHkn8NbU9C/Zuq4NXagn5Dv6V8
hR0G4nPQ96A/Xy6P9670V+sPd23rJ3I/WJEy21F+OO29St5j3dxVEsNav4oN
qy2rX0a+jfygxQfik9U3q06tbv0R5c+vouOJV+gDVPfTv++31ubU9vyHU1BL
G/KLxBPEpi7q4wf/bge7PKT/jeQcin2Kgbo/yVmQuyDHTj6YOq58OLmi6r6V
c76IT1jf8Khu/Dv6MrT3f+5kLYkHD2+HE6CvX4zJ/U6Or1zfa3kfXyIfQ3i4
CKf92L58HfEz5Yh0w3nXnyZHX3xB//sXlL8H+STXTjfxc2nvvSr4VWF/pJ1m
effQRjAH/Zvy++Uj6rOSjy5eLx9RH6x8bzEJsQltZvEtOd9LuH8OBL+Xk/2v
IpzkSatgcmJzcnAmofzi3fAF27Xcr/BM9Gx0zui/H1blLpRzYnri+1fBauWR
y4eTn3l7EcxS7FK+j1w0Oblyc7Uxtd204bTH9Ae5tuSkeX9DH4e+juv67/Pw
Krbuq8hnV+F/vdTIHZrXysz3h4pgrkdVsem17eXty1/zfo18vSVq4efqQ9CX
4JrW3/dON/c/vAcivuo389u93Al+K3/2pkY4xC+VwXc3qmWN2Z/28ReUfQX5
rCp8JM9eObvep9GeWpr/sxbBh0+swgWWU+F9PvEBv40cOrl03sGSA+U7lN8q
vmxdORJyJdQHlkMe2Yi/Wk6I3BDHKL9Xf7Z5cjDlYu7Szlmsz1bumPj8poTv
mDNd+lquE1xXfHdi5H268SXJ2TurnfXwXSN4oriieJpYnRzNp7rh2GurL9AM
f10+snHxUnFT/ZODmtEB1QXlYGq7Pdrnd1xE+KwRne4f3Y7818lfkPxxxNII
4xSxj8f3fTDGp5vhsIk/vELaleQ/3Ayf54Iqe40+8VPVN9yfxNsps2kVvEMs
wDTz9K9/2u9/rk4wAbEBbcS/Pb9pfxribxa5/+a9NLF2z2f5z/KJ7FuMX6xf
juiX5C3cH++YhPmb4ZSsQt0HKbNIMzaHeJ+Ys9ize5L6kXPcuS4nQf7sKM84
yh9dD54+lZhOM3eMBnVzhnuWq6PLlxX/vFZ9qx1+i/aGd9k888WRe+TP1Qy+
493PtrpGMzaO39s7td6t1R6QX+4dXe/qanPJT/ab+G2889foBrMY5GtrB8v4
S9zUd9WMP077d9ZmbD5tv/Fob3rkaZvhg/p9fVe+kzuoO2En+vIMzs9u8LAX
GP+S1L9cHIWwWPMfSPgff782rbbtv/wGVfiN+n7EqMSqLiTt40Z8+p4/A5Rf
UDyA/B+Rf6piO67Vxx/0i+s7U2eWHyG/ZVQze6Jc6le7ub/mPTb9OeqE6oZy
StSnP2pHtz60f8aMR9opRXRIdckfqtwX896Y/s3puvG97liEP6m/5JciPkR9
ieLT3htwz3DvkAMhF8I7BfIz5NzJYxUj07/8bRXbXh+VvioxCbGJ2eRJ9MKx
kGuxYT38C/cA9wI5VuIZcjLlZurDkD/8jDpZM/zOt8rcb7uC+EakDe4mGHeP
cj7av1iU78h3pb3uWal+r+/g2m5sb21w8cuxy/jatbHEbpSPL2KD63+Xoyp+
KY4p///2KnPDOaJt5Zxwbtzfzv00dWp1a+9k6r/1fs55xK/v+ys9v5fuJs28
hwlLkndILfPH88y7mNc043/8hLB2kTNW/rb+T9vyTJELfm2ZuwbaHNoT+nT1
7Y7q86G8Y+pdU+0D+dXeSfVuqniXfFb9nfalT1rftJwXuS/eEfL+x5S9+GJm
5/sN6sU/51rflDrTqBupTzkfCfeKezr/msEMGp3w+X+mvV8Iv3YyD52P/6R1
cp/Ys/F/yL91cufau9feMRL/kdMmt802/+zEL6J/xDtR8rvEZ/5uZA92L5aP
5FzeWZ9dN+NZhfbHdb/vhF+3GnXHc3/t5M6Qd4fkxHm/VP64XEkx/JmID+3m
7rmcY7nHI12zjfiI9d+r73uX1D3Hvcc17dr2jvkHVfA472bOjPw09Wfu5Cya
upn9y2f22eV0eR96JON9tZk7PPLJxXjFesWwtQ/lX2h76ZMRz3mNsE8zNrP2
qPdr5KaIycpj1O/r2eCdEPE29RnvRrgGXAsLES6vZQ16Lrt/eBaMSb3tu7lT
5906z2D1Ud+Hd1/UOb2P733xcxrRKcUUvA++az02mnynTwlPNtKH9+29Xy+2
554pLqiOqa7pmtafoj/Xu3Tiv+LAr3RyN1udR51IXoN7k3Nu8m78sWLf+nD1
5Xo/bFgtZ6g4u/XVp14qcr/7kipzcVAfn9J/9yvyReTfzfv7ifKfN3JHbJ9O
7qR5N03Oovf9fF8X9b+vvyWgvupdYHUi77h4Z867c+7x3h+UT+/vD2zZzJ1V
MV+x3247eLD3EzyLPAM9C68nf6xm5qz+82voc596zhzPHteYa807IZ55o/m/
TDPfwPv62rjautsUuZ/xWBVbvGrn9ybUEdUV9Smpf6vvOBeXkmPSzf1X79+v
Stqk3djs2u7DaO9k4s9SZ/tmbPSnq/g09W3K4dR/+hxpOzTDEdQ+c3/wfF6b
tCmIX0dapxlOt/q7PhT18Q8a+b0J16hrVc6e693fe9AWcA45l/5ZQ+pbjXDg
HyHsUI+OpK70vntsMxxj7ZtPLNPIHUDvu6pjqWup8+mDlV/n3Uv9BXLL3BPc
G9asRV+Sm25ftmFb8le92+cdUO+CiqXIz3i5EX6/v5/hs3in07ud8rPETp6g
zDxVfmPB31pQ55NPKR/rzGZ+0+Ntba9uuA1iGN7/ln8mliGGIJbgfUbPCu/w
epfX+wX27TfVDjiik3v33r+fvI+XiD3I6Zefdn03XOzR7dyf/qvb/22OZs4i
f7PkM/IuLcJX05+i7ueeq29avPCcZjDEPfv245RF3rnvXp+fvj85Zj6PfPDP
i9QRX7R/14J3VOWDOye9F+P9GOdqowxX2N9Y8LcW5KvoW3VOObdco67VWdvh
x6ofHFPPnHRuju7rM+oMzk/XmL6X5ZtZe3Ja5Lb4zvVXeF9R7EdOuNxw+bli
e2J88u7U4dXld2nm9x70een7knPn95T/pi7jb8T4WzHiFcvVMsed61cS/mjk
TvgKZTAVsRUxbP153jf4vZEyV/btB39bQp1R3fHiKvuR+5J8AfHJ3xrh9D7g
/uA7awYzF58RQ1d3HmiGDy8/3rhlLCvPXL65v4nh77/oSxynlTt53s1TP72g
GR1RXdH5oW67BOE/VTitclv9jQh/v0Efi74WOYD+Po76grreScifdOPvVK9W
v9b2eIj2u8088xX97+279bx+AfkJ6uzUjE9Ye0kM2DuVfg+x1+nEbFr55vdW
4YAc0I59oH4nji+eL+dbPrB3GFfr8zG9j6Q/Qr1E/UTfhhi7WPsLRfwn/uaB
d6a8M+rd0fU6+Z0Cff76/sUMxQ4b9eD/VTc2jZiU2JTrx9/oEEO+rQx/U8xI
fVzs2zU3bX8NuBa8f3RWLTq3+Ic+GH0xjxbxT6hT+tsH+uTVNeUj+lsHctCn
KfPOfHdy8OXXiwdrI3rHZrcy9xH9DRg5rfOV8aHKrdXnrW9V/FubQ47eYuZ3
w/3xzNH+8feSvBvqnd9fWnlefzfC34+YsRd//Yn1/OaOv73j7yN5N9g7pd+3
8vss+l7UedR9XLNy2+XM3N3Hf+Wqy5Fdvsx+7m+9+JtH/vaRfdiXfdxXxab0
7oQcG21N/UfOaX1Kj5fxe4mleib4e0nT93J2ydGQq+H+6O/oiCGJJenvGt7v
7/synBa5LXJW5JvIQxEblNPt74eIuYq9emdAf5i/wePacQ3JVxRPcG64Zl27
nnmefXIy1FfuF0NtZQ3rX5DPIndCDpRcKDF9sX05LvKhvO+jf0SOt/xt/ff+
TokcjLH6vkf5K9oI3rf6sIpuoo4i/9E91b3V3/wRj9dnfkyR32bSl6594V29
rYr4fv3NF3/7Rc6d9/NtTy6le4L6rBwiuURyeLyPKV9uMHlTEb7s5n6E3MAf
kateOAdyD/Rx6f+XwyGXQ5tafsmj1Fmzld/0Ub/we+l7Nc280VXucrjmXfty
0pyfztNON3wT7zHJeZD7IAdZ/EgcSX+A9/29T6IPT31OfUquvvabtr54t9wK
71h5l9jfYPK3mNQh/b2MA8n/qxnMz/ue3jfXF3VwEX+OfI3b2nlm74Noz2tb
eQfdu+j6+z17xJDEc/TRaIvN1AxfUn64Z+0k9D9pL/uNv9siR1CuoBwpuVKD
+/4cMTKxMnVW+Wby0bZthwPrXTN1NnU371D5e2RyaMRaxFxcP96h8y6d+J73
CfXnDq1H51T3VGdQd/AOnOeVNre295zN7LfagNqC2lDa8/4elVxdbSJtI++8
efdNjpj31eR8yf2yj3/8n53cxfDOhfcz/D0h7+b4DryfImdS7qSYzaAynAW5
C2LSynLO5Z5P2Iz/Sb7ehkUwKrEq7XO5cv4um/PDNe3ado7K53SOOlfFBL2v
oD/Ltryj8Q15dyHP3MwdN/094pPardoM2g7OR9+FmL3YvfxXv6V1rPt/RIsg
9w==
            "]], Polygon3DBox[CompressedData["
1:eJwl0klIllEYBeCroPb/imFhg9BcmNqigVy4UCttHswsyKCkiQb0pygwQmiS
ttaiFpItWkUFEdiuslLT1GohZVBBA4QUjYZBBT0f/+Jwzznvee977/2+GTsT
1Q2pIYQFkAZrskJoyQjhHPTQb2Mh5MZDaMO/p4fQxK+gS+Vy8C7eYrXDvEKo
wPt5W9SK6D/6M/Er0JQSwi5eN/yjR+VuyD+ie+JJ/psXxoTQS1+EX3peyNbD
ajPf269YptF6nreWtwSK8B/pyXNW6ivi1dFn5Srgc2YID6HcJSfSJfLLZDrx
YTMG6X2wglcG+fgn/WM9znX7NUOX3DNenVoxfVdvvXlT6F6o0rcBHuCz1HaY
dcv6FRL2GedeOVAjc19/Pu+b7DC00yNyMXyrdUBvilxqPPm+nebeVDtEL4Lt
eGcEZzpDl8sW0l/k8ux7m1fAq6Wb7VcNm+lK2C23Bxrse4//EVrMW2i9wF8n
E/Rn42WQR15WS+MPym3DS6P/gM6Um4Mn4IjcgNpcXg3dl578Hwrox96+Vu+0
6HuoTeJdi2Y464eoF0rp8dG58QNy2fonmBHnzea9gr/u20Zv5PfTA3DUjG75
QX6j/XK98SX+eplNkEUXQKvasNxJuQ71OnzUmbJklsNe3lN4Z0aHWlcseafp
vP2wUiZN70z8eUby2/dF/zd/xD69zlsVfXuZ+VCLt6pf5ZfIPIklz/qa/waq
eUNyJ5yrR6ad10jn8SfTCflT0Vxefyz5vQ7QB2GVzHH+HXyqu522x0t6KX8e
76f+Y8405N3/A6lGfCo=
            "]]},
          Annotation[#, "Charting`Private`Tag$21391#1"]& ]],
        Lighting->{{"Ambient", 
           RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
          "Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{0, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 2, 2}]}, {"Directional", 
           RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
           ImageScaled[{2, 0, 2}]}}]}, {}, {}, {}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl01toz3EYx/FnZpvN2DLHFgtZJG6WlMyFQ+R0YaWc19KysTGzsWWzHOIO
00aGJFNTQlGW1AoXs7QytjnOLiSRG9fK65f6/f/P5/N+nuf7fH/f3+83u+zg
luqUiPjhN3lsRKLbUiMqiKn89cyIXOwudga7wRfwV+je8RFb0yIW8z3y97Cl
eor5v3hzVsRTbCPfL99Pr5HfwedmR6SnR4xilfxvsUrPK+s38MPqM8ZElKg/
x+fTg+bVqbnMf5dfgO2Sv8Nn4i/MK8Ye8wutvZluSTj/UO8Meg9Wo2cASxV3
8+fx9IyIt8kcuhRrFd/xZXSRPV3iB/k0PXuxI+IQv9KcnHER5dgwn4Hvo+vF
93yT3lVqKrAP/AGxzVoZ5n1M9q2uGmsUP/GH6CV62tV85rPxw1iT+IUvxPPM
q8VG+LXWrqOb5b/ynXKT6KPJvYujyVmL9fwJ8Y+132Ap9E7sG/+c30RXOaMK
/BH/y/kuw0r5Tj7PnB7nW4i18yPy0+lt8meT56+3yN5asWP8T89zvVyv9Sv4
AfUj2DpsO99H9+kp17OBfyn/BFshv5x/nezZvC5sUbIfdW10iTiLH9XbQZ/G
CtXmYF3WOJW8Y/gz+52IdcudxFZjE/gW+oEzmod7BeO2nmZsLm/JGFJ3y7M5
jhkfN+Ub6DnybiWy/M1X0+g+LRP1cgVy3eZpi2vqa7GZGBQ19BQ9xXpccVU+
+eDy5V1x31+Hxv1YavKdKKqkp+FGxEVDLkiUp/z/Pv8BPOBtCw==
        "]]}, 
      {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwV0LlOQlEQh/FBTbwsbpW1iS9haFx6Ckw0MbihtSYqvoQLlljwGjyAKw+g
vVqprYA7+rvFl//MN2dOzr1T1d3yTiYiVtDMRmTzEbPIoZKLeMOFOhl2oBDR
V//hBg19x05GDmAIg1i1M5NELDrTNZ+TeRSwZnYke/yduuT8Em65d26dG1HX
uVG5oe/gw2yaS2SLf+b25ad+Tx7jBC/8afp+763LMYyjyndRc8eXnXv1Jtpm
59w3t6WfxCt6+OHmzSewgLJv2uav1Nf4Nb9MZ/aXUVM/oM8fyKI3HMozPKX/
jX+U/9YDNFI=
        "]], 
       Line3DBox[{2462, 1351, 1659, 1658, 3231, 3009, 1501, 1503, 691, 939, 
        771, 944, 2196, 692, 2661, 1505, 1675, 1674, 3077, 3140, 3160, 2662, 
        693, 945, 775, 1215, 1214, 2774, 3208, 1611, 1704, 1703, 3129, 2663, 
        3078, 1509, 2398, 1510, 1217, 1218, 694, 946, 778, 2664, 3190, 2560, 
        2463, 2665, 3079, 1512, 1513, 1221, 3161, 2936, 1437, 2935, 1859, 
        2946, 2561, 2945, 3222, 2584, 3018, 1515, 1516}], 
       Line3DBox[{1096, 826, 2696, 825, 3218, 2491, 824, 2695, 823, 2490, 822,
         2694, 3217, 821, 2489, 1089, 1656, 1617, 2488, 1645, 3170, 3048, 
        3047, 2487, 1889, 2615, 2486, 3196, 2614, 2693, 2613, 2485, 2612, 
        2692, 2611, 3183, 2484, 2610, 1884, 2483, 2691, 2779, 3210, 3151, 
        2482, 1376, 2778, 1245, 2481, 820, 3169, 2688, 819, 2480, 817, 2687, 
        816, 2479, 3195, 814, 2685, 813, 975}], 
       Line3DBox[{106, 1165, 1754, 107, 1755, 108, 1756, 109, 1757, 110, 1758,
         111, 2001, 484, 112, 2002, 486, 113, 488, 1759, 114, 490, 1760, 115, 
        1761, 116, 1762, 117, 1763, 118, 2460, 1708, 119, 2286, 1249, 120}], 
       Line3DBox[CompressedData["
1:eJwVzcs2AmAUhuFtJhk0T2ggLgGNyTBGhZHjWga5DgqZ6kYaSOTYWhLznG+k
p8G7vv1+e6//z+4cb1TGIqKIbiJiKxnxgW38T0S05cJkRNLuBWX+jk382c/b
1ZDDs/2l7hdVvo4nXZ3/4AKPfE1/iDx/4AXzAc75Mu51lfGIWX+c8Rk5jY5+
SmZQ06flkbs7/RLf98Yqbvki3zOvoM2r/BunuOFF/S6++Alaup73+njD5+hO
zrlpyWv7pr9ezSUM7BujHldIuRsCfqEvSQ==
        "]], Line3DBox[CompressedData["
1:eJwVzjlOglEYBdDPkVGJygaAbcgCsDKUCKhojYk9mwAcQEZXYu1AgS5BO63Y
gIfi5N77/8l7r9C6qbY3IuKU11TEeSZixAXddERDNikkIn7tsT5lQs/+lF9s
60vZl3d0shE78s2Z9/KbXd7tin81EvYDJ/oZAz3JI7dJdzrvSd+UKTmkqJcY
61vr7l0j/Zi6M9JyQnn9djsjP9w5lT9kWdhV/5rM7D0O9EPyHDH37dL5Lfb1
P1beNLdnPNtX8pqc/iL/AXHwJ4k=
        "]], 
       Line3DBox[{1107, 842, 2790, 718, 3213, 2723, 844, 2726, 719, 2725, 845,
         2727, 3214, 720, 2798, 1261, 2728, 1627, 3113, 3157, 3167, 3066, 
        2576, 2511, 1906, 3122, 2577, 2729, 3199, 2622, 2731, 2578, 2730, 
        2623, 2732, 3135, 3184, 2512, 2624, 1832, 2513, 2733, 2734, 3200, 
        2579, 3094, 1551, 2736, 1110, 2735, 846, 3168, 2738, 721, 2737, 848, 
        2740, 722, 2739, 3201, 851, 2791, 723, 991}], 
       Line3DBox[{2533, 1422, 1669, 1668, 3232, 2532, 1406, 1577, 895, 1135, 
        893, 1012, 2209, 892, 1417, 1416, 1667, 1666, 2531, 3148, 3176, 2762, 
        891, 1134, 889, 1294, 1133, 1414, 2351, 1413, 1693, 1692, 2530, 2765, 
        3033, 1410, 2348, 1411, 1132, 1292, 887, 1131, 886, 2757, 3204, 3147, 
        2529, 2763, 3116, 1638, 2528, 1334, 2440, 1635, 1480, 2527, 1935, 
        2943, 2650, 2526, 3221, 1685, 3099, 1578, 1579}], 
       Line3DBox[CompressedData["
1:eJwVzTs2g1EUBtCjQhgDwgAkCPEegSbSUekoEmag8tZRWcsUvGIAltZC6Dw7
zyCJCWSn2Ou7/3fOvX9yoZgrtETEPP/tEVMdEUWmuUtETMq+zojdtoi6+Yvv
V55J6w9IUTN70D3xSNndHXdyzhNUzcfkOLdmx/KIP33e/SV6uTf71WXN9nyP
yhvdiBzmx+zSuyvOdf25LFHRn8ozavpleWHvWz/knOFaPyjXvTsgv5oz5ywZ
khwyy6fZnP0qabspPnT9ssC2t6/Muu320MW7+YxcZMPOFpu86fdbI1ab/2aN
ExrACDgv
        "]], Line3DBox[CompressedData["
1:eJwN0EsuQ2EYBuCvDLRlIMqg1KULYN5EOqo2MZSSjg2V1l0swayomNoFZQVW
YAHopENNUNdn8OR9v+//T87JyW821xqJiKhynI7YGI1Y54q8OT0WUUtGHOkJ
uzbBAwt2187v9VOW9EW6+upIxJscdqcvn3nhlUIqIuXevLMp86H8o273K3vM
ccCJXZF9/cZzQ3KPM7sneef5WzrMmlv2k/qu/sM3FXPF92Rkw/zFgCY5thl3
viNnuHTvgrr+yYr+IctyWpbkBFv6sn+T9M53/dwuK6vykX87sSu0
        "]], 
       Line3DBox[{429, 961, 258, 1523, 1972, 427, 1526, 259, 2334, 1367, 260, 
        1974, 430, 261, 432, 1975, 262, 434, 1650, 418, 641, 2076, 436, 2465, 
        437, 2077, 642, 438, 1980, 439, 263, 2255, 1161, 264, 1444, 2368, 
        1441, 1613, 1707, 424, 674, 2093, 265, 966, 440}], 
       Line3DBox[CompressedData["
1:eJwVzrsyg1EUhuGlMnKgE3RxJgijyxWIzt9ErSZKkRgzJNfgUCjEIcThRnID
cSEO6Twp3nm/b6299//nD46T6khEJDhPRVynI064jxruMhHtsYhZOS3P8Sk/
mE06Oz/s2BuN2NFzeLSb4jIW7OpYxK4+jSf7Gb5B4l7We0v2V/qzXV2/0DN8
yR2zQ3lZXsGLvsoFHJm/6t/ujss/fM/b6Jr/6mvDf+CKb72ZNeV1swZv8C23
8G434Al39539k4v2H+ZVs025xFv8aVaTG/IXzlBxvod/2tgoEw==
        "]], Line3DBox[CompressedData["
1:eJwVzksuA1AYBeBfQluPoSJmEkad1wAJpSrBhB1IjJpoMCxNSroJMaLswKPq
1S14NLbgVVvwdfDlnHOTe3MntkobOz0RscnzQMTlYMQFLf2Kk6GId3tEH9dX
5LF8lCnnSZ70ajJiXZ/i3k7INfp4sAus6pM09V55TiEVMea9ZWd1+04e2Tk+
7Ib91h+xby+Qt1/ttFxiz9mLPaxn9B93TuWv/KNDhbL/Hchvvjhk0Z0zWeNW
H3Wv6K1PO2ffMOtslxnmun9wNi2zpKkwz3X3/2y72+YfU4EsgQ==
        "]], 
       Line3DBox[{553, 1000, 318, 2100, 681, 554, 2438, 1628, 1449, 2389, 
        1474, 319, 1169, 2259, 320, 661, 2084, 556, 662, 2085, 558, 2517, 559,
         2086, 663, 560, 1634, 561, 321, 2038, 563, 322, 565, 2039, 323, 1565,
         2416, 324, 1563, 568, 2041, 1564, 325, 1005, 570}], 
       Line3DBox[CompressedData["
1:eJwV0Ekyg1EUhuFjEhI2oIqBiSaEdehCQjQjVQbRJia2EIWSURaBaBaB0mxA
E6wBmYYqTwZvved859x7//oH1vfy5Y6IKOAuFXHaHTHJZzzFfT0Rla6IDf0g
rjAtf+G1RETa/Fz9nIz45RmzFh912pF9q5v4wYTdV9mf+ti8Vz9rf0i/iWHs
y7KyL8zhzX5Fdq9+QEP/yE84kL/r687N6y84xzX5iHoLaeRlWT7x5ih/ODPG
C/IbLOJTVjW/VRdwbb6NHWTa92Op/U28zDkexy4O/Z9+b67IL/WrXOQS/gGs
vjBD
        "]]}, 
      {GrayLevel[0.2], 
       Line3DBox[{1053, 758, 1950, 760, 3215, 1951, 773, 1957, 775, 1959, 787,
         1965, 3216, 788, 2074, 1083, 1650, 1528, 2400, 1984, 3194, 2079, 
        1985, 1743, 1884, 1885, 1750, 3173, 1894, 1999, 1895, 2001, 1900, 
        2007, 1901, 3163, 2009, 1905, 1906, 2451, 1673, 2373, 3228, 2372, 
        2439, 1633, 2084, 1332, 2101, 875, 3188, 2043, 876, 2047, 887, 2055, 
        888, 2056, 3207, 900, 2062, 902, 1031}], Line3DBox[CompressedData["
1:eJwVz79KgmEYhvEnilIIqiUqXBzC0sboOCJqNWg0zfwzZhoo2KnYUNRkW9Gk
SzhFa55AFDQV/b7h4rrv53l53+/LnlQPzmYiYh/D+YhBKmI1HXGTGGn5Eins
6PfYkB94DVdyfzGiw23cLkSsm1+b3ckv7hxyxuyRx/ohl+2Pkj2KqOrHPELJ
2VO8yhUuYyKfcw1vcoPreE8yPtB2R5OnuEBdb/GnN7940/lv/tF/uWefM/uT
t317PvlHFLBlvsxdLGFPf8Ku/Mx5zMkrmEUL/5DPKjA=
        "]], 
       Line3DBox[{8, 1153, 2930, 23, 1702, 3129, 38, 2464, 53, 2465, 68, 2472,
         83, 2485, 469, 98, 2498, 485, 113, 504, 2714, 128, 525, 2730, 143, 
        2515, 158, 2517, 173, 2522, 188, 2530, 1691, 203, 2540, 1311, 218}], 
       Line3DBox[{1348, 1347, 2327, 1850, 3159, 2250, 1858, 2252, 1859, 2266, 
        1183, 2254, 3223, 1324, 2075, 1614, 1707, 1706, 2459, 1882, 3182, 
        1989, 812, 972, 823, 1248, 1247, 2082, 3212, 1620, 1710, 1709, 2460, 
        2016, 2407, 1544, 3092, 1545, 1255, 1268, 848, 990, 862, 2030, 3203, 
        1922, 2415, 1683, 2416, 1566, 1567, 882, 2896, 1011, 884, 1014, 895, 
        1595, 1593, 2358, 3227, 1670, 2352, 1606, 1607}], 
       Line3DBox[CompressedData["
1:eJwVzj0vg2EUBuBjKaKjGaWJLhIsBqupBomFNKlBotWlBiS0XejA4quDYOrA
LzDXKiKxql+ARXwOWFyGK/d57ud9Tt7U4spsuSMicrQSEfddEW1umOyMuJXZ
7ohpHszHyYgpfb/zAIOkuNTNuz9hjlPyLDDCjPs+2ZIbdqS9uTJfU9A3dEV5
51ySy9R900OSUeeCXOLF/MY743zywRebVHi0pya37K3KIZ50w96f6Z7Nr/zo
f/k21+U2TXb+/5VdEqx5t84qYxzRtKchM1SpUGPP9xNyX/ZyyDkHXPAHTq8z
Tw==
        "]], Line3DBox[CompressedData["
1:eJwVzC8sxAEYxvH3yjnbbbZz24Uj/MoFm/kzpihM0ZAO7adIjECwKYhswo/N
ZpogM39mgnRJ4QSNKQQUheIjfPc87/O875uki1MLuYiYRb4lYhCPhYgmMj6H
foy3RjzI9mlWjNijv/mIXt0yv4QffsvONTbxre/+v+UHsMF/yLrouh/zbl74
d1mNbsvG7D3zq3QFr7rEfMX34QufeJJX5aN+9JgvcYF7eUU+wjfoHF3zN6V3
urIsdXMoO+MbshJ905/SGTqNW3mbOeOHccJ3uOtEFTf6ouzInx1zCWW041xX
0NX5IbcH/CQ9xgR28QfqjjAR
        "]], 
       Line3DBox[{1426, 1425, 2354, 1942, 3177, 1794, 1843, 2270, 1935, 1788, 
        1457, 1630, 3114, 1278, 1652, 1629, 2438, 2033, 1775, 1713, 3185, 
        2026, 852, 1108, 719, 1259, 1102, 1392, 3028, 1391, 2342, 2005, 1755, 
        1820, 2341, 1385, 3023, 1386, 1094, 1240, 817, 1087, 705, 1983, 3193, 
        1872, 1737, 1678, 2334, 1368, 1369, 696, 2885, 950, 781, 1063, 691, 
        1500, 1353, 1720, 3224, 1801, 2393, 1486, 1487}], 
       Line3DBox[CompressedData["
1:eJwNzj1LgnEUhvEjUr5QkEjQUhBBDlESiB8gP0ENbUa0p4KKizT6CWpvbKgg
qIYaHMyWGgKHBodyamgLgqbqN1xc577P+T88ywf1nVoiIraRSkWUMZWJeExH
zOEBQwyQtCsh7P/kDDbMRazjdzpi0z6h78244x9dUbdq/uYveY2b9kf8KRe4
Ibf5Q17hivsxt7mFN/2SvGUecZ1reNUvyE/o+sY+v+jm+VDe5Wc5z4vu73ko
57hjf8Un/v0Yff2svGeu4sx8480trnFnn9VNzO84NV/wJc6R9eYfab0qRQ==

        "]], 
       Line3DBox[{1146, 747, 2091, 904, 3220, 1796, 741, 2058, 889, 1791, 735,
         2050, 3219, 877, 1785, 1280, 1634, 1402, 1779, 1836, 3202, 2029, 
        2028, 1772, 1832, 1910, 1768, 3164, 1828, 2012, 1902, 1760, 1823, 
        2004, 1896, 3174, 1752, 1817, 1889, 1745, 1814, 2382, 3233, 1682, 
        1696, 1531, 1980, 1084, 1734, 699, 3179, 1970, 789, 1728, 694, 1961, 
        777, 1723, 3189, 689, 2071, 762, 928}], Line3DBox[CompressedData["
1:eJwVzT0vg2EUBuDTxUeCGC0G/QGWDtR3IlpJE01JlxoE76bBJDF0J00NSAz9
AZqYLAwSJCZmMUlMnZB0smlchiv3c+7zPs87trW3upuKiDLN3ojLvogJ+SEn
qfRHZGWLNU6ZsT+TU5wzzYjvrmWbJfsrhnnqiSjIG2bt5njRbciSrinnWeCW
hM2BiHW7xJtf5m9e3dnWP+tHeTe/yTQ1fdu875z5/z8nupy8o8ah3Sc73qzS
8X1DLlJm3O5Hdyxz5jzL/OoG5RGJ85Bc8V6XIvfUOdBfuJuSD+ZHMs5/rkct
ig==
        "]], 
       Line3DBox[{366, 923, 229, 1202, 2654, 368, 1494, 239, 1675, 1504, 250, 
        2671, 414, 261, 433, 2682, 268, 644, 2778, 449, 651, 2783, 468, 1757, 
        499, 2788, 656, 500, 2728, 523, 310, 2941, 1167, 319, 1456, 3058, 
        1455, 1637, 3116, 591, 683, 2800, 351, 1030, 612}], 
       Line3DBox[CompressedData["
1:eJwVzj1LAgAUheEr0YcUQY5OOjT0A4JqSJqK0oYQmiRw6QPKLdqSBqF0asqI
ovobLU62RNEmTQZBDW1S0tTj8HLuOedyudlyZeMgERFF3I1GvI9F3NJ7jKM5
EfEwEpEzT+KQb/GnyYgVfo7OYwsLaOve3PjEuv6ZLspzeNJtyl5kZ3wdr7IG
Lbu7RE+QttORb8t2zRl0+QqdRkn+xX+Y9+zP0KrsW/br9jHfp8vYH/xJe7oq
vUJN/4NV8zXW8Kev0Rs0dEM0jwKC33H/nB65d4FLNDE8+EE3ZS+FNh4xq/sH
5Ncuaw==
        "]], 
       Line3DBox[{382, 933, 232, 2794, 672, 403, 3079, 1511, 1438, 3060, 1464,
         264, 1163, 2939, 273, 647, 1656, 455, 652, 2784, 474, 1762, 509, 
        2789, 657, 510, 2736, 531, 315, 2749, 547, 322, 566, 2754, 333, 1415, 
        1667, 344, 1592, 601, 2768, 1303, 354, 1037, 626}], 
       Line3DBox[CompressedData["
1:eJwV0DEvQwEUhuHDQCUVUwcb6dQfwchSg9sqaSVFWEjaUcLaLjVgqaQpo6SJ
WJnbX4DYymhg6yYxeO7w5v3Od889yb3LB82kMRURCRYyEdNzEfNcQBZ32YhT
3fVsxBVa5j++QEXf4QZvYyJ/eOcXbfmNWzzmV5zLL3zGZfsl1N1LuI1NfM1E
VHUndo7xaT7iwxT9u3kk5+0OuaNbcvMbJfMPJ7zv+Z78LO9yDxvyE4q4Mdfw
mH4Hd7EuP2ANW+Z73nF/lWvuraT/gC+xiIpnt7qc3T4POKf/B6v/LCk=
        "]], Line3DBox[CompressedData["
1:eJwVzr8uQ2EYwOG3CS1hcwW9gc4VJDUSQpoOlUhDG4OlRizoRP1LmhoYDOjO
VZjaS8DQpkZbGUg8Z/jlefOec77zZat7xXoqIkqamYhIT0bcZSIyvOUhL+2n
dK4n3dg/ss0HNjWuX/3p2n6MV/zRmb51qob9F4/Z4D1PeMQhD7g1TfOuf+9z
ZPfBiv0739RPR/TY1YV91js1c45Vtux2zK/mbW6w5rwy17mmeRU0pwUte7bC
Ja6yl9wp+dZZi3af5gIHLKljLnLTu7PJncx5PvNF/wcJLw4=
        "]]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJx0vXlcjd0XNl6kEMqceIRHypBZKNoyU0KokDlzozFzmUrmISQqSiplnotd
NJCpeZ7nORWlQf32Ot/n6n1/Pp/XP/fn7O72vda11rrWtfbpHAPXWxlubCMl
JXW7k5RUW3G1XdpYHd2pgOO69Zj777Q3X9jsmatfDp2WxeV3m2g9T03lTy5O
NM76VMjCro2xVGosYq6FwbllidlsaerFb4MVY5jy6qPSWxcUM91kvSEhJWms
06VDA/tZp7AVynK93Y+VcJnqoO61rxO4rP27HxOfpbLxOwOedlMs5897bNps
6xrFQ5Ptq3nbeFYUfEGuTXM2m9fBe3qbC8/YyegXZjuMSpjCb43noywqmNT/
/tktyPvU2TwmlrX82zFTWtx/s4uCibifK2j9a0f3ew2xfkH7X1zwe43Yn2mt
7ltM+++etKAT2bPQMlNN2MP2VszrMEnYU3KBdyX7+5gbyQn7ubzLqHZk/+VL
PpvJ3yc7O5QKf3nN8qp48jctN2PgMIGPw8f8hmepqezwkw4DCZ/yXda/JDie
ff9DXFl/yze/CE/gCFyB556er5OUd+W3XhdommS7mcSxlUrbFCcvLGR17wLO
PjTPZcq2i/3GLItjNrYH609Vf+O37/5Z9Ph2KD/8R+b1CbcK1jm5p1mP6hL+
v2sKt7UIbFxwJZ41FUm9aQou4Rc+34v+Ex/NfzZHzi7WyWBOioEfPqkXMrt1
++s7Zb9jmQMStAe/y2fKd88feFhc3opz0bxD8zSDEphD+3HP6P5O83UVO2e/
435RmXp0v8WVTSG0/4Rh48PF/uyIy5pxtP+fCcnryJ6nq09tFfawPNk+UgbC
nsP71no4Cvsr1s1eI+xneWUTv5H93mPN+pC/I6UmnxD+8tf2e2+Tv9ax8z8R
LjfUDfPFlb+Mnl9O+Lwva9/+hcBzcOZiV4EnczuqPpLwRF4iT5GfwBG4As+d
bWZPeRT3qfX6XHnpW/37FexSh4fLHO8U8HeH02d79M3h7/elPLzfL5VVF+pU
OlkX81PzlFQ6O2TwH9fSjLybEll9ZqKic0QO97le/XJgp29cddaUOV2/FLGr
8zY3tHtdxOZ2qP01MeIDk9vyXu/bs1wW0MW25cw//wdnb3fF1d3OpbDFmTtr
6P75GWOaxf389aXaJXT/iVt9BtL+Q/bN9RP7s/R1v7Rp/1jXFz/IngHNXfsJ
e9jLMQeXkj1Vu47pk/2q8poGwn62tH/KG7K/qX2K9WPhZ8GKEaOEv3zZ3PAA
8ldh7rtrhE/7was7CHz4spzhXoSP5gSzVMIzvWDfToEnl36wIYbwRJ2j7lHv
yEvkKfITOAJX4Dl57eEw+cY8jmug+mX7P3WJbE+PBXddRuXzR241ezdFZPLz
BhmFN2uz2ZG8wiGbA/3ZhRf25ZsCb7JeoSvmpFVWsvU3LaRtXIrYsdS3LdYu
H1nIjmfb2Ylc1uGOsl3xl9JWnN0Kl3T98jiT7ba3brQW92s8Mmtv4/KRD2q5
uIPuj3fI8Nko9tcPeFEh9uc2Y57Mpf1jtiY9JHtexbtuF/awORPyssiefcOV
w8nuN0XtyX62s7aTxP4iy5wp5G/evvMrhb/s4cG8F+Tvrz2N6x8JfObptWnr
VP2N9a61fk/4hHX+s5jwHBD3tG7LgmJuYarTm/AEb4JHwZ+oc9Q96h15iTxF
fgJH4Ao8bQNn6fQL/cRxNZim/qNjQAUz07t9fMTzNGbcrlpm57+xbHhogdPd
mhK2vWF2m8VtC9mIyIXevR5+Y8d3d23/NiOPzcw4p95mf3ErzsEeAzI7rsr9
+36O++uDDuyi/RP/9ZET+/Pl01+do/3fxo7dQ3ZMVCrWFle2eKNJOdlzX3b4
WbJfaai/h7CfGXlU5ZL9UQGRg8hfFTejCuEvS7soLfE35OL7VYTPnjc7Ngp8
WGxsTBPhs25Dh5ZfAs/Hk48pCzyZmu/6n4Qn+hD6EvoReBM8Cv5EnaPuUe/I
S+Qp8hM4Alfgqf4kMmFL34zWq8+rgPC+eYXszfcHj49My2VJVeMeHZkWy+aZ
TumTEVDI7Nda2Zf2yW/FOe5PTcKVLkVsU/e3j+j+/11jeaRsvuT+hHWHvtK+
b6ysksWVz38b/pH2b9nt1rhD2NNWWvqksIfvqh19huz51+SR/UZh/+PZY9SE
/fzTMn+J/acDpZLI3xGh/grCX3Z58eNZ5O+Kw9pZhM+WC0NfCXzYsoEvZhI+
lzqvsyI8Py27/0Tgye5rRlQRnujr6PPo7+hD6EvoR+BN8Cj4E3WOuke9Iy+R
d8g34Ahcgeeq0S8ubXZMbL0+n+Z7Wm9ZKYsy67zU9llyK84GVyfGaRqUs0Fm
o6/QfVsVDtD9fPplM8n9cf3yn9D+1TrbaH8uJ1ekRPurHPwUQPbE21ZKC3t4
Tp/3cmTPw12yv8h+65gEsp8XVsqZk/1tNS9Xkb8tt06Rv3x0WLrEX9ONY4oJ
HxetYsKHd7GVnkL4nH9+dgDh+c3kPeHJdbe1SPCE3dBN0EtYR59Hf8c6+hL6
EdbBo+BPrKPuUe9YR54iP7EOXIEn1v//1x9/38//vv+//fnf+/9nD//bnv/s
53/b/5+//G9//8OH/43Pf3hy4AndCR0K/QmdBN0EvYS+jj6P/o4+hL6EfgTe
/DufUeeoe9Q78hJ5ivwEjn/ns8aMX5fpflyj8lUk92/QsXxK+7sftaX9udPj
C33+r3zmf+fz0nkBf0Q+8+Mvk8l+PvdgvsT+tvLf68nfoHFXyV+eW9l1Kfmb
tuB3i8hnfnXsOsKHJ6vJ6xM+/E3tBMIzP1Cb8OSfY7ZL8ISOh66HnofuhA6F
/oROgm6CXkJfR59Hf0cfQl9CPwJvgkfBn6hz1D3qHXn5Nz8DR+AKPLeqDIqi
/XGtCMmMpP0PX1naLPiZX9uRupv42XNXmwtkz3eD/KOCn3nbEjVfYT9X/dB2
Htnf6GoUSf6+sq9QIX7Wt9ymRf7WpkXEET7J2uc58XNu4PwxhM/22TWbJXNR
B8vnxM+DAtcWEZ6YizAnYT6Cjoeuh56H7oQOhf6EToJugl5CX0efR39HH0Jf
Qj9CnoFHkW+o87/1xl/3t+YncASuwNN2dMJOsgdXIyfHErLn8dRYO7J/z+GJ
90lvdHOoSyP7N68PJX3FpA2/kb5insNvLyF/N/fW3ED4/O9awqZZjJYmfDwy
h5N+YzHGnxRIb3j2quhEeGLOxNyJeRNzEeYkzEfQ8dD10PPQndCh0J/QSdBN
0Evo6+jz6O/oQ+hL6Efgzb/1M+ocdd9a7//lJfIU+QkcgSvwbHzqJbEfV43Q
k3Zkv0Gj1kzyd2b+BkPSz3MH5oWQv/fGzrQR+pk16BX4CnzYxXzPRMLHwUNu
HOEpJVclJ/Dk5zb8aOgr8MTcjjke8zvmTMydmDcxF2FOwnwEHQ9dDz0P3Qkd
Cv0JnQTdBL2Evo4+j/6OPgSc0Y/Am+BR8CfqHHWPekdeIk+Rn8ARuALP9LXB
G4SfHFf5PZPcyN85p+adJ3yMdEy60Tz4p3SxK+GjH+KfQ3g+yP5hTvOg14gP
yYQnzkFwLoLzEMztmOMxv2POxNyJeRNzEeYkzEfQ8dD10PPQndCh0J/QSdBN
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
7T+e/IUehT6FLoU+g16DToNegX6BboEOgC6AHkD/QD9BHwGPgFfAJ8hX5C/y
FvFDPBFH+AP/4FddxepA8gtXt7lPZ5BfLt3PTDG3KOAe5ZMmGcbm8ekavRP/
eRTDrLp06KWQlMMCVXV0Gsyy2XqN3xmx/+a2vsbPsY7fx37Y5/b8wK597+ez
CZl2T6xls9lanZ6jLWdmsfXvJqQUFxezfg/1bvv4ZLFJZXI1PxZFs3O9DXPP
fc5h+h02/igZmMg0PU+tUh9RyF6M3XP+uFk+03GrtNwgn8VOme++cPZyNgtw
2Tm5x+fod/+7hrybtqu5paWlkrXM/93OcH0ZN+jWMHx/fDy/1PH6YueSWDap
dtyLxbuL+NWfF5dmOqbx9p0TtzyISmd1y/98UOBlfOV3zyZbxzh+fv29vCMT
YlmBl99l5Yll/NRae98m02he1fxL2fhpEos0nrZi0ORi7v1sZuhDtzCua/q8
471KYfeRnqZ1euXs2jWHwavknrCe22cdLjNJZrfss3ud8hN6aWCVxim/V3zT
ALPf31eVs7sPM2TO7ytnQ7U3mPPER2z20YQp5ueTWJzrjOW0zwe/4xpiH254
rciJ9tFW6aXoM0vMQQk+qSYj3/C5iT+WL3lQyB7laJiTPYVhXe4Le9iPix4/
vYU9IT7ysoTDeeUPhAPzL9gowSFq20ZLskfnqX9/YQ9LL9EsIHscxvhLcHDS
uPpH4MCcVZzyCQf3D2PynXqW8ptb1xwdI5XM4qwV/NoOT2R2HbXfnsmKemd8
X4K/jsyV/+GfIT2l93kRx882776JOPKlQ+K0KY4hR95mUNw363FXEXc+9OCM
cor7tm4yARTfOxtkV4n48ulbEg5SfHdVripQFvnTI27Fd5E//K25tx7lzxTn
5AWUZxXdX6iLvGOX8oZ/onyLl7eYT3n4JnXwSPFzlhbc6zOtI/+Qj8jDzVs/
7L3gmccC2ww5PvVDDhs3ttezVaszW1/j51jfdNOxdPDPPJ5sbMjM9mdwXrZq
f2pEDsuv5528vLP595Azj86GZfKLiivH9t6Zz25MDwxc1bGIN5TM6V54IJrn
h5zd9H2y6KeNy0cf6FrM/3dN5qPWj7zvnZPB5LzaDZAPLmMbAw1nvS96xmK+
ptfa3UxlDz7s95g2OZptf3+YKd9/xvZd6qgm9aKCDdv6+B+6v0Vjm764n5sN
05ayF/eHzT07VVeziE3/PtosxjWEn1M7F7JrVx6TGj0unOxZ6Lytg7CHvUh4
tpLsKbBYv5b2/6BuN0vsz3831I6i/ZVbbDXJTubhMUTYyf5dO86d7FSplvam
uetIzPoTxMOdetiGEQ+bbeoWS/j8oye3QuDDvmfGOBE+jv3NThD+VU6b1AX+
vP53H13CH/WM+kZdo/7BB+AB8AX4A7wB3BEH4I84IW6IV9ttOVuCNAv4gV5p
a7Le5fLGYxc9Z71KZHiNn2NdJXHmi1PZhdx9aOP09YmZ/Hi/XSoV+mms2/Yv
XQzf5fOH6dVfHGRz+Y9arwynY6nMuFi5c0mXWG6W/koh6kcwN9DplRs3rYLp
pNTtjT2TybOlZ6nJvIrlKfUfepzuUMLSO/Y1D/5eyk4tCOpw/9Urdsta/kSW
fCa7c/vhggmnctmi8X3r+bsoljVn69rq0kLW+MRmG93/21Ovi7ifh9qEOdH9
S0PD9Q/GF7G5fzzG9ukezl3WW7ax3prLPh9ZMZXs+XTqjLywh+3acCeV7Gn8
VHGJ7LnxI3WgsIf96e3emezRkbV2orisS1E9JuLC9SyNT1Jcrj57bE1zdxtb
jwDqwz/nTQ2huF/6YHuX4rL18OdEERfe9fO2KoqLQv+xs0pFHAN31CWJOPIN
fmGLKI7gX/AxeBh8Df4Gb4PfwffgeeCOOAB/xAlxQ7yCvso3n2+XxXVPeDex
val8gcYRNxvRZ/EaP8f6t7Xn/IKN49jMXXZ3XrIIpqydH7ggopzdyq9PdeoQ
xkzYopc1DiFMK7rm55LpleyJWtiqErUSdvDUmVP78t4y1VG5tx0757Cmbe0k
66Ees06Ldd7vUvkdWm/pqjCX4muW/LtRxJf3XG5vRvHdP/vTeXpux4c/7orn
8vYP9IPpuT/+aAm+DX6n5CbBQWfswf/h0OvbxBGEW96rcsKNhbpfkOCGvoU+
hv6FPoe+h34HPgI/gZfAX+Az8BjyGHmNfEbeow6Q/8AL+AE35DfyHXmupnO/
ao50LmsqjTQ2+pbAju7TeSQt5lq8xs+xHj/uvusk1zyWsDDg+iTXUHbGcugv
lcpC1mZO35u0LlOyitb5bM2vP2l9iVKEDtm/sKjdLmE/m2Z3tCvZP6L3/l9k
j+L8FrKHz46JlNizsW3oVMLnpFephsCH3b89yofw0f2wZgL5q+28vJPwl/Ve
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
RwuGiLiwNM1jyhSXHasM0ikuDVHhy6k/5ZXNcRL9iieUNV6lPmWc+GQE4X73
241OFJeWukk6hD9wBK7A8/2roztFvjHF8Ys2i3xjeq+iF1O+3dhW1EHkOS9f
PqZptMhz58auEyjPe6Qv7BddF8EMHZ/K7noYxg65Wp05XlvBun7tuknkM/+V
YVAs8pn/mLjpNOVzr05N0SL/eZlS2yyR/9xTQ2Yy5f/sR/77Rb0w9mrKV6oX
/4BBknpJjerej3hT70feVsGjfGV+1RXizzerU8fR/ZcnxaSI+7lRdEAT3f/v
oKp82l9lWeBXqq+GF4vVaf8pMkq7qJ9VundzF/2N/XOsbBT1Nb9XWroN7dy5
x/upzcIvJje/fCL5Bf+BB3CAn/Ab/gIX4AR8Uh9kLxc8wnFtKzfHlPhkzqYj
SYJ/+Hlta0fBP9xLJvUg8c/Y4e0tBY/x1RcirxKPyb+Sf0E8lj3gaI17VD5f
80dn+VDtNO5rPVX3WIDQffp+o3qkBvA0tY1T37U4c4U3ej7Eb/1X7+1ZL/qK
/9g5hqLPMLlwrzTqL2Y3dIkP+eqdn7XF/exlyW8JH5q8XXmInms8+PBp8Vxm
M/ODLz33dtrNYur3oXN1I0X/Z3mD+sVS369+M+on6aLzu9PURd7xlyfveVG+
oQ5Rl6hH1BvqD3WH+kS9ok6RN8gj5M9Ah9tKok9wXLUUM1OpX1w5VHtB9Bf+
x2TRXNFf+KT7X3ZRf7HSXXtT9Cnu9FUqbZToU0pbvkr61KhQpaddGz/xve0X
FcQ2hvGLtyYvVkmuYFZpHVYsEfc7+xmliPsZl49oR/cHL8xTJPtlA9ZzYT/r
3uNOD7J/2pj1HfsJf8+MKNwv/OVnZtv8onpEXBFnxBfxQzwRR8Qb8Ufc4Q/8
g1+wG37AfvgJv+Hv4M3fdgsd0HoNcG6MID3w4MM/f0jXsaMGYSLO7MSnkCSK
79r4J/6kA+86fLUUdcPuaO0YR/UCfgRfgifBg+BF8CF4EzwK/kT9gw/AA6hz
1D3qHbwAngA/IO9RB8h/5D3qAPmfvTVHkdYnlOfROh/Rdm86ra8boBEg9AE3
1LeifdjUm50k+/S51tmZ7FG7m6Es7GGDQ1wukz2JX3q2kP2Z28qjqJ9XscSJ
ZP81ndcrCYcekTtuCRxYUI3bOMJhwy7fOsLN9J4x4cb+lfl0mHCr6PL2AOle
1b7bSPfytZp3Jbr3z8njTUJftl7HBlyW6Myj5g2kS9m3f7btJF3qf7FBokvx
Gj/Hus/Tzdfp9YzzK+jnfFlMkWTdy/MR6Vf2u/k67c+X1D+R7P+XTubQyfh9
7Id9cN/fuhr74jl/7c//3v+n2mTS2VwmagPtz7MLcyT74zV+jnX0V/Rb9Fn0
UfRV9FP0XfRh9F/0D/QT9BH0D/QT9BHwJngU/Pkxc28v0vPPhq3PFXqe/7vz
t0TP7xp9NID2nzrPYDzpQZnjan9o/9Nlx0/TXNDGedkGyivXew+OUV659r9n
T/a32RBC9vNtPc5K7H9wR+aB0G1sqsrPXsJf9nBCgzn5O/1i1WyaO670sfWh
fPPcrj+E8g19Dn0P/Q78Dr4Hz4PfwffgefAgeBF8eMK3o4yY+7htkFWAmPt4
9zFfUmnuG9Ci8F7MA8zbwHG5uJ9dquwguX+93HWluMYwJjXgRIXgK2bolKpH
fLX/XupPeu5QvrGQ+Ofx7Ywoem5fi9VuZOfPlaMPkK4/N8vhHtmZsSjPVPAn
e7RvbIPgT5b2rdMk4s8rfUffI3+l7+fvIL4aN6+/xF/oJ+gp6CjoJ+gp6Cj4
A//gF+yGH7AffsJv+GuS6fNVzOGt1+1nnrnSPL7Tqe6UmN9ZG6c1X8T8zurn
HW/SEvN72mm/z2Tnoi8z75B+f5nfcSbZ2VI2aQjNXz4TnjHqOx9mXh1PfQc6
D7oPeg86BroGegb8Dr4Hz4MHwYvgQ/AgeBF8iPxGviPPET/EE3FEnBA3xAtx
RZwRX+ACnICP3Uvf6JEdM1kn78C3lcNz2b7vIQvovMXo27U5Yu5iG5e8my78
ZRnfD04mf3X1ZqvvfhjGy9NWmcbURXD7R7OtSac9tTj/nXB7lWm4gHSLUsrk
04Qb+hz6HvodeB99APwP3kcfAP+jnlHfqGvUP/gAPIB8Rf4ib+En/Ia/8Af+
wS/4DzyAw7ryqQ89vuZyXCd9mb+LzscwD2A+wFwAPQd9B10H3QMdBP0D3dOq
g/7TP+h/6Ifog+hz6Hvod+iL6JPoj+BB8CL4EHwH/gPvgR/Bl+BJ1A/qCXWE
ekP9oe6QH8gX5MncE9mXA4uyOa6dlcKnlZ/LZT8GNY0esDST8bMVIzNKstjd
hJMf48Tcitf4OdaHuj4O3/cinzvNP/OmbH0uj1RuSDW5Kua6rHbeJb3z+RTr
vdalC/P48YDvBlO/JbOoSUkte7OCWC+XDbcGhwayzp23OnZ3FTwzdFzI75JQ
Nm2hTqaxYwSLtHA31ZepbL0Pv4f7r2oVlrmfy+fjlsf6yqws4MabrW17pn1j
eB6ej+d6jD89v7l7FCtrZ/TY9koos+wYWK9yuoLtTJoq53zoMZ937XeW9Ugv
Pu/whZp9BZVsdjefHvEjsli4nf3xBYuT2eQM300fThWxoNUx5dm3hb8Hz0Qu
7hXHtYZY1t9fls9OaqtK/3qWyifMiX7nE/iF+/07+VlhZSmrP6Q3IDE0jg88
fMHl4P0Avi5t1rM+mhWs5d71PebTC/ngSZM1Y/xDuYrh5T7LTfNZ2aCFV6Oq
snjSNJv1C2YG8w1Vdh0SEkqYutr0Db+efOYhEXukZhT68ya5Q/uOjq5kx8dJ
OUQal3HjPzbWkcZfWN3S7z/y+qWwcTrcifZfqzJ0kNifyeYnydD+hu9OvKH9
lR3zl4r92YftajXxYv+zn2/3rBX7L4hdXDe90J+llrhZ0f7tBi+2vDMvn/mX
zXDO+5bAh1j3qAtozmOfTg1d/1P4u0grKU/4y45ZjE0mf4emTOjYInDuMvO7
h8CZj5Qdn004d5sQ/vyiwNlh1cV8gTPrcj2ugXDeoddR/drmVKaR01C5Zmss
95w0P/H81FK2+t3WRxRX/8qkAhFndqhfmBXF998Bn6w/HI1id1Sr/rj3iWOu
YyfUpk4pZ0VJY1c3R2Sxw9UFi5NqM9mYuu/nJnQtYOVBQ9VP12SxsVfvTLs8
J50VnG+IC04paH2Nn2O95FPWYZ/AVC53c9G+Ppbx3H9CVIlleAn7lmy80d4u
hh/3mT3gweVofnKd0tuzJuXsTMlC23jpBD5jWY6yVHoMH/Pn0LCnDmXMbUCS
tU9CPn95s/D4Gc8oflq/4ti4tHy2LMn0KK0/zZ65T6yzZwleu2j9+McQ2bVb
Y1nar+jrVwUe50Kn1REOyD/kI/IQ+dqav//lLeyAXbBn+nO3+Vs6J/E53e78
ujMvm3fZUzKjpXcRg5/wG/7a3Yv8rbDwHbfOXeJ196Q/9/0n69zF15Xsuaza
tHMrcrmpXejV3NAE3mea9rKXXwpY0KKVGfsUE/if4H3qC7Z/5cP8OnZ5plLO
ju1rX6Mo9rkW2OAh9hG8MeQ07XO+z/jd5O/QT+1OCX/5m+gzheRv7XCLR/tE
fdab6s4S9coj1R5WUv60L+EdLIS/z/Uvthf+sm43G3+Rv21UnV+LvGR/9rjN
oDwNPnxU6YHIT9Qh6hL12P3CtS7ydxO5X4+0h+ax8XzNMrU4Xd9S1sXEcaSv
mQOLOqx70rfZnp1U8J48pKWSuXjFn1yuXcCS77Rbv9frK++oOa2EzoGHbNp7
luo/61SbX4IP2O7m41L+ggd+XxvcfE8890FfaXnxXHb8z9B39FzgBfyAG/AC
fsBN+sGx7kHPPvI1wyOWuRul86G71q/6+L601T7YCzu1nv+w8hZxGja+P8WN
cdfhknh11OjgSvnn1/Otpcg7Fvoqxp7yDfwCvgHPgF/AN+CZRFZxXPAL73px
jT3xjXrdg7b5gmfAX+Az8NgDzeADtM/JXdnrxT7sp6qiZJ+Sr+rH6blWToHO
4rms09Br7em5m0ZNVzgk+PGjhQzxJZt+KOMp8eTdkGgD2j8+L2W32J+5dspX
ov0RD8QHcQGvgefAb+A18Bz47czVficEL7Mp38tdiKdXbN7hTs8Fb4JHwZ9e
Fo86iLiwa5m37SkuzmNMDCkuc85eMxf4syGyptUi39nrpTucCP/u0113CBxY
iZIuPZfFtR8rea5iz1t7yM541erXhIOl59RqsrPOZtN54oX1X3XtKF7V00/t
oHgVn3h0kvi96XrKCYE/M44LriSe/+ITokV2yh+QJjvZCfdhEjtXLDkq491s
z4dO3uPuZebAc6saJHmC1/g51i33Ra0Ueci6r0yT2a+YwNo12relPGzns9Fd
5C2r932oL/KWHZCxnkt5uzOxOlTUDwt693iYqCf2uL7pE9UR+B18D57/s+pY
sagX5lQwNpz6p//CxcpUL+gf6CfoI7ADdsEe2AG7YM/PWK8RgsfY7q37egge
Y1GKz3taCR7zH12WTH0r7nKzmeAHPvJpTjn1r1FOwwfTc2O2tjMXz2Un5vyb
S8812lrgLviH67UpkxF9jN/5Vz2R+GfTQ5Mugn9YT98+L4VfLPE5+0N+xVW8
WCLygC2U3j6N6vWdm+VKygd5z4tHaD03+Jom5csIU7NFtL64pI9fwOVo9jS1
usjOLobZfNyYQ32k/x2pxy1pMeyiy8emOOkEpuQXtYR4G6/xc6zvLTsULvoC
HzimTFf0BZ5U+nUi9QW1SdcdRf/j2ceK94t+yLXzhm+kPqg6znyf6Hd89LSO
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
n7NQnXenhb6HqibE7ESHFwVs9cVX3DE6j19ZPH1wJ/1oVm+uLkXfW1VvoDNW
ISmH2yS7NdL9Q0szLtL3+7TM09lJnw8aEx9zjT4f9DrvVYmndzb3fLDsM31u
y3Gu9Uz63Fbf5gmW9D0zPte+Knl5Z7MlgVK6tF6lzuUvtMvi/Tp9/sn2prKz
Zreu0ecBrd6uekLfc2H/cPYr+lxnmPb9Wvpc57/dtveZtjeV723SbTjfLosN
afP9Ot0/fYjJFfp+jJ4zItLo86C+dYMl9wMX4AR8sC+eg/1hB+yCPdgXz8H+
sAN2wR74DzyAA/ACfsANuAAn4IN4ID6IC+KHeCKOiBPihnj9Obvte3pJFmuc
57J7wNJMru4+oJ7e1wjo2lmH/p4sti68hf4+sMtsx/n0d2VOF58YZJRk8fDI
RXtUlmaynb5jqun+7t1zztLfV/kt0Daiv29UtcrXpb+zajsyKFDYyVxGGZ0S
dvLKeW8HkZ2qs5f70N+tPUkIO09/h+g6Y/N02t9fJtqNvifqdP+NW+hzZpfP
vblJOHw93X/c7odh7KmMXbfougje5sn7I/R+2W+5X/b0913nnB9vpL+v3FKp
MYeeu/PA8pv0dzZzPc2n09+pNq99YUl/b8MexCjHNYZxnaIJjyXvA+s1GdD7
v4kXglbS3+fk+H49R3/f+vzeSRu6H7+P/bAPfh/7YR/8PvbDPsAFOAEf4Au8
gTP8Bx7AAX7Cb/iLeCA+iAtwRxyAf7Vs4pZzywt4qJ1LfNz5PGate+eX1vC4
1nggPohLcJN0Fc07O/QO7xR9iT17trI39aPajuu4dlghywrsUH6zZybL22oq
O+dQOttRV7EsoqCYH4p9d7jNjxSeZHbretcJKWzSzqEPPhoWci/lPUPnqKTw
fSoVZ0Zdy2a7bRaaES8dLu+gK3iJT3I4f4x4CXoO+g66DnoO+g66DroEOgX6
5P3uxniy89Aw74/CTl6blpA7W9g512HFAnpf4WZqp010fvJHV3UenZ+8zOgQ
IXiY3TwceEbMyzxg2RM14mHXfRM/0ftqFzUtjGhOL7r4RoPmdNQP6gl11KeF
XaH34zLOVJ+h+X6C3qDRdP+xUNUbteG5POGwdcqhoBzufPRc6JlPWa26GToa
+rl79cMJX9cGs/eda5PCXt5hN7pmdxn8spLd0VfmM+7msUPun19aBQpe1HSI
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
3xDuzQQRUeRP1mYYcRD585JrppA/CQeEcEEID4TwKQivgnAqCA+C8CEIF+Lq
ZUtnzj9w+0dHHPLPhiNTe15y/iE8JsJnIlwmwmMifCbCZSL8I8JDIhwkwg8i
PCHCESJcG8K5IXwbwoUhnBjChyFcGMKJIXwYwhMhfBHCFSE8EcIXIVwRwukg
3A7C6yBcDMLJIHwMwsUgnAzCxyB8CsKrIJwKwo8gPAnCkSD8CMKTIBwJwn0g
HAjCfyDcB8KBIPyHf7hR/8ORIvwowkUinCTCRyKcCMKNILwIwi8gPAPCMaA+
f+r7p35/wmMlfFbCZaW+ceojp/5x6u+lfl/q86V+YOoPpr5gwrsk/EvCvaQ+
T+r7pH7PrUY+c7jfwcob7x1EvyOo83QS+h3Un0/9+tSnT33a1LdN/drUx0t9
vdTPS32z1EdL/bNUJ0p1o1QvSvl7yudTHp/wfAnfl3B9CSeCcCMIL4JwdQln
l/B1CU+B8BUIV4HqKam+kuoqvazcnCxGcbmon6rl8SMWPgw6Mm0h90upL536
1Kk/nXBUCVeV8FSpnpLqK6mukuojqV6S6iQpf0z5ZMojE/4I4ZEQDkmp2E2Z
ool57JGkipHugCb2RnXnhfNbs4HwMgg/g3AzCD+C8CQIR2JArMxYpJNx4iTS
gcoOVyEd6i+lflPqMyV8E8I7IZwTquf4f13daVxOadzAcfu+DyPbIPsyZTeW
XMwgGktMyS6MYYwle5Qy0gcTIzS2sQ+DSZ6oGFuXJYRJhVbDo2hTqIlkbM/1
P5/nNy+8PS/Ofc65zzn33d35ff8838FzHTgjuCN4I/gdeB44HsV1LvwRkZWm
XkyZGBv6KkEVBN3Y+6pZ9n++A94DzgNOBG4EXgTeAf4B7gGOAK4AngD9Mz00
HTTdLx0w/S+dLd0tvS3OCO4I3ggeBz4HLgceBz4HLgcuA04DPgPeAf4B7gH9
Px4ADgBdOp06fTpdOp06fTr9Nj03HTdODW4NXg3+Cx4MDozPAKcb8nfKcfXM
SY5D19xM6+8UXBWcFXwV/BE8EhwSfGq8apxqPGh8aFxoHA1cDTwN/OWPfz/E
rcCxwK/AO8Y/xj3GicCNwIvAL8YzxjGm86f7p/enb6d3p3OfX6VouRzP+6tq
hUtfu8+rTic5nnTadNv02rjtOO747fhBeEI4Qnjr+Ou463g9+D24PXg3+De4
N7gwODH4MHjc+Ny43DjXH//ujQ+CF4ITgruBw4G/gQeBD4ELgQeBD4ELgYOM
i4yH7LbiQinZ/jr9F+eb7dfvFuU9k+3HKcYtxivGHcAhwB/AF8Ybxhmm86f7
p/f/KWei3LdVvdyy1v22VbfNq+R+i9+E54TjhIOPi4+Hj0ePT49Lj+uB84Hv
gZeNn42bjU+NV41TjRONG40XjU+BV4FTgeOM64znjMuA04DPwPNPPA/Fc1D4
AngDOAP4F3gYOBj4DngPOA90HXQe9B24PzhA+D9ZC0Plc1+PqOnRTz7308v6
WZ/7ODu4O3g7+C94MDgwe17WXyfr+bfAQ74/6C1jVrST9eCS4JTgk/SfEfvB
fF9STnO8DpnvS/pSYfpy+b6EJ4UvhStV9dh08Yj1KJ84H/GJxw1ZarnEuD84
QPg/uC04Lvgt+CB4ITgh+Bd4GP85GP/vOOA64Dngv+DB4MAwF4E5CcxHwH/H
g8eBd3fwFtdA9f7sWBlxDoLOfmH5BswPYJ4AcwTwI/AkcCRwB3AI8Adav2tY
21zvyjuwaSlnc79a/dejbLnecRlwGvAZcChwKfAodlU8vlC8g+yhY8U/UB1T
W1vuAd4E/gTuBH4EngSOBP4CHgMOA84C7gLewuUvB88V56J5u8qdxRfZPaG3
5V3gKeAr4CrgU+BV4FTgO+A94Dzga+Bt4GzgMuA04DPgKeAr4CrgJuAo4Cfg
IOAi4CHgJuAo4Ccwp4S5JcwrwXnHfcd7Z24HczyY34EHgQ+BC4EfgSeBI4EH
gQ+BC4H7gAOB/4DLgNOAz4BfgGeAY4BHgE+AS4AXgB+AG4DvgPeA84DjgOuA
54DjgOuA54DXgN+A24DXgN+A24DXgN+A24DXgN+A24CngK+Aq4CngK+Aq4BT
gFuAV4BTgFuAV4D7gAOB/4D7gAOB/4DLgNOAz4C/gMeAw4C/gMeAw4C/gMeA
w4C/gMeAw4CngK+Aq4CngK+Aq4BTgFuAV4BTgFuAV0D/jweAA0D/jweAA0BP
Tl9OV05PTl9OV04vTT9NN43vgPeA84BrgHOAb4A7gEOAP0A3TkdOP44HgQ+B
C4EHgQ+BC4HXgN+A24DXgN+A24CzgLuAt4A7gEOAP4A7gEOAP4A7gEOAP4Aj
gCuAJ4AjgCuAJ4AXgB+AG4BTgFuAV4AjgCuAJ4AjgCuAJ0BXT2dPX0/fTu9O
547TgduB14FDgUuBR4EfgSeBI4FHgE+AS4ALgBOAD4ALgBOAD0D/jweAA0BX
T2dPX09XT2dPX48bgiOCH4LfgeeB44HfgeeB44GLgZOBj4GLgZOBj4GLgZOB
j4GLgZOBj4HXgN+A24DXgN+A24DXgN+A24DXgN+A24CbgKOAn4CbgKOAn4B3
gH+Ae4AvgDeAM4AvgDeAM4AvgDeAM0BnTndOb858L+Z9MeeLeTnMz2FuDn0y
vTKdMk4BbgFeAR4BPgEuAX4BngGOAS4ATgA+AE4BbgFeAU4BbgFeAe4ADgH+
AL4A3gDOAI4ArgCeAI4ArgCeAB4BPgEuAV4AfgBuAL4A3gDOAI4ArgCeAL03
/TfdN44DrgOeA14AfgBuAB04XTg9OB04XTg9OL0f/R/dH30dvR2dHZ0b3Ru9
G50b3Ru9G90gHSH9IN0gHSH9IL0u/S7dLr0u/S7dLn4BngGOAX4BngGOAZ0k
3SS9JJ0k3SS9JL06/TrdOn0jvSOdI/0wPTEdMd0jHST9I340njSONE4ubi5e
Ln4oniiOKB0pXSk9KQ4jLiMeIx4iPiIuIs4g7iDeIA4ILggeCP4FHgYOBl0l
nSV9Jb0u/S7dLnPjPn4eiR6JPokuiflVzLNijhU9PH08XTw9PH08XTzzt5jH
xRyubSM2fthzNlY7PlsfFOoQo46s22YrvT9zuZjTxXwuen76frp+un06fvp9
5gsyb5A5gzgCuAJ4AjgCuAJ4AvgFeAY4BvgIeAk4Ccz3Yt4Xc77o6uns6evp
8+n16fTp8+n16fTp/On+6f3xBfAGcAbwBfAGcAbwBfAGcAbou+i96Lzou+i9
6Lzo5Onm6eXp1enR6dDp1enX6dZxPXA+8D2Y/8c8QOYA4izgLuAt4BTgFuAV
4KHgo+Ci4AjgCuAJ0IHThdOD03XTedN34wLgBOAD4MjgyuDJ0EfRS9FJ0b3T
wdO/487g0ODP4M7g0ODP4MjgyuDJ4Lngu+C64Lngu+C64Lngu+C64JLglOCT
4JLglOCT4CzgLuAt0EHRRdFD4QXgB+AG4JjgmuCZ4JjgmuCZ4Obg6ODn4E3g
T+BO4EfgSeBI4BrgHOAb0InRjdGL0dvT39Pd41ngW+Ba4BHgE+AS4B3gH+Ae
4B3gH+AeMNeWObfMt6WX+/i5Sno5+jm6OfyIj69f/Ag8CRwJvB78Htwe/As8
DBwM/As8DBwMej/6P7o/vAD8ANwAvAD8ANwAOny6fHp8/CM8JBwk/CM8JBwk
vB78Htwe5ikyX5G5iswzZr4xc43pPOk+6T0jnQdvlXnDY8PCY+V53cpNfTvL
87r0e/R8dHz0e/R8dHy4BjgH+Ab0lvSXdJd0j3SQ9I/MEWGuCPNE6MbpyOnH
cZlxmvGZ6ejo6ujp6OXo5+jm6OXo5+jmdm5I7ib9fFKrldLTqwNBC62Oni6O
To4+DvcBBwL/IbyXR0WZ6xkfeVXmfCqPuQOt+Z50sHSx9LB0sHSx9LDM3WQO
J/M3mWvCnBPmm+DO4NDgz9CR0pXSk1Y48UxcA90v7/R34hycfV3V8g3oM+k1
6TTpM+k16TTpM+k16TT7Lr603yYjU7snP1w+PvCxVu/d/AYHxCu6SjpL+kq6
SjpL+kr6cHpxOnHmjzKPlDmkQ34ssP/J/L3sMdbF1vy9rE5HN1gl32O3rbc9
37A4U78fattz26k0NX+6z0zp9Jlry5xb5tvS09LX0tXSvdPB078PmBkdIM9X
7NpoW9qlbpput2yG9Zww/Tw9PR09HgE+AS4BLgBOAD4ALgBOAD7A8GFRwRFZ
abrToM+uynMgF4c33y/PgTB/mnnUzKGmq6SzpK+kq6SzpK/EO8A/wD2IPpQU
Is+zbTrj5yq/k1+0Gfqr/E6OU4BbgFfAvF7m9zK3l76d3p3Ona6ezp6+fuzL
kA69h6erm+HJ9kE7E/XaVrqHuAf08/T0dPR08nTz9PJ08nTz9PK4ADgB+AD4
AngDOAP4AngDOAN4AfgBuAH4L3gwODD4L3gwODDMs2e+PXPtmR/PPHnmyOOz
4LXgtOCz4LXgtOCz4LXgtDCXnTntzGfHPcFBwT+hB6YPpgvGEcAVwBNYW3pk
L/m96O2nb2PkdxjPrsXh8jsMXTedN3037gAOAf4Angu+C64LThZuFl4WPTN9
M10zPTx9PF38rbD3lcznr2pfFCudmpreZ5fVqTG/mXnOzHHGW8FfwV3BW8Ff
wV3BW8FfwV3JfRO3VO7/dW4HWh1rixWjrfs/87OZp80cbbwS/BLcEtwrHCz8
KxwEXAQ8BDp5unl6eVwhnCF8IdwHHAj8B7p6Onv6ehwfXB88HxwfXB88Hxwf
XB88H7we/B7cHvwdPB4cHlwYnBh8mAe3D0tXpbyDv3SQrupD3l2rq8I/wkPC
QcLlwenB58HlwenB58G1wbnBtwmr3bavvI9n2qwfI53s0wVR++V9dPIJvye/
N96slnDa4/YDffj4kGbyeyM9P30/Xf8D+8IEcRm2XC//UlylaZtUglx3OCy4
LHgsOCy4LHgsG5OvVZD/I/SNKRcp/98c6DPwe/k/An07vTudO307vTud+4fg
3SWDi/5XP/82tPdve++pp97HzkyrmK3qLwrqlLT/oQqck7ff/VySdnEdc0o6
/ePdNwVf8MtVk2+UzF1sc0efyh7i3H9Vqgpf/ih4XnGuau41c5rnyQQ9pN/M
HUF9E9Umn6kHpVc/YPdjBen1XyxwGiTd+tlhUWOlV09v0tpPen3Xhn9NkW59
wKLNrlk5uWpN4ZsGX/vd1eW6t/u97v7/OkH1cSdYopPbVbnPnMwrUU/O/16r
p9aQ87+gzPuK9bJT1I6Igqw03yc67F0N38Xxyer06GWlVw5LVRdfVivwOpaj
XVo72PQ5ek/93MTliwvrUtTCGrOdx0U90bMut3ItWT5ZuRaXkOdeVKWuMSPk
uZelU2ZZz720nz/Y6gIej5osXYA+06O31QVMsI9vJM9B5ay4PEWeX32/ZLz1
HFSXHZekB9HrN+bKc/vavUstqwe58FvJQ/J9oNGuc9Hm+4C2Cf/koHwfyJl6
pbd0dqsf3Ovm6f1ITx6/9i/p7No0vOMofZnt/SMHvvK8px/b3zspfVmh8/OM
1oduqrrO56W3UpOzYq3eqnbE0OnubvGqTdvn0meplG4trD5redbZ72V54IY/
rW7ri3MPE2R56X3tpNtS0/O9rG5rZECQtZ7IWSUzpedauOqwtf5/W2RYy4/b
HJL169De46z1b2242lp/s6N2A8fLPNqOw47Kdsb8MSxCtjO5Xv/Bsnzzmaq/
Sx+Xv7nj/8jyq6PWdZN5xkkRpfpIV1jF62CM7K//d6n20vE5XM+MdgtN0Vdv
h46Qji/YqUGNvz9JUBUe2Qw7dPmhGhx4qpP0Wbf+GjsvcMcVNbR8dKR0cD1f
VXotHZz3/OgZsrxvYE1tlusuGwZYyyefejtXurmYE87SzenCuP5WN9c9PK6D
eV2VMrFdlLzutfTFI+V19z3vLtujflz+lWyPinA57yrLy0y4W0t6sV12AwfJ
9uRsK99NtifndOakFudydbb91l6J15J04rXCB/WGJKiX+yqktmiVpTr+O7Tt
pqRHOjOuoF3XmXeUrdcPCxrWeKK7rbnwbPRnqdrVv/6jbtNSVejIU3Yd2v+t
ty+t8trbfP6uuJWxqVKnJ6pjpeYr0o/HaMfb5ZsUtjXfux13DnuakqE6fZhQ
yis7Xtc6N6L8nBLpqsvBJhWbZWSrpH6+V/z+idd+dQtLVDPn3cNyd71+fZmt
7Ffe95f1xOZdb2zWo112TLTWkzd1aFoJ1yj9qH6I7bVtOfrzZWWqFK1KV0cb
OwSvX5OoR0556la5VppqOqzn1513mvvDuM6OTm9DtE18SJU/867oaU86lDzi
+VzN3tf5vFmu7i8LW2CWq9kt+789bJavX/T4srt9koqa23txDy/zvdgrcsCO
ttlqexn/dPO66vmgT1uZ11WTpiSWldc9czLK12ynCs76xtrfXzu4Wds5evnb
S2a/VFLO2pJmv1Slafes/erWb28ZcxxU85gFchz0Z2X3VpDjcNrOR/ZXdSn1
qaxH+/vVs9YTNG3bInP81dHzyfnm+KvqLh7Jcvwv+15MNu+X/t33RjvzfqkJ
J4us9yugYoG8v8pZbZH3V436TFvv7zvHYdXcXlxRe9PCumwKDtE1Hq5csdfs
7y8X/mx5wGx3QaftW9ea1/eJ2lXcPzVDVdowy1o+8tUrWa7/KfnIWp5xJd/G
zZwH63ZrnzZmuy4/+cOurNmeqKJp5dZkpqmkZaf8Ewri1e5a4Y/rF2Wrnj1j
y5rles8/PdeY5brY/6i1fHrTxi0dG6WqgO9Pxi+p90RX9BkS1bFfqqpxa5m8
rk64MnKXbE9uM3frdf122lnLO/90XJbrSZMPWssHJvbxNPulHxxps3VjcIha
8tzTW/bLv/3O7Ji2WXrj/G/7Pah1U6XX3Rh2r1SGmn51+xI5n+2cdKYcz8Ol
/VLleO6Z4Nba1byvd9Met50yKkrn9xr4jZd/ukoePv32a3OddGg4q09Dc1z3
P4493tQczxnvkqrJcXhd5eIKcxz0njPnOshxmOOS9M3WmmlqU7BDZM81iSpn
wdHzW8x5GFfO5ZlD6ZvavaYa0LK9ua80C7u4z2xP7bAA30nmemjWq0PfInN9
FHePdq9rzofHTRxz5DxftH6WnOcqdHt8ZTnfPn/qLtuj8oqWyPbolAHbre3x
/TtE1qPv/TH/S7MeVd/L0VrPnS31fpProtSouNHmutAxsUuHyHXRvX6rQrM9
6lD1NBezPSqraq1Q2Z77xwY6m+3Xc/ZM+NNsv1b7l1+U7V/okV/D7K+q89vT
lfK+D//xk5ayv8Prz5wn52fEm5RiuT+cTSifJsczaNJXn5vjqX8q07yhOZ6q
RVfvoXI8r9luk+OsF63LsZXjXPOlp3Wct/Y9lWjeL9UmxGaeeb905i8LL8v7
VXuOk/LMN9+fhn9+aaL9RRXW4KDXDId09cOOUrJ+9XhM4+ay/rLeg631j5td
fNjsr0os6T5e7gNTPY4Mkv094BiQKtfv+MRRcv3qv7+sWE6O56V/AgcsNutN
LHNi86L8HL11pFvGTLP+r/NqpsjxCenz3lXer/c1863jcy5qd5zcT1Ye6VtZ
7hvV08+XkPvJu9lJSXK+jX2TPUq2/0HEyCjZ/j2/3los113PmINNzHWnfp5U
3jo/530R3VnuP/P3N1kk96VLdqes+8+tLt9X6GPOkzHpTfvL+xLZOOGCvO7B
lZHV5TzvGtk92Jzn+s3cF9b12/SDV5Yct+HNg8bJeZ776sQJed1JbysuefHv
Iz3zTsGAic5Z6genuMtVy99W7j2GvQs094u3wQs9W5r7x5jt58p1N/eNTxp9
O7coJEk3WPhDQKlG5u/gq0nh7c39/JfqvinyudCjmpbPBbX8elh7uc94Flr3
Gd0rZ5N1n1lWJ9K6z9yImGqdnz1aW+enujNxh3V+Hlp63WO0c5Ze2OpEQLHZ
rl9mbkiuZ7anw3dnXOR8a9Kk/km5Xnak5EbK+dZ79bfWdZf+xLru9OGbt6z1
vIvNsO5vb/x3WJ9fYXEvrNe9Ft3d0+yv2rnmcH/Z31Xa4Yrs77y2RdZxCGv8
tRwHfTuornUcUuyG+/T0SlM2d8sOXW+fpLcFNE3+2dzn/w+tlkHD
     "]], {}},
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{365.5348412540161, 285.17926231359235`},
  ImageSizeRaw->Automatic,
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "RotationControl" -> 
    "Globe"},
  PlotRange->{Full, Full, All},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.2840806321007596`, -2.3621078254663597`, 2.0546492525816396`},
  ViewVertical->{-0.2900051190357428, 0.5334737897097089, 
   0.7945456227466274}]], "Output",
 CellChangeTimes->{3.8417784288821287`*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"874f1362-b53c-4e19-a745-cc5cc70d0df8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:5217\:8868", "Chapter",
 CellChangeTimes->{
  3.841778447611126*^9},ExpressionUUID->"fca228aa-822f-4e42-88dc-\
a9783f96dde3"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8417784205210834`*^9, 
  3.841778420536275*^9}},ExpressionUUID->"503dd0bf-9ce2-4371-833c-\
85180260b6c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"i", "^", "2"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", " ", "1", ",", " ", "5"}], "}"}]}], "]"}], 
  RowBox[{"(*", "\:5217\:8868\:751f\:6210\:5f0f", " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.8417784575310116`*^9, 
  3.841778522755492*^9}},ExpressionUUID->"ca24fbd2-1f64-4710-97af-\
2659cbc96c27"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "9", ",", "16", ",", "25"}], "}"}]], "Output",
 CellChangeTimes->{{3.841778478930994*^9, 3.8417784872209826`*^9}},
 CellLabel->"Out[35]=",ExpressionUUID->"78fe9641-0b6d-4e09-bab3-d149c14c536c"]
}, Open  ]],

Cell["\<\
\:7b26\:53f7%\:8868\:793a\:4e0a\:4e00\:6b21\:8ba1\:7b97\:6216\:4e0a\:4e00\
\:4e2a\:8f93\:51fa\:5355\:5143.\:8bf7\:6ce8\:610f\:662f\:88ab\:6267\:884c\
\:8fc7\:7684\:4e0a\:4e00\:6b21\:8ba1\:7b97\:ff0c\:4e0d\:4e00
\:5b9a\:662f\:7d27\:6328\:7740\:65b0\:8ba1\:7b97\:7684\:4e0a\:4e00\:4e2a\:8ba1\
\:7b97\
\>", "Text",
 CellChangeTimes->{{3.8417785551722775`*^9, 
  3.841778558222093*^9}},ExpressionUUID->"a38c2325-bc39-472f-a0ce-\
430a2977d5ed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Total", "[", "%", "]"}], "\n"}]], "Input",
 CellChangeTimes->{{3.8417785648020353`*^9, 3.8417785648020353`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"91d7d53e-c8b1-4d4d-bcfd-d947613ac8bb"],

Cell[BoxData["55"], "Output",
 CellChangeTimes->{3.841778565522262*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"a30bba18-275e-4255-8d9b-7c86deba4c2f"]
}, Open  ]],

Cell["\<\
\:5728Wolfram\:8bed\:4e00 \:8a00\:4e2d\:4e5f\:6709Sum\:6307\:4ee4\:ff0c\:4f46\
\:7528\:4e8e\:6570\:5b66\:6c42\:548c\:8fd0\:7b97\:ff0c\:9700\:8981\:63d0\:4f9b\
\:53c2\:6570\:4f5c\:4e3a\:7d22\:5f13I.\:5982\:679c\:50cf\:4e0a\:4e00\:4e2a\
\:4f8b\:5b50\:4e00\:6837\:ff0c\:6570\:503c\:5217\:8868\:5df2\:7ecf\:5b58\:5728\
\:ff0c\:90a3\:4e48\:5e94\:8be5\:7528Total\:6307\:4ee4\:6765\:6c42\:5b83\:4eec\
\:7684\:548c.\
\>", "Text",
 CellChangeTimes->{{3.8417785841970863`*^9, 
  3.84177860825205*^9}},ExpressionUUID->"07e37630-c40c-4685-9322-\
92125c00223a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ListPlot", "[", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"i", "^", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "5"}], "}"}]}], "]"}], "]"}], 
  "\n"}]], "Input",
 CellChangeTimes->{{3.8417786100822697`*^9, 3.84177863963216*^9}},
 CellLabel->"In[38]:=",ExpressionUUID->"12333058-540f-436c-beda-18fbddbd7925"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 1.}, {2., 4.}, {3., 9.}, {4., 16.}, {5., 25.}}]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 5.}, {0, 25.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8417786207919807`*^9, 3.8417786416820784`*^9}},
 CellLabel->"Out[38]=",ExpressionUUID->"f79f75e8-1055-4250-ae0a-ed3ca11c6dcd"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"matl", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"3", ",", "5", ",", "7"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "6", ",", "8"}], "}"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   ",", "\:5b83\:662f\:7531\:4e09\:4e2a\:5b50\:5217\:8868\:7ec4\:6210\:7684\
\:5217\:8868", "\:ff0c", 
    RowBox[{
    "\:5728\:8bed\:53e5\:672b\:5c3e\:52a0\:4e0a\:5206\:53f7\:6291\:5236\:8f93\
\:51fa", "."}]}], "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8417789280923533`*^9, 
  3.841778947522191*^9}},ExpressionUUID->"b87b5ff7-01d8-4a55-96d2-\
1c9eb7c9e7da"],

Cell["\:5728MATHEMATICA \
\:4e2d\:ff0c\:5217\:8868\:4e8e\:5176\:5b50\:5217\:8868\:7ec4\:6210\:7684\:4e8c\
\:7ef4\:5217\:8868\:88ab\:8ba4\:4e3a\:662f\:77e9\:9635", "Text",
 CellChangeTimes->{{3.841778970241995*^9, 
  3.8417790109595337`*^9}},ExpressionUUID->"ff5b3fb6-a7b1-4d84-8907-\
dfc8a497c374"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Det", "[", "matl", "]"}], "\n"}]], "Input",
 CellChangeTimes->{{3.8417789598619013`*^9, 3.8417789598619013`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"93b11a7e-8aad-46dc-83ba-e0772905301a"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.841778962361975*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"7cd7997d-5b7c-47fa-9f9d-94a623aab32c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\:79ef\:5206", "Chapter",
 CellChangeTimes->{{3.8417786584560585`*^9, 
  3.841778662821918*^9}},ExpressionUUID->"e1321e6f-a20e-40f2-aa43-\
f9b07f520e87"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"lntegrate", "[", 
   RowBox[{
    RowBox[{"Sin", "[", "x", "]"}], ",", "x"}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{"\:8ba1\:7b97sin", 
    RowBox[{"(", "x", ")"}], 
    RowBox[{"\:5173\:4e8ex\:7684\:4e0d\:5b9a\:79ef\:5206", "."}]}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.841778682222121*^9, 3.841778705232052*^9}, {
  3.8417788427248755`*^9, 3.8417788443857813`*^9}},
 CellLabel->"In[41]:=",ExpressionUUID->"59f6c4d5-6688-4667-b632-452c91b8424b"],

Cell[BoxData[
 RowBox[{"lntegrate", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", "x"}], "]"}]], "Output",
 CellChangeTimes->{3.8417786892535443`*^9, 3.8417788462043824`*^9},
 CellLabel->"Out[41]=",ExpressionUUID->"99f4d594-43d1-47b3-b5af-8b097af54a99"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = " integral of sin(x", Typeset`newq$$ = 
   " integral of sin(x", Typeset`chosen$$ = "Integrate[Sin[x], x]", 
   Typeset`open$$ = False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {2., 9.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {2., 9.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 " integral of sin(x", 
                  Defer[
                   Integrate[
                    Sin[Global`x], Global`x]], "Fast parse"]; 
                Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 RowBox[{"Integrate", "[", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], ",", " ", "x"}], "]"}],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 RowBox[{"Integrate", "[", 
                  RowBox[{
                   RowBox[{"Sin", "[", "x", "]"}], ",", " ", "x"}], "]"}],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", "x"}], "]"}]], 
                   "Input"], All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    " integral of sin(x", 
                    Defer[
                    Integrate[
                    Sin[Global`x], Global`x]], "Fast parse"]; 
                    Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", "x"}], "]"}],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", "x"}], "]"}],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    RowBox[{"Integrate", "[", 
                    RowBox[{
                    RowBox[{"Sin", "[", "x", "]"}], ",", " ", "x"}], "]"}]], 
                    "Input"], All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"5fca315c-b6d2-4006-85a9-18fd71ae3c4a"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Cos", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.8417788818870745`*^9},
 CellLabel->"Out[42]=",ExpressionUUID->"640e6f00-d746-4e99-87ab-520ae956cd22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "life expectancy in the US", 
   Typeset`opts$$ = {
   AppearanceElements -> {
     "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
    Asynchronous -> All, 
    InputAssumptions -> {
     "{\"C\", \"life expectancy\"} -> {\"CountryProperty\"}"}, 
    Method -> {
     "ExtrusionChosen" -> {
       "History:LifeExpectancy:CountryData", "Life expectancy history", 1, 1, 
        "Content"}, "ExtrusionOpen" -> True, 
      "Formats" -> {"cell", "minput", "moutput", "msound", "dataformats"}}}, 
   Typeset`elements$$ = {
   "Extrusion", "Warnings", "Assumptions", "Pods", "Unsuccessful"}, 
   Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input interpretation", "scanner" -> "Identity", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Entity[\"Country\", \"UnitedStates\"][EntityProperty[\"Country\", \
\"LifeExpectancy\"]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              TagBox[
               GridBox[{{
                  PaneBox[
                   StyleBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TagBox[
                    TagBox["\"United States\"", 
                    Global`TagBoxWrapper[
                    "Entity" -> {CountryData, "UnitedStates"}]], Identity], {
                    LineIndent -> 0, LineSpacing -> {0.9, 0, 1.5}}], 
                    "\"life expectancy\""}}, GridBoxBackground -> {"Columns" -> {
                    GrayLevel[0.949], None}, "Rows" -> {{None}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    ColumnsEqual -> False, RowsEqual -> False, 
                    GridBoxDividers -> {"Columns" -> {
                    GrayLevel[0.84], 
                    GrayLevel[0.84], 
                    GrayLevel[0.84]}, "Rows" -> {{
                    GrayLevel[0.84]}}, 
                    "RowsIndexed" -> {
                    1 -> GrayLevel[0.84], -1 -> GrayLevel[0.84]}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {1, 1, 1}, "Rows" -> {{0.3}}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AllowScriptLevelChange -> False, BaselinePosition -> 1], 
                    Global`TagBoxWrapper["Separator" -> " | "]], 
                    LineSpacing -> {1, 0, 1.5}, LineIndent -> 0], 
                   BaselinePosition -> Center]}}, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                ColumnsEqual -> False, RowsEqual -> False, 
                GridBoxSpacings -> {"Columns" -> {{
                    AbsoluteThickness[-1]}}, "Rows" -> {{0}}}, 
                AllowScriptLevelChange -> False], 
               Global`TagBoxWrapper["Separator" -> " | "]], TraditionalForm], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Result", "scanner" -> "Data", "id" -> "Result", 
     "position" -> "200", "error" -> "false", "numsubpods" -> "1", "primary" -> 
     "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"CIAFactbook"}], "\n  "}], 
       XMLElement["minput", {}, {"Quantity[80.1, \"Years\"]"}], 
       XMLElement["moutput", {}, {"Quantity[80.1, \"Years\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TemplateBox[{
               StyleBox[
                TagBox[
                 TagBox[
                  TagBox[
                   RowBox[{
                    TagBox["80.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "80.1", "SRString" -> "80.1"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                 SyntaxForm -> Dot], 
                LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 0, 
                ZeroWidthTimes -> False], "\"  \"", 
               StyleBox[
                RowBox[{"\"(\"", "\[NoBreak]", 
                  TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["46", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"46", "\"th\""}]]]}, 
                   "RowDefault"], "\[NoBreak]", "\")\""}], {
                FontFamily -> "Verdana", FontSize -> 10, 
                 GrayLevel[0.5], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                 LineIndent -> 0}]}, "RowDefault"], LineIndent -> 0], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Life expectancy history", "scanner" -> "Data", "id" -> 
     "History:LifeExpectancy:CountryData", "position" -> "300", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"CIAFactbook"}], "\n  "}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                GraphicsComplexBox[CompressedData["
1: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
GlyoLe7/3f/0+flf6t0aOA==
                 "], {{{}, {
                    EdgeForm[], 
                    Directive[
                    Opacity[0.05], 
                    Hue[0.67, 0.6, 0.6]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl13fcz+UXx/FbCGkIRaSSCikkZEdKKhqi0rBFys4sklVGVqKyklVpp62h
iSi0aS9pifb69Xu+9cd5nPN+nXN9Pt/7c13Xua67crf+7frtVVBQUIhtKfKf
31zkv7iO+GXWnbWSmB2NdyhcUDCcP9jAu/lf+Ar8z/I15c4X36J+KD6fPgHv
TRehP2fF5V/CjsJeYsuw19R1w5qIy4ubqjlN7hRxT/GX4sUZJ/8NdrPa9vww
7CDsZ3aI+Cd8ttoh9Dz52vSLrAr2IluKr8e7Ypfzk4xpjD3Cl6Ob8Keq+4LN
UrOb1WK96Bf4GmqPFDdS+wI/X/0SbB3dRb6R+GBxY7yl/Od5L7YDmym/i92M
XY3djtWk17DK2Bp2J74W74zNYD+yWfhg/Db8+PxuujD9GSvmPc9j6/lO8tfz
x4aLjxMfofb5fDvsVayT2lPoz/L3YF9j07GdbCY2CLs1Y+n+/CzPOAN7kj+a
PpPvqe5McV/xXnKfsr3FzxlTPbFcDfpwdc+xO7BXsMvkp7Ef8rfhA/G5qaU3
qe+Xb8S3xo8SnyHuoa4Q/QkrSj+r9jDsWbYIe1ndpVgL+tN8Q2w7dhN2Pj/U
mLLYXVkbWVv893JP88fLt+OnGzdAbg59bNZ7NgH9MSsi/wxZCXuGLcReUncJ
1lB8kLiRmuZyLcQ9xJ/kb868yH+FTVVbRryblcO/y3dQ05++Rb46vZodiq1m
C/AX8YuxnvyNxjTAHs7fQjfkT1b3MZui5ltWjXWjn06stqK4odqn+Xnq52Mv
0B3lTxKXETfAm8l/lHnCvsQmy3/DbsLSGGZjVemu9L+pxQob9xR2mdwYcVXs
fr5ovh9fQV2DzHfq8n75NfRFxjSlP8z8YV9k/2E72FSsL3Yzdgz9JDsEe5Ld
jj+PX4jdyL5mU/Cr8Fn40XRffob3nY49wVehW/Nd0mOyhumr+P/l/Wr2Ej9h
3DGZ48wBXV7uCXYb9hx2gfwNrDS9K/tazXb6OLnzxJPV3sJfKTcTO0ruquwn
rFX6hPh0cWd1/7APsEL04+rK0Y+zW7Fn1XVI70tN1ln6JDYRa8cPMeZAbAX/
Y9Yc/5XcU3wN+XP5Scb1kZtBV5HrRP/NtqW5yz/GHUw/xuZiz6hrj9UXlxaf
lD4o11zcXbwt+4tfnT6DTVB7Hn81VgrbycqmL2dO1F5BT5c/kn6UHYQ9yubg
q3MmYD34G4yphz2Uv4muzzdKj8qazhnAb806Tl+hxxt3gPiHrFm5LzIn8r3p
afKV6VWsLLYq84E/nX2NjWOfs4l4L/wm/IisW/ovthX7F3sEOzrrWlzNO8pk
P/Anpbfwj2QN8rPVPJW5V19XXEpcD28o/z57Kn0KGyv/GZuAXY5NxQ6nL6X/
TC32P+xhbJ3xl4qv44/Kusx+E5dW9zC7Ob03c6y2Af1e9kR6U3o99ikbj/XE
pmCH0aeJK4tbec4lOX/SU+kr+T/oJfx7av7BHsrZmHWZfZc5kX8oZ1/2EXZO
+gX9bvYG9lH2PPZJvi/WA5uMVaLfyF4QT8sZij+e84c+jb9Y7e95Dv439qD6
UvSDbGZqsbOzHul3sjewD/NdsHP5wZ6xP7Y8/Ttrlv9Y7tj8RvFYY7rjk+hD
8Y70b3kW9hf2QNYR/QCbgT2GtcXq0W9nX2AfYKOxc/hBnrkf9h07UPwRfr26
bvSN8hXp+9n+2P1sOv4o3gYbxT5kY/Cu+A14Bfo+th9WP+eHZ96XXsNPU7MK
O0v+2vQ9dpHcvfyRcvumX2bf5Ezg703f4G/KvSVnsroTxQeI6+J15d/K/sO2
YdfIf8Cuw7pgE7Hy9IX0r/n7sT+xldjarJl8B74yfh9fkB7Ll1RbN2eIeKV4
as6knNN5P/1m9iC2FRuJbWOjsc7YBKwc3VJ8uPhUz7ggd5D0bLpP7pH53fL3
qNtH3Jofkb7FXpfvk3OdPyXzxx9Gt8x9VG0r8RW5g+Z3yP9B321cCfqenJPp
OenH2HC2NfOEd8LH4wfRd7Hi2N1sMv5g9hBWR7y/+MTcieWaibuKt+Q+kP4g
/z42TO3Z/EBsX+zb9Ajx+5lXtZfR4+TL0itYMewuNgl/IPsEG8reY9fgl+Jj
8TJ0e/ontgX7HVuOHZH+lbuSd+wtd2LOWPGK9Hj+xpzL+dZqN9Ddc6bwJ+D7
ieskVrs5vQZ7L2eN2nfZSOwS7HqsdO5S9O7UYr9hy7CL+VG552H35mzlq+Qe
oK5OzmvxcvENWUeZK2Nq05vSY7B3c55g72SesYuxMdiBOffoXexOz9iE/4ov
xV+lO4qvzfynh+WcFRdRu4xNzG+RP0VtLfqN9BjsnfQQ7O3MP9YRuw4rRV/B
T/WMFtnDfKWM589Td5q4d87dPEv+F3qJMZXSx9Jn5QrLLWUT6JXyLeQHsZL0
N9mXat6iq6fHiYepnc1fJDcaO0CuufjQjMXPld/JXsd+xu6U3yt9m43P/sCa
YzVTk56GvZ11h7XlB3jGPtgyfkfWLv+mXLX0PPFQYy7ER9H7p9/RP7CN2E/Y
YqxQvj0bh92NnYwNYFvYEPwC/Fp8P/qOgoI9/zguZmPxu/BmULfcG7yvdvZS
9gR9An+8uqbiLuKN6Z/yb9H9s1/FX2d9ym2mr5bvQF8jvy+9iP2bd+LX506E
N6VfU9819wW+Fl5SXFt8nLoN7D7sTayf2k1sMNYeG4mVzL6lv08tthtbmB6c
3ukZh2Ze+b/4I7LO5Z7J3pG/gF9k3JicTXQTuRr0a+nf2Basb87GrAnsfGwE
tg+9gP3DFuLXZb7wxvRV6XdsIN4OH46XoE8WV8zce2dbuTU5Z+le/Hd5p/wu
er7aiunp6bVyf+dd8qPppfKN6CvT6+jtOV8yD3TVnF/iAbl3ZP3LDcOKy22k
e4un8M3wClkT4jZqv2XrsR+xeWr/YvOxUdgSrGHO6dSwldjm9HusTebcM4rl
d+VOm3njN8gdk/NQ3N+Yc/GhdDH8LPobtg7bid2O/cnmYddid2INsjfE+4hr
eUZ1uSbizuJ14gX8PfKbcmbkmVkX6aHYlxknfg3vp/Yceoj83vRt7A92O34N
vhg/ie7Cj8u6Th/nS9A1+WrqGos7idfmXJF/I/3EmKLiL1gJufV0X/mz6avl
i9Jn0jvYWuwH7FasQs41dpgxv6eX4h3Et6mbw4+UuwOrL9eZH5v1jxUXHy+u
qu7VnDnY61k36tZlvWFtscGF9/yrUHAG/XVqse+xubkr5EyXPCT9J+/nK/G/
ya3OnpNvz99q3Ai5RXS9zCP9CluBbcQuzx0j6w9rgw0qvOd6UdCa3p5a7Dtg
DvZK7gjiEXz5nDvpkeJf5eaqHU4vzJ2H7pmzgfXBz8IHFt7zL3xBL36yMU2J
Vfn96U25c6hrmd+TdSd+Oec1fYsx5XLeZK/lTkLPkR9GL8gdgD469Ww5tgHr
kd+acwQ7ExuA/R9tSGCB
                    "]]}]}, {}, {}}, {{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    LineBox[CompressedData["
1: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
qTfTO0s+UD5N7QiahuU/Fr7B/uHb5uyBntXXA3ss71j9lLyPfNNmpopb1Ubm
35TvEbFJzky1H8RZ2GrX1aLm2GzsJewd/kh6J581rlmN7eHbUX2+or562DPy
Xlk/+p4Te2IvYo/ru1Ksgm1QOyJnrtpheZ58C3pfbRD/bmYdVdazH1YpTL0Q
v0b+r1ov+SVqH4nt+QbicdlXmdl6nhV7Zw257nmxF/aEvp8zg6glzcEH49Mz
92g6VolewHvn+wPbmHlCP2ZeYmuw/+SMxeZiQ7D3si793jl8GfnJ8sLyCeKJ
mY1im7yDjHv5t9jenIfZb1h/tetyLvGbMjNoffYD9i12fvZr9gZ2NtZa/QP5
UPkQfEb2GV82ewebod4hubg5syB7n6+dPv2H59sif2/Wp9g53zt6PhRfxmZm
jtJMrDK9iF+f2Yb9wh/pmm18yTwj/qfsFfkw/Hs9nfL9htWRnycvJT9X/Wq9
H8lfkc9SO4ZmZQnr+a5Qwf/+I75jnp90gL4bsp74JupVsz8zv9VKi9vzXZJ/
i9hHbJozTm2DOBdb67oLMluwj7FXsdl8OZqNFc7fiu1DnXJO88fra8A/J79u
3///fxqn6B0ovzFrSt9vmSXUhubhw/D3MwvpFP1FsMph6kX4tfJC1FveMDNZ
X0P5CZnFWcNqz4vX81Vc85J4U/4GfVsyR+jnfINg67ALs8+x+dhwbE7mIVVx
j/2xk3O2ytvKF4pz9O4vrsP3pS56q2KD1G/Ob/NbMzOoHX2Cv4bPxSvQXOxU
Gozfgr+A/Z69TRtz/mA/YBdRzXxPYedh7dUXyF+XD8U/yFrgK+Y5YR+od5Wf
Jm7LHs0e4y/O7NF/pN7JYs3MMbFLvjP0LBTfwD7MrKMPsdNpCH4r3h/bzh/l
mj/4UtRX3iznHL4pMwMbjq3X2znfhDk3s6/lpeW11DvoXSQfIf9I7Xj6CCuq
5wdsP+qGVcOG6uuTOcc3VT+V/yPfR/I/8dF5LmI/sbnax2J/9XqZ91mfVJ3+
C7n4XtI=
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$3093446#1"]& ]}}], {}}, {
               GridLines -> Dynamic[
                  Join[{{{1.8933696*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.2089888*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.5245216*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.8401408*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4712928*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, {66, 68, 70, 72, 74, 76, 78, 80, 82}}, 
                   Replace[
                    MousePosition[{"Graphics", Graphics}, None], {
                    None -> {{}, {}}, {
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`x$, 
                    Blank[]], 
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`y$, 
                    Blank[]]} :> {{{
                    CalculateUtilities`GraphicsUtilities`Private`x$, 
                    GrayLevel[0.7]}}, {{
                    CalculateUtilities`GraphicsUtilities`Private`y$, 
                    GrayLevel[0.7]}}}}], 2]], FrameTicks -> {{{{70., 
                    FormBox[
                    TagBox["70", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {72., 
                    FormBox[
                    TagBox["72", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {74., 
                    FormBox[
                    TagBox["74", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {76., 
                    FormBox[
                    TagBox["76", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {78., 
                    FormBox[
                    TagBox["78", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {80., 
                    FormBox[
                    TagBox["80", #& ], TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {69.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {70.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {71., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {71.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {72.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {73., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {73.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {74.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {75., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {75.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {76.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {77., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {77.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {78.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {79., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {79.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}, {{68., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {70., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {72., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {74., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {76., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {78., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {80., 
                    FormBox["\"\"", TraditionalForm], {0.00625, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.25]}}, {68.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {69., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {69.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {70.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {71., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {71.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {72.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {73., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {73.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {74.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {75., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {75.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {76.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {77., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {77.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {78.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {79., 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {79.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}, {67.5, 
                    FormBox["\"\"", TraditionalForm], {0.00375, 0.}, {
                    GrayLevel[0.], 
                    AbsoluteThickness[0.125]}}}}, {{{1.8933696*^9, 
                    FormBox[
                    StyleBox["\"1960\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {2.2089888*^9, 
                    FormBox[
                    StyleBox["\"1970\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    StyleBox["\"1980\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {2.8401408*^9, 
                    FormBox[
                    StyleBox["\"1990\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    StyleBox["\"2000\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    StyleBox["\"2010\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    StyleBox["\"2020\"", 
                    Directive[], {}, StripOnInput -> False], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {1.8933696*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {1.956528*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.0196*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.0827584*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.1458304*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.2089888*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.2089888*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.2720608*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.3352192*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.3982912*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.4614496*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.58768*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.650752*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.7139104*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.7769824*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.8401408*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.8401408*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.9032128*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.9663712*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.0294432*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.0926016*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.218832*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.281904*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.3450624*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4081344*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.5343648*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.5975232*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.6605952*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7237536*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}}, {{1.8933696*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {2.2089888*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {2.8401408*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], 
                    NCache[{
                    Rational[1, 72], 0}, {0.013888888888888888`, 0}], 
                    Directive[]}, {1.8933696*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {1.956528*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.0196*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.0827584*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.1458304*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.2089888*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.2089888*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.2720608*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.3352192*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.3982912*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.4614496*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.5245216*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.58768*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.650752*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.7139104*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.7769824*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.8401408*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.8401408*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.9032128*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {2.9663712*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.0294432*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.0926016*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.1556736*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.218832*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.281904*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.3450624*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4081344*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.4712928*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.5343648*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.5975232*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.6605952*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7237536*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}, {3.7868256*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {
                    0.009722222222222222, 0.}, 
                    Directive[]}}}}, ImagePadding -> All, 
                GridLines -> {{{1.8933696*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.2089888*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.5245216*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.8401408*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4712928*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, Epilog -> {{
                   CapForm[None], {
                    GrayLevel[1], 
                    PolygonBox[{
                    Offset[{-4.6, -4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{-4.6, -0.34999999999999987`}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 0.34999999999999987`}, 
                    Scaled[{0, 0.08}]]}]}, {
                    AbsoluteThickness[1], 
                    GrayLevel[0], 
                    LineBox[{{
                    Offset[{-4.6, -4.25}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 0.34999999999999987`}, 
                    Scaled[{0, 0.08}]]}, {
                    Offset[{-4.6, -0.34999999999999987`}, 
                    Scaled[{0, 0.08}]], 
                    Offset[{4.6, 4.25}, 
                    Scaled[{0, 0.08}]]}}]}}}, PlotRangeClipping -> False, 
                PlotRangePadding -> None, DisplayFunction -> Identity, 
                Ticks -> {Automatic, Automatic}, 
                AxesOrigin -> {1.8933696*^9, 67.04970019817306}, 
                FrameTicks -> {{Automatic, {{67.5, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {70., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {72.5, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {75., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {77.5, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {80., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {65., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {65.5, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {66., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {66.5, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {67., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {68., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {68.5, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {69., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {69.5, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {70.5, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {71., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {71.5, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {72., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {73., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {73.5, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {74., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {74.5, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {75.5, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {76., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {76.5, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {77., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {78., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {78.5, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {79., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {79.5, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {80.5, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {81., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {81.5, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {82., 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {82.5, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}, {Automatic, {{2.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.5*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.6*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.7*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.8*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {1.9*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.1*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.2*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.3*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.4*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.6*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.7*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.8*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {2.9*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.1*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.2*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.3*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.4*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.6*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.7*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.8*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {3.9*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}, {4.*^9, 
                    FormBox[
                    TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
                    0.}, {
                    AbsoluteThickness[0.1]}}}}}, GridLines -> {{{1.8933696*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.2089888*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.5245216*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.8401408*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4712928*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, DisplayFunction -> 
                Identity, PlotRangePadding -> {{None, None}, {None, None}}, 
                PlotRangeClipping -> True, ImagePadding -> All, 
                DisplayFunction -> Identity, AspectRatio -> 
                NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {1.8933696*^9, 67.04970019817306}, AxesStyle -> 
                Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], BaseStyle -> AbsoluteThickness[1], 
                DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                  FontOpacity -> 1], 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {{{1.8933696*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.2089888*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.5245216*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {2.8401408*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.1556736*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.4712928*^9, 
                    Directive[
                    GrayLevel[0.9]]}, {3.7868256*^9, 
                    Directive[
                    GrayLevel[0.9]]}}, Automatic}, GridLinesStyle -> 
                GrayLevel[0.9], ImageSize -> 250, 
                Method -> {
                 "DefaultBoundaryStyle" -> Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultMeshStyle" -> PointSize[Medium], 
                  "PointSizeFunction" -> "SmallPointSize", "ScalingFunctions" -> 
                  None, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}, "AxesInFront" -> True}, 
                PlotRange -> {{1.8933696*^9, 3.6605952*^9}, {
                 67.04970019817306, 80.20135524861422}}, PlotRangeClipping -> 
                True, PlotRangePadding -> {{None, None}, {None, None}}, 
                Prolog -> {
                  Opacity[0], 
                  TagBox[
                   RectangleBox[
                    Scaled[{0, 0}], 
                    Scaled[{1, 1}]], Annotation[#, "DatePlot", "Frame"]& ]}, 
                Ticks -> {Automatic, Automatic}}], 
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"from \"", 
                    FormBox[
                    TagBox["\"1960\"", Identity], TraditionalForm], 
                    "\" to \"", 
                    FormBox[
                    TagBox["\"2016\"", Identity], TraditionalForm]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]}, {
                  TagBox[
                   GridBox[{{
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"in \"", "\"years\""}, "RowDefault"], 
                    "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                   "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                DefaultBaseStyle -> "Column", 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
               "Column"]}, "Labeled", DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"], 
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", 
                  RowBox[{"{", #2, "}"}], ",", 
                  RowBox[{"(", "\[NoBreak]", 
                    GridBox[{{
                    StyleBox[
                    "Right", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited], 
                    StyleBox[
                    "Center", FontFamily -> "Bitstream Vera Sans", 
                    FontSize -> -1 + Inherited]}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}]}], 
                "]"}]& )], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"computabledata,formatteddata,timeseriesdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "TimeSeriesPlot"}, {}], 
       "\n "}]}], Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Demographics", "scanner" -> "Data", "id" -> 
     "DemographicProperties:CountryData", "position" -> "400", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["microsources", {}, {"\n   ", 
         XMLElement["microsource", {}, {"CountryData"}], "\n  "}], 
       XMLElement["datasources", {}, {"\n   ", 
         XMLElement["datasource", {}, {"UNData"}], "\n   ", 
         XMLElement["datasource", {}, {"CIAFactbook"}], "\n  "}], 
       XMLElement[
       "minput", {}, {
        "Dataset[EntityValue[Entity[\"Country\", \"UnitedStates\"], \
{EntityProperty[\"Country\", \"Population\"], EntityProperty[\"Country\", \
\"PopulationDensity\"], EntityProperty[\"Country\", \"PopulationGrowth\"], \
EntityProperty[\"Country\", \"LifeExpectancy\"], EntityProperty[\"Country\", \
\"MedianAge\"]}, \"PropertyAssociation\"]]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                   TagBox["\"population\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    RowBox[{
                    TagBox["331", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "331", "SRString" -> "331"]], 
                    "\[ThickSpace]", 
                    TagBox[
                    StyleBox[
                    "\"million\"", {
                    ShowStringCharacters -> False, FontFamily -> "Helvetica", 
                    FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}], 1000000& , AutoDelete -> True]}], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"people\"", {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["3", "\"rd\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"3", "\"rd\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2020\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"population density\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    RowBox[{
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["36", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "36", "SRString" -> "36"]], "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"people\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", 
                    SuperscriptBox["\"km\"", "2"]}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], "  ", 
                    StyleBox[
                    
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    "\"people per square kilometer\"", "\[NoBreak]", 
                    "\")\""}], {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    GrayLevel[0.6], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["182", "\"nd\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"182", "\"nd\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2019\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"population growth\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["0.474", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "0.474", "SRString" -> "0.474"]], 
                    "\[NoBreak]", 
                    StyleBox[
                    RowBox[{}], FontFamily -> "Helvetica", FontSize -> 
                    Smaller], "\[InvisibleSpace]", "\[ThickSpace]", 
                    "\[InvisibleSpace]", 
                    StyleBox[
                    
                    RowBox[{"\"%\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"yr\""}], FontFamily -> 
                    "Helvetica", FontSize -> Smaller]}], Identity], #& , 
                    SyntaxForm -> Dot], "Unit", SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["167", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"167", "\"th\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2019\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"life expectancy\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["80.1", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "80.1", "SRString" -> "80.1"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["46", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"46", "\"th\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2018\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}, {
                 TagBox[
                  PaneBox[
                   TagBox["\"median age\"", Identity], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], 
                 StyleBox[
                  TemplateBox[{
                    StyleBox[
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    TagBox[
                    TagBox[
                    RowBox[{
                    TagBox["37.6", 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> "37.6", "SRString" -> "37.6"]], 
                    "\[InvisibleSpace]", " ", 
                    StyleBox[
                    "\"years\"", {
                    FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
                    SyntaxForm -> Dot], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0, ZeroWidthTimes -> False], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{"\"world rank: \"", 
                    TagBox[
                    SuperscriptBox["50", "\"th\""], 
                    $CellContext`TagBoxWrapper[
                    "StringBoxes" -> RowBox[{"50", "\"th\""}]]]}, 
                    "RowDefault"], "\[NoBreak]", "\")\""}], {
                    FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0], "\"  \"", 
                    StyleBox[
                    RowBox[{"\"(\"", "\[NoBreak]", 
                    TemplateBox[{
                    FormBox[
                    TagBox["\"2015\"", Identity], TraditionalForm], 
                    "\" estimate\""}, "RowDefault"], "\[NoBreak]", 
                    "\")\""}], {FontFamily -> "Verdana", FontSize -> 10, 
                    GrayLevel[0.5], 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}, "RowDefault"], LineIndent -> 0]}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, Left}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,numberdata,\
quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Show rates", "input" -> 
         "DemographicProperties:CountryData__Show rates"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show distribution", "input" -> 
         "DemographicProperties:CountryData__Show distribution"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Show non-metric", "input" -> 
         "DemographicProperties:CountryData__Show non-metric"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement["info", {}, {
         XMLElement["units", {"count" -> "1"}, {
           XMLElement[
           "unit", {"short" -> "%/yr", "long" -> "percent per year"}, {}], 
           XMLElement[
           "img", {"src" -> 
             "https://www4b.wolframalpha.com/Calculate/MSP/\
MSP232116b47bf2cebcg30d0000497874fic2880972?MSPStoreType=image/gif&s=33", 
             "width" -> "164", "height" -> "27", "ImportedData" -> 
             Image[CompressedData["
1:eJztWElIm0EUltZDDx5676kXQQW95NCDlx57tUQERYzWxh5MISmUihcRQTzp
zbhGE3dxQVFEcEFUVHC7uGvdcN9xIW796qPD36SZ/om/UZz5IOFl5s2b759v
5s378zbxa9TnFwEBAZZX+IoyfH9vNht+fHyNH3qT5YvRlPzpg+lbsjHZ/C7x
JRrf4OPA57c9JSESbp8AngiNZwyptTiQWosDqbU4kFqLA6m1OJBaiwOpNR8F
BQXX19ePzUIbqNe6pKSksLCQ7KqqqpubG7K3trZGR0c1YXL/IJpDQK37+/sz
MjJyc3M7OjoWFxfT09NZV35+fl9fnyZM+A5Wq3V8fNxut1dWVi4tLVHj5uZm
Q0NDcXFxbW3tysoK85yYmHA4HCMjI/i5sbHR2NhYVFSE9tnZWc6oyclJ+x0o
fnt7u/UPnE6nVnwYxsbGsLBkn52dlZeXX15eegqCXsTBiQMrOPMje1phNVq3
tLSUlpZiapzo1NTU3d1d1pWQkACGWVlZ2dnZ1GI2m3EcsMJhYWEGgyEoKGh1
dVUNE74DnmtgYABrjmg2m+38/Pzi4qKurm5nZwdHb3t7G49MawXPoaEhsuFW
VlYGieknwBmFFUP85eXliooKcuaca9/4KIEh2CrUDt0HBwc59AiwQRLzMg7/
jOxphdVofXp6ajQaU1JShoeHMzMz9/f3Dw8PaWpoDQMtISEh+HlychIcHIyn
gNaBgYGdnZ0qc6AarbEOZLe1tf28g/Vv7O3tkSc7hjhx2KjKOJxRV1dX5IMz
RbT5WvvAxwXd3d0zMzMwqqurj4+POfQgMTYG+KAF0zEOniK7w9vaDHLjdtbr
9TExMWDV29uL6ajLZDLV1NTk5eVhM9zeZc7Q0FD1kX3Q2l1H5sls+LS2tip7
1YyC1qQ7ShT1WquJ7AKc3KamJmQGXI4cesjqWNujoyOQwUTsiTiR3eGV1sgz
OTk5uJ7q6+sxNbZiWloaMh4jGRkZGR4eTvsQWkdERHjFhO/Acuba2hrlTMrP
GOiSxJQrQD5zc3PszKoZxbSG58HBgYZ83IFaAuu5vr7OoYcpcIGiC2mzubnZ
D1onJSUhmcM/Pj4+Li5uYWEhNjZW6RAdHY3bnOyH0Bq1EEoUXKasFsJbAJ4d
0qAX38xTORBMUOrghLLa7L+jmNbY3ihUOLWZD3xcMD09jQta2eIeBG89XV1d
sHHEcK0/tNaYbn5+nmwUh7QPWQuADKPT6bAB1M/uwoTv4NVz+QGa8MGO6unp
8c/7plb/paByQCVmsVjuw4Tv8Py0RjGGWguH1D+v8PJ/M3EgtRYHUmtxILUW
B1JrcSC1FgdTEiLhsbebhISE9vgFIi2npg==
               "], "Byte", ColorSpace -> "RGB", ImageSize -> Automatic, 
               Interleaving -> True, Magnification -> 1]}, {}]}]}]}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Unit conversions", "scanner" -> "Unit", "id" -> 
     "UnitConversion", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "5"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox["29240", 
                   Global`TagBoxWrapper[
                   "StringBoxes" -> "29240", "SRString" -> "29240"]], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"days\"", {
                   FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox["701700", 
                   Global`TagBoxWrapper[
                   "StringBoxes" -> "701700", "SRString" -> "701700"]], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"hours\"", {
                   FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox[
                   RowBox[{"4.21", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "7"]}], 
                   Global`TagBoxWrapper[
                   "StringBoxes" -> RowBox[{"4.21", "\[Times]", 
                    SuperscriptBox["10", "7"]}], "SRString" -> 
                    "4.21 times 10 to the 7"], SyntaxForm -> CenterDot], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"minutes\"", {
                   FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox["8.005", 
                   Global`TagBoxWrapper[
                   "StringBoxes" -> "8.005", "SRString" -> "8.005"]], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"average Gregorian decades\"", {
                   FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              TagBox[
               TagBox[
                RowBox[{
                  TagBox[
                   RowBox[{"2.526", 
                    StyleBox["\[Times]", 
                    GrayLevel[0.5]], 
                    SuperscriptBox["10", "9"]}], 
                   Global`TagBoxWrapper[
                   "StringBoxes" -> RowBox[{"2.526", "\[Times]", 
                    SuperscriptBox["10", "9"]}], "SRString" -> 
                    "2.526 times 10 to the 9"], SyntaxForm -> CenterDot], 
                  "\[InvisibleSpace]", " ", 
                  StyleBox[
                  "\"seconds\"", {
                   FontFamily -> "Helvetica", FontSize -> Smaller, 
                    LinebreakAdjustments -> {1, 100, 1, 0, 100}, LineIndent -> 
                    0}]}], Identity], #& , SyntaxForm -> Dot], "Unit", 
              SyntaxForm -> Dot], LinebreakAdjustments -> {1, 100, 1, 0, 100},
              LineIndent -> 0, ZeroWidthTimes -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,numberdata,quantitydata"}]}], 
     XMLElement["expressiontypes", {"count" -> "5"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False, False, False, False, False}, True}, 
   Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "life expectancy", "template" -> 
        "Assuming \"life expectancy\" is international data${separator}Use as \
${desc} instead", "count" -> "2", "pulldown" -> "false", "default" -> 
        "{\"C\", \"life expectancy\"} -> {\"CountryProperty\", \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "CountryProperty", "desc" -> "international data", "input" -> 
          "{\"C\", \"life expectancy\"} -> {\"CountryProperty\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "MortalityDataPhrase", "desc" -> 
          " referring to life expectancy data", "input" -> 
          "{\"C\", \"life expectancy\"} -> {\"MortalityDataPhrase\"}"}, \
{}]}]}], 
    XMLElement["sources", {"count" -> "1"}, {
      XMLElement[
      "source", {
       "url" -> 
        "https://www4b.wolframalpha.com/sources/\
CountryDataSourceInformationNotes.html", "text" -> "Country data"}, {}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "5", "datatypes" -> "Country", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "1.709", "parsetiming" -> "0.732", 
    "parsetimedout" -> "false", "recalculate" -> "", "id" -> 
    "MSP962209g3c3c4g97i2i400001dh405d707c2b9cf", "host" -> 
    "https://www4b.wolframalpha.com", "server" -> "32", "related" -> 
    "https://www4b.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa963209g3c3c4g97i2i4000045dh29545aee34b56584604935687988937", "version" -> 
    "2.6", "inputstring" -> "life expectancy in the US"}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2021, 9, 28, 9, 7, 16.8147585`8.97826557971128}, "Line" -> 49, 
    "SessionID" -> 19642527328004497291}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5}, Typeset`failedpods$$ = {}, Typeset`chosen$$ = {
   "History:LifeExpectancy:CountryData", "Life expectancy history", 1, 1, 
    "Content"}, Typeset`open$$ = True, Typeset`newq$$ = 
   "life expectancy in the US"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{560., {1301., 18.}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",ExpressionUUID->\
"1bf11ebc-71a2-4164-b1bb-c2465bc9c2fd"],

Cell[BoxData[
 TemplateBox[{"80.1`","\"yr\"","years","\"Years\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.8417796749846354`*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"2fc1f936-4d2f-4825-92b8-131adbd10c06"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CountryData", "[", 
   RowBox[{"\"\<UnitedStates\>\"", ",", "\"\<LifeExpectancy\>\""}], "]"}], 
  "\n"}]], "Input",
 CellChangeTimes->{{3.8417800755645957`*^9, 3.841780075574312*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"e8d5bd65-e507-4722-84d6-bb82fd36faf8"],

Cell[BoxData[
 TemplateBox[{"80.1`","\"yr\"","years","\"Years\""},
  "Quantity"]], "Output",
 CellChangeTimes->{3.841780129570549*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"0495faf9-7512-4c2c-871a-0b32b1690d8c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"QuantityForm", "[", 
  RowBox[{
   RowBox[{"Quantity", "[", 
    RowBox[{"80.1`", ",", "\"\<Years\>\""}], "]"}], ",", 
   "\"\<Abbreviation\>\""}], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->"In[53]:=",ExpressionUUID->"9c0cfd90-d1c6-4a18-a570-f32dc4a4196f"],

Cell[BoxData[
 StyleBox[
  RowBox[{"80.1`", "\[InvisibleSpace]", " ", "\<\"yr\"\>"}],
  ShowStringCharacters->False]], "Output",
 CellChangeTimes->{3.841780358244478*^9},
 CellLabel->
  "Out[53]//QuantityForm=",ExpressionUUID->"1818a18c-b501-449b-9e9b-\
7ffdd369690e"]
}, Open  ]],

Cell["\<\
Delete Cases\:6307\:4ee4\:7528\:4e8e\:5c06\:4e00\:4e2a\:6216\:8005\:591a\:4e2a\
\:6570\:503c\:7f3a\:5931\:7684\:6570\:636e\:5220\:9664
\:53d8\:91cf\:5305\:62ec\:56fd\:5bb6\:540d\:79f0\:548c\:76f8\:5e94\:9884\:671f\
\:5bff\:547d\:7684\:6570\:636e\:7ec4\
\>", "Text",
 CellChangeTimes->{{3.8417807046818457`*^9, 3.841780708926544*^9}, {
  3.8417808721017475`*^9, 
  3.8417808786819553`*^9}},ExpressionUUID->"9b44b841-49ee-4c18-8b90-\
0319f9e4b955"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"CountryData", "[", 
          RowBox[{"i", ",", "\"\<LifeExpectancy\>\""}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"CountryData", "[", "All", "]"}]}], "}"}]}], "]"}], 
     RowBox[{"{", 
      RowBox[{"_", ",", "_Missing"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8417802412448072`*^9, 3.841780273110232*^9}, {
  3.841780312294488*^9, 3.8417803676348343`*^9}, {3.841780731023249*^9, 
  3.8417807323718967`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"87fb0ec8-81bc-4f82-8e98-e957439b3128"],

Cell[BoxData[
 TemplateBox[{
  "Thread","tdlen",
   "\"\\!\\(\\*RowBox[{RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Afghanistan\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Afghanistan\\\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\
\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Afghanistan\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \\\"\\\\\\\"country\
\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", TemplateBox[List[\\\"52.1`\\\", \\\
\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\"\\\\\\\"Years\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{TemplateBox[List[\\\"\\\\\\\"Aland Islands\\\\\\\"\
\\\", RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"AlandIslands\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"AlandIslands\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
RowBox[{\\\"Missing\\\", \\\"[\\\", \\\"\\\\\\\"NotAvailable\\\\\\\"\\\", \
\\\"]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Albania\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Albania\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Albania\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"78.6`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Algeria\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Algeria\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Algeria\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"77.2`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"American Samoa\\\\\\\"\\\", RowBox[List[\
\\\"Entity\\\", \\\"[\\\", RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\
\\\", \\\"\\\\\\\"AmericanSamoa\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"AmericanSamoa\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"73.9`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Andorra\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Andorra\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Andorra\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"82.9`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Angola\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Angola\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Angola\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"60.6`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Anguilla\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Anguilla\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Anguilla\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"81.6`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Antigua and Barbuda\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"AntiguaBarbuda\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"AntiguaBarbuda\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"76.9`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Argentina\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Argentina\
\\\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\
\\\\\\\\\", \\\\\\\\\\\\\\\"Argentina\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"77.5`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Armenia\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Armenia\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Armenia\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"75.1`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Aruba\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Aruba\\\\\
\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\
\\\\\", \\\\\\\\\\\\\\\"Aruba\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"77.1`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Australia\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Australia\
\\\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\
\\\\\\\\\", \\\\\\\\\\\\\\\"Australia\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"82.4`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Austria\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Austria\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Austria\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"81.7`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Azerbaijan\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Azerbaijan\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Azerbaijan\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"73.`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \
\\\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Bahamas\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Bahamas\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Bahamas\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"72.9`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Bahrain\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Bahrain\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Bahrain\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"79.1`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Bangladesh\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Bangladesh\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Bangladesh\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"73.7`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Barbados\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Barbados\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Barbados\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"75.7`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Belarus\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Belarus\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Belarus\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"73.2`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Belgium\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Belgium\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Belgium\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"81.2`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Belize\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Belize\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Belize\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"74.7`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Benin\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Benin\\\\\
\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\
\\\\\", \\\\\\\\\\\\\\\"Benin\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"62.7`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Bermuda\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Bermuda\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Bermuda\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"81.5`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Bhutan\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Bhutan\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Bhutan\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"71.1`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Bolivia\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Bolivia\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Bolivia\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"69.8`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Caribbean Netherlands\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"BonaireSintEustatiusAndSaba\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"BonaireSintEustatiusAndSaba\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
RowBox[{\\\"Missing\\\", \\\"[\\\", \\\"\\\\\\\"NotAvailable\\\\\\\"\\\", \
\\\"]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Bosnia and Herzegovina\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"BosniaHerzegovina\\\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\
\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"BosniaHerzegovina\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"77.1`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Botswana\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Botswana\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Botswana\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"63.8`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Bouvet Island\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"BouvetIsland\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"BouvetIsland\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
RowBox[{\\\"Missing\\\", \\\"[\\\", \\\"\\\\\\\"NotAvailable\\\\\\\"\\\", \
\\\"]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Brazil\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Brazil\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Brazil\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"74.3`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"British Indian Ocean Territory\\\\\\\"\\\
\", RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"BritishIndianOceanTerritory\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"BritishIndianOceanTerritory\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
RowBox[{\\\"Missing\\\", \\\"[\\\", \\\"\\\\\\\"NotAvailable\\\\\\\"\\\", \
\\\"]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"British Virgin Islands\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"BritishVirginIslands\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"BritishVirginIslands\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \\\"\\\\\\\
\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"78.9`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Brunei\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Brunei\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Brunei\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"77.5`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Bulgaria\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Bulgaria\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Bulgaria\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"74.8`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Burkina Faso\\\\\\\"\\\", RowBox[List[\\\
\"Entity\\\", \\\"[\\\", RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\
\", \\\"\\\\\\\"BurkinaFaso\\\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\
\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"BurkinaFaso\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \\\"\\\\\\\"country\
\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", TemplateBox[List[\\\"61.8`\\\", \\\
\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\"\\\\\\\"Years\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{TemplateBox[List[\\\"\\\\\\\"Burundi\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Burundi\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Burundi\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"61.4`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Cambodia\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Cambodia\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Cambodia\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"65.2`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Cameroon\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Cameroon\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Cameroon\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"59.4`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Canada\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Canada\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Canada\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"82.`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \
\\\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Cape Verde\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"CapeVerde\
\\\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\
\\\\\\\\\", \\\\\\\\\\\\\\\"CapeVerde\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"72.7`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Cayman Islands\\\\\\\"\\\", RowBox[List[\
\\\"Entity\\\", \\\"[\\\", RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\
\\\", \\\"\\\\\\\"CaymanIslands\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"CaymanIslands\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"81.4`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Central African Republic\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"CentralAfricanRepublic\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"CentralAfricanRepublic\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \\\"\\\\\
\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"53.3`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Chad\\\\\\\"\\\", RowBox[List[\\\"Entity\
\\\", \\\"[\\\", RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\
\\\\\\\"Chad\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Chad\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"57.5`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Chile\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Chile\\\\\
\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\
\\\\\", \\\\\\\\\\\\\\\"Chile\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"79.1`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"China\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"China\\\\\
\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\
\\\\\", \\\\\\\\\\\\\\\"China\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"75.8`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Christmas Island\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"ChristmasIsland\\\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\
\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"ChristmasIsland\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
RowBox[{\\\"Missing\\\", \\\"[\\\", \\\"\\\\\\\"NotAvailable\\\\\\\"\\\", \
\\\"]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Cocos Keeling Islands\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"CocosKeelingIslands\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"CocosKeelingIslands\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
RowBox[{\\\"Missing\\\", \\\"[\\\", \\\"\\\\\\\"NotAvailable\\\\\\\"\\\", \
\\\"]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Colombia\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Colombia\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Colombia\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"76.2`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Comoros\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Comoros\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Comoros\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"64.9`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"199\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}], \\\" \\\", RowBox[{\\\"{\\\", RowBox[{\
\\\"_\\\", \\\",\\\", \\\"_Missing\\\"}], \\\"}\\\"}]}]\\) \:4e2d\:957f\:5ea6\
\:4e0d\:76f8\:7b49\:7684\:5bf9\:8c61\:65e0\:6cd5\:5408\:5e76.\"",2,59,39,
   19642527328004497291,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.84178031811476*^9, 3.8417803394797935`*^9}, 
   3.841780457436368*^9, 3.8417807336714077`*^9, {3.8417811632640514`*^9, 
   3.8417811705815673`*^9}},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[59]:=",ExpressionUUID->"ae46b11c-6fea-4be9-8fd4-\
d92b3c8079ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Short", "[", "data", "]"}]], "Input",
 CellChangeTimes->{{3.8417796619742856`*^9, 3.841779663854325*^9}, {
  3.8417808181717052`*^9, 3.8417808239319215`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"292addc7-5f26-4e34-b942-83a2b3235ecf"],

Cell[BoxData[
 TagBox[
  RowBox[{"DeleteCases", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"_", ",", "_Missing"}], "}"}], " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Afghanistan\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"52.1`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Aland Islands\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"AlandIslands\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"AlandIslands\\\"]\"","\"country\""},
         "Entity"], ",", 
        RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Albania\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"78.6`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Algeria\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"77.2`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"American Samoa\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"AmericanSamoa\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"AmericanSamoa\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"73.9`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Andorra\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Andorra\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Andorra\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"82.9`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Angola\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"60.6`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Anguilla\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Anguilla\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Anguilla\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"81.6`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Antigua and Barbuda\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"AntiguaBarbuda\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"AntiguaBarbuda\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"76.9`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Argentina\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"77.5`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Armenia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"75.1`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Aruba\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Aruba\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Aruba\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"77.1`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Australia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Australia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Australia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"82.4`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Austria\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"81.7`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"\[LeftSkeleton]", "222", "\[RightSkeleton]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"United States Virgin Islands\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"UnitedStatesVirginIslands\""}], 
            "]"}],"\"Entity[\\\"Country\\\", \
\\\"UnitedStatesVirginIslands\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"79.5`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Uruguay\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Uruguay\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Uruguay\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"77.6`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Uzbekistan\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"74.3`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Vanuatu\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Vanuatu\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Vanuatu\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"74.`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Vatican City\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"VaticanCity\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"VaticanCity\\\"]\"","\"country\""},
         "Entity"], ",", 
        RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Venezuela\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Venezuela\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Venezuela\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"76.2`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Vietnam\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Vietnam\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Vietnam\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"73.9`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Wallis and Futuna Islands\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"WallisFutuna\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"WallisFutuna\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"80.`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"West Bank\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"WestBank\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"WestBank\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"75.4`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Western Sahara\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"63.8`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Yemen\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Yemen\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Yemen\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"66.2`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Zambia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"53.`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Zimbabwe\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Zimbabwe\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Zimbabwe\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"61.1`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}]}], "}"}]}], "]"}],
  Short]], "Output",
 CellChangeTimes->{{3.8417811539216466`*^9, 3.8417811601715355`*^9}},
 CellLabel->
  "Out[57]//Short=",ExpressionUUID->"8a045dc6-6ae9-4343-bce7-13634826e098"]
}, Open  ]],

Cell["", "Item",
 CellChangeTimes->{
  3.8417795502846813`*^9, {3.8417809088881474`*^9, 3.8417809227215085`*^9}},
 NumberMarks->False,ExpressionUUID->"4f6fec44-6897-468d-81a1-9102eda90b6d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "\:5982SortBy\:51fd\:6570\:53ef\:5bf9\:5217\:8868\:6309\:9884\:671f\:5bff\
\:547d\:4ece\:4f4e\:5230\:9ad8\:6392\:5e8f", "."}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Short", "[", 
   RowBox[{"SortBy", "[", 
    RowBox[{"data", ",", "Last"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8417809350236983`*^9, 3.841780958701583*^9}},
 FontSize->14,
 CellLabel->"In[60]:=",ExpressionUUID->"d8e4d96d-30b5-42a6-87c0-f445377e5d38"],

Cell[BoxData[
 TagBox[
  RowBox[{"DeleteCases", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"_", ",", "_Missing"}], "}"}], " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Afghanistan\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"52.1`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Aland Islands\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"AlandIslands\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"AlandIslands\\\"]\"","\"country\""},
         "Entity"], ",", 
        RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Albania\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"78.6`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Algeria\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"77.2`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"American Samoa\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"AmericanSamoa\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"AmericanSamoa\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"73.9`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Andorra\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Andorra\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Andorra\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"82.9`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Angola\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"60.6`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Anguilla\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Anguilla\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Anguilla\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"81.6`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Antigua and Barbuda\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"AntiguaBarbuda\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"AntiguaBarbuda\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"76.9`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Argentina\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"77.5`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Armenia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"75.1`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Aruba\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Aruba\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Aruba\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"77.1`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Australia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Australia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Australia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"82.4`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Austria\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"81.7`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"\[LeftSkeleton]", "222", "\[RightSkeleton]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"United States Virgin Islands\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"UnitedStatesVirginIslands\""}], 
            "]"}],"\"Entity[\\\"Country\\\", \
\\\"UnitedStatesVirginIslands\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"79.5`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Uruguay\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Uruguay\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Uruguay\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"77.6`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Uzbekistan\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"74.3`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Vanuatu\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Vanuatu\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Vanuatu\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"74.`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Vatican City\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"VaticanCity\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"VaticanCity\\\"]\"","\"country\""},
         "Entity"], ",", 
        RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Venezuela\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Venezuela\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Venezuela\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"76.2`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Vietnam\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Vietnam\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Vietnam\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"73.9`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Wallis and Futuna Islands\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"WallisFutuna\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"WallisFutuna\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"80.`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"West Bank\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"WestBank\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"WestBank\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"75.4`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Western Sahara\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"63.8`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Yemen\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Yemen\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Yemen\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"66.2`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Zambia\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"53.`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        TemplateBox[{"\"Zimbabwe\"",RowBox[{"Entity", "[", 
            RowBox[{"\"Country\"", ",", "\"Zimbabwe\""}], "]"}],
          "\"Entity[\\\"Country\\\", \\\"Zimbabwe\\\"]\"","\"country\""},
         "Entity"], ",", 
        TemplateBox[{"61.1`","\"yr\"","years","\"Years\""},
         "Quantity"]}], "}"}]}], "}"}]}], "]"}],
  Short]], "Output",
 CellChangeTimes->{3.8417811770015216`*^9},
 CellLabel->
  "Out[60]//Short=",ExpressionUUID->"7e8f744a-ef5a-43a9-8e85-ff970b8c6d72"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["CountryData"], "Input",
 CellChangeTimes->{{3.841779544664838*^9, 3.841779549634366*^9}, 
   3.8417812656018376`*^9},
 CellLabel->"In[61]:=",ExpressionUUID->"e8683f83-4995-4c09-852a-4d251b426c39"],

Cell[BoxData["CountryData"], "Output",
 CellChangeTimes->{3.841781267441849*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"1a718175-f6c1-474e-ae8a-1842302c067e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CountryData", "[", "all", "]"}]], "Input",
 CellChangeTimes->{{3.8417812716516933`*^9, 3.8417812766018243`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"c56fa6e1-ecc3-424d-a48a-00f1d6ec3eef"],

Cell[BoxData[
 TemplateBox[{
  "CountryData","notent",
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"all\\\\\\\"\\\"}]\\) \:4e0d\:662f \
\\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\) \
\:7684\:4e00\:4e2a\:5df2\:77e5\:5b9e\:4f53\:3001\:7c7b\:522b\:6216\:8005\:6807\
\:7b7e. \:8bf7\:4f7f\:7528 \\!\\(\\*RowBox[{\\\"CountryData\\\"}]\\)[] \:4ee5\
\:83b7\:53d6\:5b9e\:4f53\:5217\:8868.\"",2,62,40,19642527328004497291,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.8417812768519816`*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[62]:=",ExpressionUUID->"55a14a6e-dd8b-402c-b8d6-\
f52e0b610f20"]
}, Open  ]],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryNoResults",
  DynamicModuleBox[{Typeset`q$$ = "CountryData[all]", Typeset`newq$$ = 
   "CountryData[all]"}, 
   FrameBox[
    TagBox[GridBox[{
       {
        InputFieldBox[Dynamic[Typeset`newq$$], String,
         Appearance->None,
         BaseStyle->{"CalculateInput"},
         ContinuousAction->True,
         Enabled->True,
         FieldSize->{{1, 40}, {1, 
            DirectedInfinity[1]}},
         TrapSelection->False], "\[SpanFromLeft]"},
       {
        StyleBox[
         TemplateBox[{"\"(\"",DynamicBox[
            ToBoxes[
             FEPrivate`FrontEndResource["WAStrings", "NoInterpretations"], 
             StandardForm]],"\")\""},
          "RowDefault"], "DialogStyle",
         StripOnInput->False,
         FontColor->GrayLevel[0.5]], 
        TagBox[
         TooltipBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "WABitmaps", "QuestionMarkSmallIcon"],
            ImageSizeCache->{15., {5., 10.}}],
           Appearance->None,
           BaseStyle->{ShowStringCharacters -> False},
           ButtonFunction:>(Quiet[
              WolframAlpha[]]; 
            WolframAlphaClient`Private`openSuggestionsDialog[
             "NoResults", "CountryData[all]"]),
           Evaluator->Automatic,
           Method->"Preemptive"],
          "\"\:4fe1\:606f\:3001\:63d0\:793a\:548c\:610f\:89c1\:53cd\:9988\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          "\:4fe1\:606f\:3001\:63d0\:793a\:548c\:610f\:89c1\:53cd\:9988", 
          "Tooltip"]& ]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      FrameStyle->GrayLevel[0.85],
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxDividers->{
       "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"],
    Alignment->Top,
    Background->Dynamic[
      FEPrivate`If[
       FEPrivate`And[
        FEPrivate`SameQ[
         FEPrivate`Head[Typeset`newq$$], String], 
        FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
       RGBColor[1., 0.975, 0.95], 
       GrayLevel[1]]],
    BaselinePosition->Baseline,
    FrameStyle->GrayLevel[0.85],
    ImageSize->Automatic,
    RoundingRadius->5,
    StripOnInput->False],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[64]:=",ExpressionUUID->"01c35279-a36a-49ba-9b84-0512ddce4d62"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryParseResults",
  DynamicModuleBox[{Typeset`q$$ = " CountryData", Typeset`newq$$ = 
   " CountryData", Typeset`chosen$$ = 
   "Entity[\"WolframLanguageSymbol\", \"CountryData\"]", Typeset`open$$ = 
   False}, 
   PaneSelectorBox[{False->
    DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
     WolframAlphaClient`Private`assumptionsQ$$ = False}, 
     TagBox[
      FrameBox[
       TagBox[GridBox[{
          {
           InputFieldBox[Dynamic[Typeset`newq$$], String,
            Appearance->None,
            BaseStyle->{"CalculateInput"},
            ContinuousAction->True,
            Enabled->True,
            FieldSize->{{1, 40}, {1, 
               DirectedInfinity[1]}},
            TrapSelection->False], 
           ItemBox[
            ButtonBox[
             PaneSelectorBox[{True->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "OrangeSquarePlus"],
                 ImageSizeCache->{11., {2., 9.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ], False->
              TagBox[
               TooltipBox[
                
                DynamicBox[FEPrivate`FrontEndResource[
                 "WABitmaps", "GraySquarePlus"],
                 ImageSizeCache->{11., {2., 9.}}],
                DynamicBox[
                 ToBoxes[
                  FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"], 
                  StandardForm]]],
               Annotation[#, 
                Dynamic[
                 FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"]], 
                "Tooltip"]& ]}, Dynamic[WolframAlphaClient`Private`show$$],
              ImageSize->All],
             Appearance->None,
             ButtonFunction:>(Quiet[
                WolframAlpha[]]; If[
                Or[
                 CurrentValue["OptionKey"], 
                 CurrentValue["AltKey"]], SelectionMove[
                  ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                  Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                   "TextForm"], All], Typeset`open$$ = True; 
                WolframAlphaClient`Private`extrudeFromFastParse[
                 " CountryData", 
                  Defer[
                   Entity["WolframLanguageSymbol", "CountryData"]], 
                  "Fast parse"]; Typeset`open$$ = False]),
             Evaluator->Automatic,
             Method->"Queued"],
            Alignment->{Right, Top},
            StripOnInput->False]},
          {
           PaneBox[
            TagBox[
             TooltipBox[
              ButtonBox[
               PaneSelectorBox[{False->
                StyleBox[
                 TemplateBox[{"\"CountryData\"",RowBox[{"Entity", "[", 
                    
                    RowBox[{
                    "\"WolframLanguageSymbol\"", ",", "\"CountryData\""}], 
                    "]"}],"\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"CountryData\\\"]\"","\"Wolfram Language symbol\""},
                  "Entity"],
                 StripOnInput->False,
                 NumberMarks->False], True->
                StyleBox[
                 TemplateBox[{"\"CountryData\"",RowBox[{"Entity", "[", 
                    
                    RowBox[{
                    "\"WolframLanguageSymbol\"", ",", "\"CountryData\""}], 
                    "]"}],"\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"CountryData\\\"]\"","\"Wolfram Language symbol\""},
                  "Entity"],
                 StripOnInput->False,
                 ShowSyntaxStyles->False,
                 NumberMarks->False,
                 FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                 CurrentValue["MouseOver"]],
                BaseStyle->{ShowStringCharacters -> True},
                FrameMargins->0,
                ImageSize->Automatic],
               Alignment->Left,
               Appearance->None,
               BaseStyle->{},
               ButtonFunction:>(SelectionMove[
                  ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                  ButtonNotebook[], 
                  Cell[
                   BoxData[
                    TemplateBox[{"\"CountryData\"", 
                    RowBox[{"Entity", "[", 
                    
                    RowBox[{
                    "\"WolframLanguageSymbol\"", ",", "\"CountryData\""}], 
                    "]"}], "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"CountryData\\\"]\"", "\"Wolfram Language symbol\""}, "Entity"]], "Input"],
                   All]; SelectionMove[
                  ButtonNotebook[], After, CellContents]),
               Evaluator->Automatic,
               ImageSize->Automatic,
               Method->"Preemptive"],
              DynamicBox[
               ToBoxes[
                FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                StandardForm]]],
             Annotation[#, 
              Dynamic[
               FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
              "Tooltip"]& ],
            AppearanceElements->{},
            BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
            ImageSize->{Automatic, {1, 100}},
            Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         FrameStyle->GrayLevel[0.85],
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxDividers->{
          "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"],
       Alignment->Top,
       Background->Dynamic[
         FEPrivate`If[
          FEPrivate`And[
           FEPrivate`SameQ[
            FEPrivate`Head[Typeset`newq$$], String], 
           FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
          RGBColor[1., 0.975, 0.95], 
          GrayLevel[1]]],
       BaselinePosition->Baseline,
       FrameStyle->GrayLevel[0.85],
       ImageSize->Automatic,
       RoundingRadius->5,
       StripOnInput->False],
      EventHandlerTag[{
       "MouseEntered" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, True], "MouseExited" :> 
        FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
        "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
     DynamicModuleValues:>{}], True->
    TagBox[GridBox[{
       {
        DynamicModuleBox[{WolframAlphaClient`Private`show$$ = False, 
         WolframAlphaClient`Private`assumptionsQ$$ = False}, 
         TagBox[
          FrameBox[
           TagBox[GridBox[{
              {
               InputFieldBox[Dynamic[Typeset`newq$$], String,
                Appearance->None,
                BaseStyle->{"CalculateInput"},
                ContinuousAction->True,
                Enabled->True,
                FieldSize->{{1, 40}, {1, 
                   DirectedInfinity[1]}},
                TrapSelection->False], 
               ItemBox[
                ButtonBox[
                 PaneSelectorBox[{True->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "OrangeSquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ], False->
                  TagBox[
                   TooltipBox[
                    
                    DynamicBox[FEPrivate`FrontEndResource[
                    "WABitmaps", "GraySquarePlus"]],
                    DynamicBox[
                    ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "ShowAllResults"],
                     StandardForm]]],
                   Annotation[#, 
                    Dynamic[
                    FEPrivate`FrontEndResource[
                    "WAStrings", "ShowAllResults"]], "Tooltip"]& ]}, Dynamic[
                  WolframAlphaClient`Private`show$$],
                  ImageSize->All],
                 Appearance->None,
                 ButtonFunction:>(Quiet[
                    WolframAlpha[]]; If[
                    Or[
                    CurrentValue["OptionKey"], 
                    CurrentValue["AltKey"]], SelectionMove[
                    ButtonNotebook[], All, ButtonCell, AutoScroll -> False]; 
                    NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    Typeset`newq$$, "WolframAlphaShort", FormatType -> 
                    "TextForm"], All], Typeset`open$$ = True; 
                    WolframAlphaClient`Private`extrudeFromFastParse[
                    " CountryData", 
                    Defer[
                    Entity["WolframLanguageSymbol", "CountryData"]], 
                    "Fast parse"]; Typeset`open$$ = False]),
                 Evaluator->Automatic,
                 Method->"Queued"],
                Alignment->{Right, Top},
                StripOnInput->False]},
              {
               PaneBox[
                TagBox[
                 TooltipBox[
                  ButtonBox[
                   PaneSelectorBox[{False->
                    StyleBox[
                    TemplateBox[{"\"CountryData\"",RowBox[{"Entity", "[", 
                    
                    RowBox[{
                    "\"WolframLanguageSymbol\"", ",", "\"CountryData\""}], 
                    "]"}],"\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"CountryData\\\"]\"","\"Wolfram Language symbol\""},
                    "Entity"],
                    StripOnInput->False,
                    NumberMarks->False], True->
                    StyleBox[
                    TemplateBox[{"\"CountryData\"",RowBox[{"Entity", "[", 
                    
                    RowBox[{
                    "\"WolframLanguageSymbol\"", ",", "\"CountryData\""}], 
                    "]"}],"\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"CountryData\\\"]\"","\"Wolfram Language symbol\""},
                    "Entity"],
                    StripOnInput->False,
                    ShowSyntaxStyles->False,
                    NumberMarks->False,
                    FontColor->RGBColor[1, 0.5, 0]]}, Dynamic[
                    CurrentValue["MouseOver"]],
                    BaseStyle->{ShowStringCharacters -> True},
                    FrameMargins->0,
                    ImageSize->Automatic],
                   Alignment->Left,
                   Appearance->None,
                   BaseStyle->{},
                   ButtonFunction:>(SelectionMove[
                    ButtonNotebook[], All, ButtonCell]; NotebookWrite[
                    ButtonNotebook[], 
                    Cell[
                    BoxData[
                    TemplateBox[{"\"CountryData\"", 
                    RowBox[{"Entity", "[", 
                    
                    RowBox[{"\"WolframLanguageSymbol\"", ",", 
                    "\"CountryData\""}], "]"}], 
                    "\"Entity[\\\"WolframLanguageSymbol\\\", \
\\\"CountryData\\\"]\"", "\"Wolfram Language symbol\""}, "Entity"]], "Input"],
                     All]; SelectionMove[
                    ButtonNotebook[], After, CellContents]),
                   Evaluator->Automatic,
                   ImageSize->Automatic,
                   Method->"Preemptive"],
                  DynamicBox[
                   ToBoxes[
                    FEPrivate`FrontEndResource["WAStrings", "RemoveResults"], 
                    StandardForm]]],
                 Annotation[#, 
                  Dynamic[
                   FEPrivate`FrontEndResource["WAStrings", "RemoveResults"]], 
                  "Tooltip"]& ],
                AppearanceElements->{},
                BaseStyle->{ShowStringCharacters -> True, ScriptLevel -> 0},
                ImageSize->{Automatic, {1, 100}},
                Scrollbars->{False, Automatic}], "\[SpanFromLeft]"}
             },
             AutoDelete->False,
             BaselinePosition->{1, 1},
             FrameStyle->GrayLevel[0.85],
             GridBoxAlignment->{"Columns" -> {{Left}}},
             
             GridBoxDividers->{
              "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
             
             GridBoxItemSize->{
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
            "Grid"],
           Alignment->Top,
           Background->Dynamic[
             FEPrivate`If[
              FEPrivate`And[
               FEPrivate`SameQ[
                FEPrivate`Head[Typeset`newq$$], String], 
               FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
              RGBColor[1., 0.975, 0.95], 
              GrayLevel[1]]],
           BaselinePosition->Baseline,
           FrameStyle->GrayLevel[0.85],
           ImageSize->Automatic,
           RoundingRadius->5,
           StripOnInput->False],
          
          EventHandlerTag[{
           "MouseEntered" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, True], 
            "MouseExited" :> 
            FEPrivate`Set[WolframAlphaClient`Private`show$$, False], Method -> 
            "Preemptive", PassEventsDown -> Automatic, PassEventsUp -> True}]],
         DynamicModuleValues:>{}]},
       {
        InterpretationBox[
         StyleBox[
          
          DynamicBox[FEPrivate`FrontEndResource[
           "FEExpressions", "NecklaceAnimator"][20]],
          AnimatorBoxOptions->{ImageSize->20}],
         Animator[Appearance -> "Necklace", ImageSize -> 20],
         BaseStyle->{"Deploy"}]}
      },
      BaselinePosition->{1, 1},
      DefaultBaseStyle->"Column",
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Column"]}, Dynamic[
     TrueQ[Typeset`open$$]],
    BaseStyle->{Deployed -> True},
    ImageSize->Automatic],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[63]:=",ExpressionUUID->"85643b34-5103-4309-84b1-2f64d86e0545"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryNoResults",
  DynamicModuleBox[{Typeset`q$$ = "list of country", Typeset`newq$$ = 
   "list of country"}, 
   FrameBox[
    TagBox[GridBox[{
       {
        InputFieldBox[Dynamic[Typeset`newq$$], String,
         Appearance->None,
         BaseStyle->{"CalculateInput"},
         ContinuousAction->True,
         Enabled->True,
         FieldSize->{{1, 40}, {1, 
            DirectedInfinity[1]}},
         TrapSelection->False], "\[SpanFromLeft]"},
       {
        StyleBox[
         TemplateBox[{"\"(\"",DynamicBox[
            ToBoxes[
             FEPrivate`FrontEndResource["WAStrings", "NoInterpretations"], 
             StandardForm]],"\")\""},
          "RowDefault"], "DialogStyle",
         StripOnInput->False,
         FontColor->GrayLevel[0.5]], 
        TagBox[
         TooltipBox[
          ButtonBox[
           
           DynamicBox[FEPrivate`FrontEndResource[
            "WABitmaps", "QuestionMarkSmallIcon"],
            ImageSizeCache->{15., {5., 10.}}],
           Appearance->None,
           BaseStyle->{ShowStringCharacters -> False},
           ButtonFunction:>(Quiet[
              WolframAlpha[]]; 
            WolframAlphaClient`Private`openSuggestionsDialog[
             "NoResults", "list of country"]),
           Evaluator->Automatic,
           Method->"Preemptive"],
          "\"\:4fe1\:606f\:3001\:63d0\:793a\:548c\:610f\:89c1\:53cd\:9988\"",
          TooltipStyle->"TextStyling"],
         Annotation[#, 
          "\:4fe1\:606f\:3001\:63d0\:793a\:548c\:610f\:89c1\:53cd\:9988", 
          "Tooltip"]& ]}
      },
      AutoDelete->False,
      BaselinePosition->{1, 1},
      FrameStyle->GrayLevel[0.85],
      GridBoxAlignment->{"Columns" -> {{Left}}},
      GridBoxDividers->{
       "Columns" -> {{False}}, "Rows" -> {False, {True}, False}},
      GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
     "Grid"],
    Alignment->Top,
    Background->Dynamic[
      FEPrivate`If[
       FEPrivate`And[
        FEPrivate`SameQ[
         FEPrivate`Head[Typeset`newq$$], String], 
        FEPrivate`UnsameQ[Typeset`q$$, Typeset`newq$$]], 
       RGBColor[1., 0.975, 0.95], 
       GrayLevel[1]]],
    BaselinePosition->Baseline,
    FrameStyle->GrayLevel[0.85],
    ImageSize->Automatic,
    RoundingRadius->5,
    StripOnInput->False],
   DynamicModuleValues:>{}],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "WolframAlphaShortInput",
 CellLabel->"In[66]:=",ExpressionUUID->"49295d24-bb65-4e37-8fcc-a4c55dbf0670"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{"data", "[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.841781450806656*^9, 3.8417814708121595`*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"c7c136d6-8b17-4866-8fcb-40de9f26809e"],

Cell[BoxData[
 TemplateBox[{
  "DeleteCases","argx",
   "\"\:8c03\:7528 \\!\\(\\*RowBox[{\\\"DeleteCases\\\", \\\"[\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{\\\"_\\\", \\\",\\\", \\\"_Missing\\\"}], \
\\\"}\\\"}], \\\" \\\", RowBox[{\\\"{\\\", RowBox[{RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Afghanistan\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Afghanistan\\\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\
\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Afghanistan\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \\\"\\\\\\\"country\
\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", TemplateBox[List[\\\"52.1`\\\", \\\
\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\"\\\\\\\"Years\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{TemplateBox[List[\\\"\\\\\\\"Aland Islands\\\\\\\"\
\\\", RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"AlandIslands\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"AlandIslands\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
RowBox[{\\\"Missing\\\", \\\"[\\\", \\\"\\\\\\\"NotAvailable\\\\\\\"\\\", \
\\\"]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Albania\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Albania\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Albania\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"78.6`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Algeria\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Algeria\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Algeria\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"77.2`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"American Samoa\\\\\\\"\\\", RowBox[List[\
\\\"Entity\\\", \\\"[\\\", RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\
\\\", \\\"\\\\\\\"AmericanSamoa\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"AmericanSamoa\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"73.9`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Andorra\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Andorra\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Andorra\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"82.9`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Angola\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Angola\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Angola\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"60.6`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Anguilla\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Anguilla\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Anguilla\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"81.6`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Antigua and Barbuda\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"AntiguaBarbuda\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"AntiguaBarbuda\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"76.9`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Argentina\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Argentina\
\\\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\
\\\\\\\\\", \\\\\\\\\\\\\\\"Argentina\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"77.5`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Armenia\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Armenia\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Armenia\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"75.1`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Aruba\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Aruba\\\\\
\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\
\\\\\", \\\\\\\\\\\\\\\"Aruba\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"77.1`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Australia\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Australia\
\\\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\
\\\\\\\\\", \\\\\\\\\\\\\\\"Australia\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"82.4`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Austria\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Austria\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Austria\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"81.7`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Azerbaijan\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Azerbaijan\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Azerbaijan\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"73.`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \
\\\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Bahamas\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Bahamas\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Bahamas\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"72.9`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Bahrain\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Bahrain\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Bahrain\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"79.1`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Bangladesh\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Bangladesh\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Bangladesh\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"73.7`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Barbados\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Barbados\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Barbados\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"75.7`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Belarus\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Belarus\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Belarus\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"73.2`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Belgium\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Belgium\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Belgium\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"81.2`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Belize\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Belize\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Belize\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"74.7`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Benin\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Benin\\\\\
\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\
\\\\\", \\\\\\\\\\\\\\\"Benin\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"62.7`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Bermuda\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Bermuda\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Bermuda\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"81.5`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"3\\\", \\\"\
\[RightSkeleton]\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Bosnia and Herzegovina\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"BosniaHerzegovina\\\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\
\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"BosniaHerzegovina\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"77.1`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Botswana\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Botswana\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Botswana\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"63.8`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Bouvet Island\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"BouvetIsland\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"BouvetIsland\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
RowBox[{\\\"Missing\\\", \\\"[\\\", \\\"\\\\\\\"NotAvailable\\\\\\\"\\\", \
\\\"]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Brazil\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Brazil\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Brazil\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"74.3`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"British Indian Ocean Territory\\\\\\\"\\\
\", RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"BritishIndianOceanTerritory\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"BritishIndianOceanTerritory\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
RowBox[{\\\"Missing\\\", \\\"[\\\", \\\"\\\\\\\"NotAvailable\\\\\\\"\\\", \
\\\"]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"British Virgin Islands\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"BritishVirginIslands\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"BritishVirginIslands\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \\\"\\\\\\\
\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"78.9`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Brunei\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Brunei\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Brunei\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"77.5`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Bulgaria\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Bulgaria\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Bulgaria\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"74.8`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Burkina Faso\\\\\\\"\\\", RowBox[List[\\\
\"Entity\\\", \\\"[\\\", RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\
\", \\\"\\\\\\\"BurkinaFaso\\\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\
\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"BurkinaFaso\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \\\"\\\\\\\"country\
\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", TemplateBox[List[\\\"61.8`\\\", \\\
\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\"\\\\\\\"Years\\\\\\\"\\\"], \
\\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{TemplateBox[List[\\\"\\\\\\\"Burundi\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Burundi\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Burundi\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"61.4`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Cambodia\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Cambodia\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Cambodia\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"65.2`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Cameroon\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Cameroon\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Cameroon\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"59.4`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Canada\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Canada\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Canada\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"82.`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \
\\\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Cape Verde\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"CapeVerde\
\\\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\
\\\\\\\\\", \\\\\\\\\\\\\\\"CapeVerde\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"72.7`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Cayman Islands\\\\\\\"\\\", RowBox[List[\
\\\"Entity\\\", \\\"[\\\", RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\
\\\", \\\"\\\\\\\"CaymanIslands\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"CaymanIslands\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"81.4`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Central African Republic\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"CentralAfricanRepublic\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"CentralAfricanRepublic\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \\\"\\\\\
\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"53.3`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Chad\\\\\\\"\\\", RowBox[List[\\\"Entity\
\\\", \\\"[\\\", RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\
\\\\\\\"Chad\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Chad\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"57.5`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Chile\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Chile\\\\\
\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\
\\\\\", \\\\\\\\\\\\\\\"Chile\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"79.1`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"China\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"China\\\\\
\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\
\\\\\", \\\\\\\\\\\\\\\"China\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"75.8`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Christmas Island\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"ChristmasIsland\\\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\
\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"ChristmasIsland\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
RowBox[{\\\"Missing\\\", \\\"[\\\", \\\"\\\\\\\"NotAvailable\\\\\\\"\\\", \
\\\"]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Cocos Keeling Islands\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"CocosKeelingIslands\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"CocosKeelingIslands\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
RowBox[{\\\"Missing\\\", \\\"[\\\", \\\"\\\\\\\"NotAvailable\\\\\\\"\\\", \
\\\"]\\\"}]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Colombia\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \
\\\"\\\\\\\"Colombia\\\\\\\"\\\"]], \\\"]\\\"]], \
\\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\\\\\\\", \
\\\\\\\\\\\\\\\"Colombia\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"76.2`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{TemplateBox[List[\\\"\\\\\\\"Comoros\\\\\\\"\\\", \
RowBox[List[\\\"Entity\\\", \\\"[\\\", \
RowBox[List[\\\"\\\\\\\"Country\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"Comoros\\\
\\\\\"\\\"]], \\\"]\\\"]], \\\"\\\\\\\"Entity[\\\\\\\\\\\\\\\"Country\\\\\\\\\
\\\\\\\", \\\\\\\\\\\\\\\"Comoros\\\\\\\\\\\\\\\"]\\\\\\\"\\\", \
\\\"\\\\\\\"country\\\\\\\"\\\"], \\\"Entity\\\"], \\\",\\\", \
TemplateBox[List[\\\"64.9`\\\", \\\"\\\\\\\"yr\\\\\\\"\\\", \\\"years\\\", \\\
\"\\\\\\\"Years\\\\\\\"\\\"], \\\"Quantity\\\", Rule[SyntaxForm, Mod]]}], \
\\\"}\\\"}], \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \\\"199\\\", \\\"\
\[RightSkeleton]\\\"}]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) \:65f6\:4f7f\:7528\
\:4e86 \\!\\(\\*RowBox[{\\\"2\\\"}]\\) \:4e2a\:53c2\:6570\:ff1b\:5e94\:8be5\
\:7528 1 \:4e2a\:53c2\:6570.\"",2,67,44,19642527328004497291,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.841781471759384*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[67]:=",ExpressionUUID->"0e05676c-c1ec-4461-9503-\
9ff55452620b"],

Cell[BoxData[
 TemplateBox[{
  "Histogram","ldata",
   "\"\\!\\(\\*RowBox[{\\\"\[LeftSkeleton]\\\", \\\"1\\\", \\\"\
\[RightSkeleton]\\\"}]\\) \:4e0d\:662f\:4e00\:4e2a\:6709\:6548\:7684\:6570\
\:636e\:96c6\:6216\:8005\:6570\:636e\:96c6\:5217\:8868.\"",2,67,45,
   19642527328004497291,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.841781478951993*^9},
 CellLabel->
  "\:6b63\:5728\:8ba1\:7b97In[67]:=",ExpressionUUID->"1885a425-e7ef-4479-af8a-\
91660238470f"],

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"DeleteCases", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"_", ",", "_Missing"}], "}"}], " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Afghanistan\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Afghanistan\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Afghanistan\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"52.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Aland Islands\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"AlandIslands\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"AlandIslands\\\"]\"","\"country\""},
          "Entity"], ",", 
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Albania\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Albania\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Albania\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"78.6`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Algeria\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Algeria\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Algeria\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"77.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"American Samoa\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"AmericanSamoa\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"AmericanSamoa\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"73.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Andorra\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Andorra\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Andorra\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"82.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Angola\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Angola\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Angola\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"60.6`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Anguilla\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Anguilla\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Anguilla\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"81.6`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Antigua and Barbuda\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"AntiguaBarbuda\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"AntiguaBarbuda\\\"]\"",
           "\"country\""},
          "Entity"], ",", 
         TemplateBox[{"76.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Argentina\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Argentina\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Argentina\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"77.5`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Armenia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Armenia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Armenia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"75.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Aruba\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Aruba\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Aruba\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"77.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Australia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Australia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Australia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"82.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Austria\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Austria\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Austria\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"81.7`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Azerbaijan\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Azerbaijan\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Azerbaijan\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"73.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Bahamas\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Bahamas\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Bahamas\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"72.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Bahrain\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Bahrain\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Bahrain\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"79.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Bangladesh\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Bangladesh\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Bangladesh\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"73.7`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Barbados\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Barbados\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Barbados\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"75.7`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Belarus\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Belarus\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Belarus\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"73.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Belgium\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Belgium\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Belgium\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"81.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Belize\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Belize\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Belize\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"74.7`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Benin\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Benin\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Benin\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"62.7`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Bermuda\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Bermuda\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Bermuda\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"81.5`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Bhutan\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Bhutan\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Bhutan\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"71.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Bolivia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Bolivia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Bolivia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"69.8`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Caribbean Netherlands\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"BonaireSintEustatiusAndSaba\""}], 
             "]"}],"\"Entity[\\\"Country\\\", \\\"BonaireSintEustatiusAndSaba\
\\\"]\"","\"country\""},
          "Entity"], ",", 
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Bosnia and Herzegovina\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"BosniaHerzegovina\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"BosniaHerzegovina\\\"]\"",
           "\"country\""},
          "Entity"], ",", 
         TemplateBox[{"77.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Botswana\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Botswana\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Botswana\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"63.8`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Bouvet Island\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"BouvetIsland\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"BouvetIsland\\\"]\"","\"country\""},
          "Entity"], ",", 
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Brazil\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Brazil\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Brazil\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"74.3`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{
          "\"British Indian Ocean Territory\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"BritishIndianOceanTerritory\""}], 
             "]"}],"\"Entity[\\\"Country\\\", \\\"BritishIndianOceanTerritory\
\\\"]\"","\"country\""},
          "Entity"], ",", 
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"British Virgin Islands\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"BritishVirginIslands\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"BritishVirginIslands\\\"]\"",
           "\"country\""},
          "Entity"], ",", 
         TemplateBox[{"78.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Brunei\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Brunei\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Brunei\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"77.5`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Bulgaria\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Bulgaria\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Bulgaria\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"74.8`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Burkina Faso\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"BurkinaFaso\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"BurkinaFaso\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"61.8`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Burundi\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Burundi\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Burundi\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"61.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Cambodia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Cambodia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Cambodia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"65.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Cameroon\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Cameroon\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Cameroon\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"59.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Canada\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Canada\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Canada\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"82.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Cape Verde\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"CapeVerde\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"CapeVerde\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"72.7`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Cayman Islands\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"CaymanIslands\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"CaymanIslands\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"81.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Central African Republic\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"CentralAfricanRepublic\""}], 
             "]"}],"\"Entity[\\\"Country\\\", \\\"CentralAfricanRepublic\\\"]\
\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"53.3`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Chad\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Chad\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Chad\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"57.5`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Chile\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Chile\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Chile\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"79.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"China\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"China\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"China\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"75.8`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Christmas Island\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"ChristmasIsland\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"ChristmasIsland\\\"]\"",
           "\"country\""},
          "Entity"], ",", 
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Cocos Keeling Islands\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"CocosKeelingIslands\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"CocosKeelingIslands\\\"]\"",
           "\"country\""},
          "Entity"], ",", 
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Colombia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Colombia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Colombia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"76.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Comoros\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Comoros\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Comoros\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"64.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Cook Islands\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"CookIslands\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"CookIslands\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"76.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Costa Rica\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"CostaRica\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"CostaRica\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"78.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Croatia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Croatia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Croatia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"76.3`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Cuba\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Cuba\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Cuba\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"78.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Curacao\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Curacao\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Curacao\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"78.6`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Cyprus\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Cyprus\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Cyprus\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"79.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Czech Republic\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"CzechRepublic\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"CzechRepublic\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"78.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{
          "\"Democratic Republic of the Congo\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"DemocraticRepublicCongo\""}], 
             "]"}],"\"Entity[\\\"Country\\\", \
\\\"DemocraticRepublicCongo\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"58.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Denmark\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Denmark\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Denmark\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"81.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Djibouti\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Djibouti\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Djibouti\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"64.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Dominica\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Dominica\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Dominica\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"77.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Dominican Republic\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"DominicanRepublic\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"DominicanRepublic\\\"]\"",
           "\"country\""},
          "Entity"], ",", 
         TemplateBox[{"71.3`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"East Timor\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"EastTimor\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"EastTimor\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"68.7`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Ecuador\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Ecuador\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Ecuador\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"77.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Egypt\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Egypt\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Egypt\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"73.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"El Salvador\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"ElSalvador\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"ElSalvador\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"75.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Equatorial Guinea\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"EquatorialGuinea\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"EquatorialGuinea\\\"]\"",
           "\"country\""},
          "Entity"], ",", 
         TemplateBox[{"65.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Eritrea\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Eritrea\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Eritrea\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"65.6`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Estonia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Estonia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Estonia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"77.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Ethiopia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Ethiopia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Ethiopia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"65.475`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Falkland Islands\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"FalklandIslands\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"FalklandIslands\\\"]\"",
           "\"country\""},
          "Entity"], ",", 
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Faroe Islands\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"FaroeIslands\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"FaroeIslands\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"80.6`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Fiji\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Fiji\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Fiji\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"73.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Finland\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Finland\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Finland\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"81.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"France\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"France\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"France\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"82.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"French Guiana\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"FrenchGuiana\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"FrenchGuiana\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"77.121`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"French Polynesia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"FrenchPolynesia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"FrenchPolynesia\\\"]\"",
           "\"country\""},
          "Entity"], ",", 
         TemplateBox[{"77.5`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{
          "\"French Southern And Antarctic lands\"",RowBox[{"Entity", "[", 
             
             RowBox[{"\"Country\"", ",", 
               "\"FrenchSouthernAndAntarcticLands\""}], "]"}],
           "\"Entity[\\\"Country\\\", \
\\\"FrenchSouthernAndAntarcticLands\\\"]\"","\"country\""},
          "Entity"], ",", 
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Gabon\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Gabon\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Gabon\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"68.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Gambia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Gambia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Gambia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"65.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Gaza Strip\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"GazaStrip\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"GazaStrip\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"74.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Georgia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Georgia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Georgia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"76.6`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Germany\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Germany\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Germany\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"80.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Ghana\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Ghana\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Ghana\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"67.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Gibraltar\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Gibraltar\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Gibraltar\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"79.7`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Greece\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Greece\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Greece\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"80.8`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Greenland\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Greenland\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Greenland\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"72.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Grenada\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Grenada\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Grenada\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"74.8`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Guadeloupe\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Guadeloupe\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Guadeloupe\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"80.947`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Guam\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Guam\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Guam\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"76.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Guatemala\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Guatemala\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Guatemala\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"71.8`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Guernsey\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Guernsey\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Guernsey\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"82.7`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Guinea\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Guinea\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Guinea\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"62.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Guinea-Bissau\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"GuineaBissau\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"GuineaBissau\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"61.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Guyana\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Guyana\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Guyana\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"68.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Haiti\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Haiti\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Haiti\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"64.6`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Honduras\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Honduras\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Honduras\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"71.3`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Hong Kong\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"HongKong\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"HongKong\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"83.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Hungary\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Hungary\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Hungary\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"76.3`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Iceland\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Iceland\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Iceland\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"83.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"India\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"India\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"India\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"69.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Indonesia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Indonesia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Indonesia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"73.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Iran\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Iran\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Iran\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"74.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Iraq\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Iraq\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Iraq\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"74.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Ireland\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Ireland\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Ireland\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"81.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Isle of Man\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"IsleOfMan\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"IsleOfMan\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"81.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Israel\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Israel\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Israel\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"82.7`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Italy\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Italy\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Italy\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"82.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Ivory Coast\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"IvoryCoast\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"IvoryCoast\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"60.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Jamaica\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Jamaica\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Jamaica\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"74.5`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Japan\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Japan\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Japan\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"85.5`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Jersey\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Jersey\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Jersey\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"82.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Jordan\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Jordan\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Jordan\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"75.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Kazakhstan\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Kazakhstan\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Kazakhstan\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"71.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Kenya\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Kenya\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Kenya\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"64.6`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Kiribati\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Kiribati\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Kiribati\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"66.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Kosovo\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Kosovo\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Kosovo\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"71.64634146341464`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Kuwait\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Kuwait\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Kuwait\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"78.3`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Kyrgyzstan\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Kyrgyzstan\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Kyrgyzstan\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"71.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Laos\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Laos\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Laos\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"65.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Latvia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Latvia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Latvia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"74.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Lebanon\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Lebanon\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Lebanon\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"77.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Lesotho\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Lesotho\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Lesotho\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"53.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Liberia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Liberia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Liberia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"63.8`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Libya\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Libya\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Libya\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"76.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Liechtenstein\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Liechtenstein\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Liechtenstein\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"82.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Lithuania\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Lithuania\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Lithuania\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"75.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Luxembourg\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Luxembourg\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Luxembourg\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"82.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Macau\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Macau\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Macau\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"84.6`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"North Macedonia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Macedonia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Macedonia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"75.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Madagascar\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Madagascar\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Madagascar\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"66.6`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Malawi\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Malawi\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Malawi\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"62.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Malaysia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Malaysia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Malaysia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"75.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Maldives\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Maldives\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Maldives\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"76.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Mali\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Mali\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Mali\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"60.8`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Malta\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Malta\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Malta\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"82.7`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Marshall Islands\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"MarshallIslands\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"MarshallIslands\\\"]\"",
           "\"country\""},
          "Entity"], ",", 
         TemplateBox[{"73.6`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Martinique\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Martinique\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Martinique\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"81.41`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Mauritania\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Mauritania\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Mauritania\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"63.8`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Mauritius\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Mauritius\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Mauritius\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"76.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Mayotte\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Mayotte\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Mayotte\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"79.19`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Mexico\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Mexico\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Mexico\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"76.3`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Micronesia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Micronesia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Micronesia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"73.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Moldova\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Moldova\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Moldova\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"71.3`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Monaco\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Monaco\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Monaco\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"89.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Mongolia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Mongolia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Mongolia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"70.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Montenegro\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Montenegro\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Montenegro\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"77.116`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Montserrat\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Montserrat\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Montserrat\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"74.8`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Morocco\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Morocco\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Morocco\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"77.3`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Mozambique\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Mozambique\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Mozambique\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"54.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Myanmar\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Myanmar\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Myanmar\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"68.6`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Namibia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Namibia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Namibia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"64.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Nauru\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Nauru\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Nauru\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"67.8`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Nepal\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Nepal\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Nepal\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"71.3`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Netherlands\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Netherlands\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Netherlands\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"81.5`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"New Caledonia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"NewCaledonia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"NewCaledonia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"78.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"New Zealand\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"NewZealand\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"NewZealand\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"81.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Nicaragua\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Nicaragua\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Nicaragua\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"73.7`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Niger\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Niger\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Niger\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"56.3`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Nigeria\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Nigeria\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Nigeria\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"59.3`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Niue\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Niue\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Niue\\\"]\"","\"country\""},
          "Entity"], ",", 
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Norfolk Island\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"NorfolkIsland\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"NorfolkIsland\\\"]\"","\"country\""},
          "Entity"], ",", 
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Northern Mariana Islands\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"NorthernMarianaIslands\""}], 
             "]"}],"\"Entity[\\\"Country\\\", \\\"NorthernMarianaIslands\\\"]\
\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"75.6`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"North Korea\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"NorthKorea\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"NorthKorea\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"71.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Norway\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Norway\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Norway\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"82.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Oman\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Oman\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Oman\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"75.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Pakistan\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Pakistan\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Pakistan\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"68.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Palau\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Palau\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Palau\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"73.6`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Panama\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Panama\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Panama\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"78.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Papua New Guinea\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"PapuaNewGuinea\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"PapuaNewGuinea\\\"]\"",
           "\"country\""},
          "Entity"], ",", 
         TemplateBox[{"67.5`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Paraguay\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Paraguay\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Paraguay\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"77.6`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Peru\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Peru\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Peru\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"74.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Philippines\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Philippines\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Philippines\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"69.6`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Pitcairn Islands\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"PitcairnIslands\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"PitcairnIslands\\\"]\"",
           "\"country\""},
          "Entity"], ",", 
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Poland\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Poland\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Poland\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"77.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Portugal\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Portugal\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Portugal\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"80.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Puerto Rico\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"PuertoRico\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"PuertoRico\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"81.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Qatar\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Qatar\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Qatar\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"79.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Republic of the Congo\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"RepublicCongo\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"RepublicCongo\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"60.3`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"R\[EAcute]union\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Reunion\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Reunion\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"79.646`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Romania\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Romania\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Romania\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"75.6`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Russia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Russia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Russia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"71.3`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Rwanda\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Rwanda\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Rwanda\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"64.5`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Saint Barthelemy\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"SaintBarthelemy\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"SaintBarthelemy\\\"]\"",
           "\"country\""},
          "Entity"], ",", 
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{
          "\"Saint Helena, Ascension and Tristan da Cunha\"",
           RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"SaintHelena\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"SaintHelena\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"79.8`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Saint Kitts and Nevis\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"SaintKittsNevis\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"SaintKittsNevis\\\"]\"",
           "\"country\""},
          "Entity"], ",", 
         TemplateBox[{"76.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Saint Lucia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"SaintLucia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"SaintLucia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"78.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Saint Martin\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"SaintMartin\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"SaintMartin\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"79.62195121951221`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Saint Pierre and Miquelon\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"SaintPierreMiquelon\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"SaintPierreMiquelon\\\"]\"",
           "\"country\""},
          "Entity"], ",", 
         TemplateBox[{"80.7`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{
          "\"Saint Vincent and the Grenadines\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"SaintVincentGrenadines\""}], 
             "]"}],"\"Entity[\\\"Country\\\", \\\"SaintVincentGrenadines\\\"]\
\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"75.8`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Samoa\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Samoa\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Samoa\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"74.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"San Marino\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"SanMarino\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"SanMarino\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"83.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{
          "\"S\[ATilde]o Tom\[EAcute] and Pr\[IAcute]ncipe\"",
           RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"SaoTomePrincipe\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"SaoTomePrincipe\\\"]\"",
           "\"country\""},
          "Entity"], ",", 
         TemplateBox[{"65.7`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Saudi Arabia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"SaudiArabia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"SaudiArabia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"75.7`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Senegal\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Senegal\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Senegal\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"62.5`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Serbia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Serbia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Serbia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"75.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Seychelles\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Seychelles\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Seychelles\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"75.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Sierra Leone\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"SierraLeone\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"SierraLeone\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"59.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Singapore\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Singapore\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Singapore\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"85.5`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Sint Maarten\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"SintMaarten\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"SintMaarten\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"78.5`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Slovakia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Slovakia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Slovakia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"77.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Slovenia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Slovenia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Slovenia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"81.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Solomon Islands\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"SolomonIslands\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"SolomonIslands\\\"]\"",
           "\"country\""},
          "Entity"], ",", 
         TemplateBox[{"75.8`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Somalia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Somalia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Somalia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"53.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"South Africa\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"SouthAfrica\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"SouthAfrica\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"64.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{
          "\"South Georgia and the South Sandwich Islands\"",
           RowBox[{"Entity", "[", 
             
             RowBox[{"\"Country\"", ",", 
               "\"SouthGeorgiaAndTheSouthSandwichIslands\""}], "]"}],
           "\"Entity[\\\"Country\\\", \
\\\"SouthGeorgiaAndTheSouthSandwichIslands\\\"]\"","\"country\""},
          "Entity"], ",", 
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"South Korea\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"SouthKorea\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"SouthKorea\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"82.5`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"South Sudan\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"SouthSudan\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"SouthSudan\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"56.811`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Spain\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Spain\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Spain\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"81.8`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Sri Lanka\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"SriLanka\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"SriLanka\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"77.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Sudan\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Sudan\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Sudan\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"65.8`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Suriname\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Suriname\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Suriname\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"72.8`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Svalbard\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Svalbard\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Svalbard\\\"]\"","\"country\""},
          "Entity"], ",", 
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Eswatini\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Swaziland\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Swaziland\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"57.754`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Sweden\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Sweden\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Sweden\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"82.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Switzerland\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Switzerland\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Switzerland\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"82.7`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Syria\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Syria\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Syria\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"75.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Taiwan\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Taiwan\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Taiwan\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"80.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Tajikistan\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Tajikistan\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Tajikistan\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"68.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Tanzania\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Tanzania\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Tanzania\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"63.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Thailand\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Thailand\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Thailand\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"75.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Togo\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Togo\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Togo\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"65.8`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Tokelau\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Tokelau\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Tokelau\\\"]\"","\"country\""},
          "Entity"], ",", 
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Tonga\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Tonga\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Tonga\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"76.6`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Trinidad and Tobago\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"TrinidadTobago\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"TrinidadTobago\\\"]\"",
           "\"country\""},
          "Entity"], ",", 
         TemplateBox[{"73.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Tunisia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Tunisia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Tunisia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"75.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Turkey\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Turkey\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Turkey\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"75.3`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Turkmenistan\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Turkmenistan\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Turkmenistan\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"70.7`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Turks and Caicos Islands\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"TurksCaicosIslands\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"TurksCaicosIslands\\\"]\"",
           "\"country\""},
          "Entity"], ",", 
         TemplateBox[{"80.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Tuvalu\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Tuvalu\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Tuvalu\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"67.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Uganda\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Uganda\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Uganda\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"56.3`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Ukraine\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Ukraine\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Ukraine\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"72.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"United Arab Emirates\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"UnitedArabEmirates\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"UnitedArabEmirates\\\"]\"",
           "\"country\""},
          "Entity"], ",", 
         TemplateBox[{"78.7`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"United Kingdom\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"UnitedKingdom\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"UnitedKingdom\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"80.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"United States\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"UnitedStates\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"UnitedStates\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"80.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{
          "\"United States Minor Outlying Islands\"",RowBox[{"Entity", "[", 
             
             RowBox[{"\"Country\"", ",", 
               "\"UnitedStatesMinorOutlyingIslands\""}], "]"}],
           "\"Entity[\\\"Country\\\", \
\\\"UnitedStatesMinorOutlyingIslands\\\"]\"","\"country\""},
          "Entity"], ",", 
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{
          "\"United States Virgin Islands\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"UnitedStatesVirginIslands\""}], 
             "]"}],"\"Entity[\\\"Country\\\", \\\"UnitedStatesVirginIslands\\\
\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"79.5`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Uruguay\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Uruguay\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Uruguay\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"77.6`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Uzbekistan\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Uzbekistan\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Uzbekistan\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"74.3`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Vanuatu\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Vanuatu\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Vanuatu\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"74.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Vatican City\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"VaticanCity\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"VaticanCity\\\"]\"","\"country\""},
          "Entity"], ",", 
         RowBox[{"Missing", "[", "\<\"NotAvailable\"\>", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Venezuela\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Venezuela\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Venezuela\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"76.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Vietnam\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Vietnam\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Vietnam\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"73.9`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Wallis and Futuna Islands\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"WallisFutuna\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"WallisFutuna\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"80.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"West Bank\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"WestBank\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"WestBank\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"75.4`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Western Sahara\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"WesternSahara\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"WesternSahara\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"63.8`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Yemen\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Yemen\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Yemen\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"66.2`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Zambia\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Zambia\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Zambia\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"53.`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"\"Zimbabwe\"",RowBox[{"Entity", "[", 
             RowBox[{"\"Country\"", ",", "\"Zimbabwe\""}], "]"}],
           "\"Entity[\\\"Country\\\", \\\"Zimbabwe\\\"]\"","\"country\""},
          "Entity"], ",", 
         TemplateBox[{"61.1`","\"yr\"","years","\"Years\""},
          "Quantity"]}], "}"}]}], "}"}]}], "]"}], "[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]], "Output",
 CellChangeTimes->{3.8417814795620575`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"4efbbb47-18f2-4ff4-863f-4fdba9127478"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"dataAfrica", "=", " ", 
  RowBox[{"DeleteCases", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"CountryData", "[", 
         RowBox[{"i", ",", "\"\<LifeExpectancy\>\""}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"CountryData", "[", "\"\<Asia\>\"", "]"}]}], "}"}]}], "]"}], 
    ",", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{"_", ",", "_Missing"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.84178158232129*^9, 3.8417817698264666`*^9}},
 EmphasizeSyntaxErrors->
  True,ExpressionUUID->"e42710e1-860e-4e50-a13c-a685f6f3cf64"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"dataAfrica", "=", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{"Table", "[", 
            RowBox[{"{", 
             RowBox[{
             "i", ",", "CountryDatafi", ",", "HLifeExpectancyn"}]}]}]}]}], 
         "]"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", 
         RowBox[{"CountryData", "[", 
          RowBox[{"nAfrica1", "'"}], "]"}]}], "}"}]}], "]"}], ",", "J", ",", 
     "\[LongDash]", "Missing"}], "}"}], "]"}], ";"}], "\n", 
 RowBox[{"Mean", "[", 
  RowBox[{"dataAfrica", "[", 
   RowBox[{"All", ",", "2"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8417817798120065`*^9, 3.841781779821788*^9}},
 EmphasizeSyntaxErrors->True,
 CellLabel->"In[68]:=",ExpressionUUID->"57f0b364-5686-402f-a8fe-3894cf1a9caf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "Title",
 CellChangeTimes->{{3.8417781096011786`*^9, 3.841778113750911*^9}, 
   3.8417785630921774`*^9, {3.8417786666820927`*^9, 3.8417786800822287`*^9}, 
   3.8417815809447103`*^9, 
   3.8417817775820417`*^9},ExpressionUUID->"60ab0b05-ef19-40b1-b3b7-\
e170d2dc3cd1"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8417772756209664`*^9, 3.8417772756505375`*^9}, 
   3.8417777927610464`*^9, 
   3.8417780474983673`*^9},ExpressionUUID->"a36663cd-e225-44df-9d87-\
3ef9c5126b7f"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8417777702010245`*^9, 3.841777777130847*^9}, 
   3.8417778082608128`*^9, 
   3.8417780450962543`*^9},ExpressionUUID->"076acc6a-8b0c-4407-8e76-\
b3f1a9482b7d"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8417772652607517`*^9, 
  3.841777282890584*^9}},ExpressionUUID->"75daf5bf-922e-4212-82ff-\
178d07d25b46"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.84177728116083*^9, 
  3.8417772811806436`*^9}},ExpressionUUID->"cdea1811-9d55-4a6c-afb4-\
07d9caf8084f"]
}, Open  ]]
},
WindowSize->{766, 809},
WindowMargins->{{Automatic, -7}, {Automatic, 0}},
TaggingRules->{"TryRealOnly" -> False},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (2019\:5e745\:670818\
\:65e5)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 171, 3, 67, "Chapter",ExpressionUUID->"b4374dd0-12af-42f8-bb69-8616f9e902da"],
Cell[CellGroupData[{
Cell[776, 29, 385, 10, 48, "Input",ExpressionUUID->"7c1f851e-6632-4907-9446-20a193365eb1"],
Cell[1164, 41, 156, 2, 32, "Output",ExpressionUUID->"f986e425-5607-430e-a5af-96379a49564d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1357, 48, 197, 3, 28, "Input",ExpressionUUID->"4bc2394a-337a-40df-a69b-573e8912932e"],
Cell[1557, 53, 169, 3, 49, "Output",ExpressionUUID->"375e2616-e9c6-474a-a45e-e4731756f607"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1763, 61, 225, 4, 45, "Input",ExpressionUUID->"66c84cdc-3507-4711-80c9-32a56d7a4100"],
Cell[1991, 67, 189, 2, 32, "Output",ExpressionUUID->"c9a9cefb-b022-4c33-9cc2-5e768a43ef5d"]
}, Open  ]],
Cell[2195, 72, 13192, 323, 64, "WolframAlphaShortInput",ExpressionUUID->"1a820b64-5bab-40d0-be1d-eb96b529ec3a"],
Cell[15390, 397, 195, 5, 45, InheritFromParent,ExpressionUUID->"a1c99397-7c52-472e-92fd-c7a9ae45b04e"],
Cell[15588, 404, 445, 13, 45, "Input",ExpressionUUID->"b3667dad-376e-45f0-9433-16b8acd46301"],
Cell[CellGroupData[{
Cell[16058, 421, 389, 9, 64, InheritFromParent,ExpressionUUID->"17105f2c-ac94-42ee-ae2f-f9c6bd5e0c01"],
Cell[16450, 432, 176, 2, 32, "Output",ExpressionUUID->"8c03da3e-226e-4274-a002-8c8f91ea1d29"],
Cell[16629, 436, 291, 7, 32, "Output",ExpressionUUID->"38d6785b-0dee-4c1f-afd1-fd9e31692158"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16957, 448, 254, 4, 28, InheritFromParent,ExpressionUUID->"8aad14a8-a656-47ac-a77f-3ab0b959b8ca"],
Cell[17214, 454, 203, 3, 32, "Output",ExpressionUUID->"2d5fbd46-86b3-48cf-a41e-64cdaa1d10a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17454, 462, 218, 4, 28, "Input",ExpressionUUID->"9c6b0f24-90ff-4947-bfce-c6ce6b08af25"],
Cell[17675, 468, 152, 2, 32, "Output",ExpressionUUID->"df413463-399c-4017-aa9f-7aed5473c639"]
}, Open  ]],
Cell[17842, 473, 365, 6, 34, "Text",ExpressionUUID->"0cfb0856-b545-4a63-90a5-7c02b86c85ef"],
Cell[18210, 481, 254, 4, 45, "Input",ExpressionUUID->"57bbfe29-819d-4515-91de-270a54d336c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18501, 490, 177, 3, 67, "Chapter",ExpressionUUID->"a143bd34-1e58-4043-ab00-aa21a5aa6ef9"],
Cell[18681, 495, 194, 4, 34, "Text",ExpressionUUID->"55215beb-8f88-4340-8ce9-1774d7850f4d"],
Cell[CellGroupData[{
Cell[18900, 503, 421, 10, 45, "Input",ExpressionUUID->"2ce8a6f6-dd78-486b-a141-a35dba600ac4"],
Cell[19324, 515, 230, 5, 32, "Output",ExpressionUUID->"8e8731a8-c7c7-4252-9dce-fe008553576d"]
}, Open  ]],
Cell[19569, 523, 177, 3, 34, "Text",ExpressionUUID->"a25d5b78-4787-4f45-bd97-8e8efaae1c39"],
Cell[CellGroupData[{
Cell[19771, 530, 266, 7, 45, "Input",ExpressionUUID->"58bf4a70-2ffd-4455-bb7f-82449c0c1137"],
Cell[20040, 539, 247, 6, 49, "Output",ExpressionUUID->"de7559ca-3bae-48e1-b06d-106c42fb68a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20324, 550, 307, 8, 45, "Input",ExpressionUUID->"30aad25a-c0f9-4144-841f-033c13eb3ed6"],
Cell[20634, 560, 229, 5, 32, "Output",ExpressionUUID->"635a618e-9b63-4759-b7a1-2c5bd57635e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20900, 570, 29411, 592, 84, "WolframAlphaShortInput",ExpressionUUID->"c77cab2b-49b2-417b-88f1-a9e234f033fe"],
Cell[50314, 1164, 664, 13, 45, "Message",ExpressionUUID->"b7b88bef-0eb3-4414-b884-d35aa30360fd"],
Cell[50981, 1179, 201, 4, 49, "Output",ExpressionUUID->"75ff4ebc-f8d4-42c4-8ac6-d5a20b83cdad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51219, 1188, 554, 16, 66, "Input",ExpressionUUID->"fc950dc1-a662-421a-aa61-626401e0cbd4"],
Cell[51776, 1206, 329, 9, 49, "Output",ExpressionUUID->"84f079d2-0ac6-468d-9ee2-ead3b939db9e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52142, 1220, 376, 10, 45, "Input",ExpressionUUID->"fbf002e1-b4b1-4788-8e4e-354cae31bc37"],
Cell[52521, 1232, 768, 24, 56, "Output",ExpressionUUID->"a10da237-ea02-4a05-b0bb-4717f54e2452"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53338, 1262, 171, 3, 67, "Chapter",ExpressionUUID->"75589047-4ced-4386-9ac1-c56c9204e16c"],
Cell[CellGroupData[{
Cell[53534, 1269, 574, 18, 66, "Input",ExpressionUUID->"ed11f8a0-cba9-47ba-b191-c34e5b9e5f05"],
Cell[54111, 1289, 3449, 76, 239, "Output",ExpressionUUID->"fb9151cb-dbcb-4f66-a9bb-06846bc2dc54"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57597, 1370, 614, 18, 45, "Input",ExpressionUUID->"1566698c-6934-4355-8990-cc351aa094c1"],
Cell[58214, 1390, 7319, 140, 245, "Output",ExpressionUUID->"fca4889c-473b-493c-a24d-14e8672f548a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65570, 1535, 14655, 356, 64, "WolframAlphaShortInput",ExpressionUUID->"26a66f48-3eca-42b0-9ab4-c0c0c7405c5b"],
Cell[80228, 1893, 18577, 325, 240, "Output",ExpressionUUID->"6de7f184-3c6c-49bc-8e6a-f3d4fb8d98d8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98842, 2223, 803, 24, 45, "Input",ExpressionUUID->"29363192-bed0-4018-848c-d662d823c104"],
Cell[99648, 2249, 270291, 4479, 274, "Output",ExpressionUUID->"552f958c-8b45-4436-9a08-fe77ed86e5dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[369976, 6733, 17983, 427, 64, "WolframAlphaShortInput",ExpressionUUID->"71c2e174-c8d1-46ea-a101-c656351150a4"],
Cell[387962, 7162, 146758, 2432, 302, "Output",ExpressionUUID->"874f1362-b53c-4e19-a745-cc5cc70d0df8"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[534769, 9600, 133, 3, 67, "Chapter",ExpressionUUID->"fca228aa-822f-4e42-88dc-a9783f96dde3"],
Cell[534905, 9605, 154, 3, 28, InheritFromParent,ExpressionUUID->"503dd0bf-9ce2-4371-833c-85180260b6c1"],
Cell[CellGroupData[{
Cell[535084, 9612, 388, 10, 45, "Input",ExpressionUUID->"ca24fbd2-1f64-4710-97af-2659cbc96c27"],
Cell[535475, 9624, 252, 4, 32, "Output",ExpressionUUID->"78fe9641-0b6d-4e09-bab3-d149c14c536c"]
}, Open  ]],
Cell[535742, 9631, 449, 9, 56, "Text",ExpressionUUID->"a38c2325-bc39-472f-a0ce-430a2977d5ed"],
Cell[CellGroupData[{
Cell[536216, 9644, 226, 4, 66, "Input",ExpressionUUID->"91d7d53e-c8b1-4d4d-bcfd-d947613ac8bb"],
Cell[536445, 9650, 150, 2, 32, "Output",ExpressionUUID->"a30bba18-275e-4255-8d9b-7c86deba4c2f"]
}, Open  ]],
Cell[536610, 9655, 558, 10, 34, "Text",ExpressionUUID->"07e37630-c40c-4685-9322-92125c00223a"],
Cell[CellGroupData[{
Cell[537193, 9669, 376, 10, 66, "Input",ExpressionUUID->"12333058-540f-436c-beda-18fbddbd7925"],
Cell[537572, 9681, 1552, 40, 247, "Output",ExpressionUUID->"f79f75e8-1055-4250-ae0a-ed3ca11c6dcd"]
}, Open  ]],
Cell[539139, 9724, 742, 21, 48, "Input",ExpressionUUID->"b87b5ff7-01d8-4a55-96d2-1c9eb7c9e7da"],
Cell[539884, 9747, 298, 5, 34, "Text",ExpressionUUID->"ff5b3fb6-a7b1-4d84-8907-dfc8a497c374"],
Cell[CellGroupData[{
Cell[540207, 9756, 227, 4, 66, "Input",ExpressionUUID->"93b11a7e-8aad-46dc-83ba-e0772905301a"],
Cell[540437, 9762, 149, 2, 32, "Output",ExpressionUUID->"7cd7997d-5b7c-47fa-9f9d-94a623aab32c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[540635, 9770, 159, 3, 67, "Chapter",ExpressionUUID->"e1321e6f-a20e-40f2-aa43-f9b07f520e87"],
Cell[CellGroupData[{
Cell[540819, 9777, 493, 12, 45, "Input",ExpressionUUID->"59f6c4d5-6688-4667-b632-452c91b8424b"],
Cell[541315, 9791, 264, 5, 32, "Output",ExpressionUUID->"99f4d594-43d1-47b3-b5af-8b097af54a99"]
}, Open  ]],
Cell[CellGroupData[{
Cell[541616, 9801, 13579, 334, 64, "WolframAlphaShortInput",ExpressionUUID->"5fca315c-b6d2-4006-85a9-18fd71ae3c4a"],
Cell[555198, 10137, 198, 4, 32, "Output",ExpressionUUID->"640e6f00-d746-4e99-87ab-520ae956cd22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[555433, 10146, 126901, 2438, 1351, "WolframAlphaShortInput",ExpressionUUID->"1bf11ebc-71a2-4164-b1bb-c2465bc9c2fd"],
Cell[682337, 12586, 215, 4, 42, "Output",ExpressionUUID->"2fc1f936-4d2f-4825-92b8-131adbd10c06"]
}, Open  ]],
Cell[CellGroupData[{
Cell[682589, 12595, 297, 6, 66, "Input",ExpressionUUID->"e8d5bd65-e507-4722-84d6-bb82fd36faf8"],
Cell[682889, 12603, 213, 4, 42, "Output",ExpressionUUID->"0495faf9-7512-4c2c-871a-0b32b1690d8c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[683139, 12612, 288, 7, 45, "Input",ExpressionUUID->"9c0cfd90-d1c6-4a18-a570-f32dc4a4196f"],
Cell[683430, 12621, 268, 7, 46, "Output",ExpressionUUID->"1818a18c-b501-449b-9e9b-7ffdd369690e"]
}, Open  ]],
Cell[683713, 12631, 456, 9, 56, "Text",ExpressionUUID->"9b44b841-49ee-4c18-8b90-0319f9e4b955"],
Cell[CellGroupData[{
Cell[684194, 12644, 758, 19, 66, "Input",ExpressionUUID->"87fb0ec8-81bc-4f82-8e98-e957439b3128"],
Cell[684955, 12665, 30279, 482, 249, "Message",ExpressionUUID->"ae46b11c-6fea-4be9-8fd4-d92b3c8079ca"]
}, Open  ]],
Cell[CellGroupData[{
Cell[715271, 13152, 261, 4, 45, InheritFromParent,ExpressionUUID->"292addc7-5f26-4e34-b942-83a2b3235ecf"],
Cell[715535, 13158, 10182, 227, 382, "Output",ExpressionUUID->"8a045dc6-6ae9-4343-bce7-13634826e098"]
}, Open  ]],
Cell[725732, 13388, 189, 3, 31, "Item",ExpressionUUID->"4f6fec44-6897-468d-81a1-9102eda90b6d"],
Cell[CellGroupData[{
Cell[725946, 13395, 502, 12, 70, "Input",ExpressionUUID->"d8e4d96d-30b5-42a6-87c0-f445377e5d38"],
Cell[726451, 13409, 10156, 227, 415, "Output",ExpressionUUID->"7e8f744a-ef5a-43a9-8e85-ff970b8c6d72"]
}, Open  ]],
Cell[CellGroupData[{
Cell[736644, 13641, 210, 3, 45, InheritFromParent,ExpressionUUID->"e8683f83-4995-4c09-852a-4d251b426c39"],
Cell[736857, 13646, 159, 2, 32, "Output",ExpressionUUID->"1a718175-f6c1-474e-ae8a-1842302c067e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[737053, 13653, 215, 3, 45, "Input",ExpressionUUID->"c56fa6e1-ecc3-424d-a48a-00f1d6ec3eef"],
Cell[737271, 13658, 601, 12, 24, "Message",ExpressionUUID->"55a14a6e-dd8b-402c-b8d6-f52e0b610f20"]
}, Open  ]],
Cell[737887, 13673, 2595, 72, 65, "WolframAlphaShortInput",ExpressionUUID->"01c35279-a36a-49ba-9b84-0512ddce4d62"],
Cell[740485, 13747, 14834, 357, 75, "WolframAlphaShortInput",ExpressionUUID->"85643b34-5103-4309-84b1-2f64d86e0545"],
Cell[755322, 14106, 2592, 72, 65, "WolframAlphaShortInput",ExpressionUUID->"49295d24-bb65-4e37-8fcc-a4c55dbf0670"],
Cell[CellGroupData[{
Cell[757939, 14182, 266, 5, 45, "Input",ExpressionUUID->"c7c136d6-8b17-4866-8fcb-40de9f26809e"],
Cell[758208, 14189, 28589, 454, 281, "Message",ExpressionUUID->"0e05676c-c1ec-4461-9503-9ff55452620b"],
Cell[786800, 14645, 485, 11, 24, "Message",ExpressionUUID->"1885a425-e7ef-4479-af8a-91660238470f"],
Cell[787288, 14658, 92808, 2034, 3000, "Output",ExpressionUUID->"4efbbb47-18f2-4ff4-863f-4fdba9127478"]
}, Open  ]],
Cell[880111, 16695, 686, 18, 85, "Input",ExpressionUUID->"e42710e1-860e-4e50-a13c-a685f6f3cf64"],
Cell[880800, 16715, 895, 26, 119, "Input",ExpressionUUID->"57f0b364-5686-402f-a8fe-3894cf1a9caf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[881732, 16746, 276, 5, 96, "Title",ExpressionUUID->"60ab0b05-ef19-40b1-b3b7-e170d2dc3cd1"],
Cell[882011, 16753, 209, 4, 28, InheritFromParent,ExpressionUUID->"a36663cd-e225-44df-9d87-3ef9c5126b7f"],
Cell[882223, 16759, 207, 4, 28, "Input",ExpressionUUID->"076acc6a-8b0c-4407-8e76-b3f1a9482b7d"],
Cell[882433, 16765, 154, 3, 28, "Input",ExpressionUUID->"75daf5bf-922e-4212-82ff-178d07d25b46"],
Cell[882590, 16770, 153, 3, 28, InheritFromParent,ExpressionUUID->"cdea1811-9d55-4a6c-afb4-07d9caf8084f"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

